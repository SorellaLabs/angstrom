name: Check Rust
on:
  pull_request:

# Stop in-progress on new push
concurrency:
  group: ${{ github.ref }}
  cancel-in-progress: true

env:
  CARGO_TERM_COLOR: always
  FOUNDRY_PROFILE: ci
  CARGO_INCREMENTAL: "0"
  RUSTFLAGS: "-C debuginfo=0"

jobs:
  cargo-fmt:
    name: cargo fmt
    runs-on: ubuntu-latest
    timeout-minutes: 25
    steps:
      - name: Check-Out
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Install Nightly
        run: |
          rustup toolchain install nightly
          rustup component add --toolchain nightly-x86_64-unknown-linux-gnu rustfmt

      - name: Run formatting
        run: cargo +nightly fmt --all -- --check

  cargo-clippy:
    name: cargo clippy
    runs-on: ubuntu-latest
    timeout-minutes: 25
    steps:
      - name: Check-Out
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Install Foundry
        uses: foundry-rs/foundry-toolchain@v1
        with:
          version: stable
          cache: true

      - uses: Swatinem/rust-cache@v2
        with:
          key: cargo-clippy-${{ runner.os }}
          cache-on-failure: true
          save-if: true

      - name: Run Clippy
        run: cargo clippy --workspace --all-features --profile ci

  cargo-test-unit:
    name: cargo test (unit)
    runs-on: ubuntu-latest
    timeout-minutes: 25
    steps:
      - name: Check-Out
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Install Foundry
        uses: foundry-rs/foundry-toolchain@v1
        with:
          version: stable
          cache: true

      - uses: Swatinem/rust-cache@v2
        with:
          key: cargo-test-unit-${{ runner.os }}
          cache-on-failure: true
          save-if: true

      - uses: taiki-e/install-action@nextest

      - name: Run unit tests
        run: cargo nextest run --workspace --exclude testnet --retries 3 --no-tests=warn --cargo-profile ci

  cargo-test-integration:
    name: cargo test (integration)
    runs-on: ubuntu-latest
    timeout-minutes: 25
    steps:
      - name: Check-Out
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Install Foundry
        uses: foundry-rs/foundry-toolchain@v1
        with:
          version: stable
          cache: true

      - uses: Swatinem/rust-cache@v2
        with:
          key: cargo-test-integration-${{ runner.os }}
          cache-on-failure: true
          save-if: true

      - uses: taiki-e/install-action@nextest

      - name: Run integration tests
        run: cargo nextest run --package testnet --retries 1 --no-tests=warn --cargo-profile ci

  contracts:
    name: forge fmt && forge test
    runs-on: ubuntu-latest
    timeout-minutes: 25
    defaults:
      run:
        working-directory: ./contracts
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Install Foundry
        uses: foundry-rs/foundry-toolchain@v1
        with:
          version: stable
          cache: true

      - name: Install uv
        uses: astral-sh/setup-uv@v3
        with:
          version: 0.4.18

      - name: Setup python virtual environment
        run: uv venv .venv --python 3.12

      - name: Sync python dependencies
        run: uv pip install -r requirements.txt

      - name: Show Forge version
        run: forge --version

      - name: Utilize Shared Rust Cache
        uses: Swatinem/rust-cache@v2
        with:
          cache-on-failure: true
          shared-key: "rust-cache-v1"
          save-if: true
          workspaces: "./contracts -> target"

      - name: Run Forge fmt
        run: forge fmt --check
        id: fmt

      - name: Run Forge tests
        run: forge test -vvv --ffi
        id: test
