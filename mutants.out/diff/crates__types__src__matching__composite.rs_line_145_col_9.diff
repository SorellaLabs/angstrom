--- crates/types/src/matching/composite.rs
+++ replace CompositeOrder<'a>::partial_fill_t1 -> Self with Default::default()
@@ -137,17 +137,17 @@
             }
         }
         0
     }
 
     /// Compute the final state for the AMM and for the Debt when we partially
     /// fill this order with T1
     pub fn partial_fill_t1(&self, _partial_q_t1: u128) -> Self {
-        self.clone()
+        Default::default() /* ~ changed by cargo-mutants ~ */
     }
 
     /// Given an incoming amount of T0, determine how much of that T0 should go
     /// to the debt vs the AMM to ensure an equal movement of both
     /// quantities.  Works fine if we have only a debt or only an AMM
     pub fn t0_quantities(
         &self,
         t0_input: u128,
