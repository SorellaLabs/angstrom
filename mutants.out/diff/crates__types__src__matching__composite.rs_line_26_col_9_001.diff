--- crates/types/src/matching/composite.rs
+++ replace CompositeOrder<'a>::debt -> Option<&Debt> with Some(&Default::default())
@@ -18,17 +18,17 @@
     pub fn new(debt: Option<Debt>, amm: Option<PoolPrice<'a>>, bound_price: Option<Ray>) -> Self {
         if debt.is_none() && amm.is_none() {
             panic!("Can't make a composite order with neither a debt nor an AMM");
         }
         Self { debt, amm, bound_price }
     }
 
     pub fn debt(&self) -> Option<&Debt> {
-        self.debt.as_ref()
+        Some(&Default::default()) /* ~ changed by cargo-mutants ~ */
     }
 
     pub fn has_amm(&self) -> bool {
         self.amm.is_some()
     }
 
     pub fn has_debt(&self) -> bool {
         self.debt.is_some()
