--- crates/types/src/matching/composite.rs
+++ replace CompositeOrder<'a>::amm -> Option<&PoolPrice<'a>> with Some(&Default::default())
@@ -30,17 +30,17 @@
         self.amm.is_some()
     }
 
     pub fn has_debt(&self) -> bool {
         self.debt.is_some()
     }
 
     pub fn amm(&self) -> Option<&PoolPrice<'a>> {
-        self.amm.as_ref()
+        Some(&Default::default()) /* ~ changed by cargo-mutants ~ */
     }
 
     pub fn bound(&self) -> Option<Ray> {
         self.bound_price
     }
 
     pub fn calc_quantities(&self, target_price: Ray) -> (u128, u128) {
         debug!(target_price = ?target_price, "Calculating quantities to target price");
