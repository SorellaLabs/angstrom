--- crates/types/src/matching/composite.rs
+++ replace CompositeOrder<'a>::find_closest_bound -> Ray with Default::default()
@@ -59,28 +59,17 @@
         }
         if let Some(d) = self.debt.as_ref() {
             debug!(debt_price = ?d.price(), "Debt final stats");
         }
         (amm_q, debt_q)
     }
 
     fn find_closest_bound(&self, external_bound: Ray) -> Ray {
-        if let Some(ib) = self.bound_price {
-            let cur_price = self.start_price();
-            let external_dp = external_bound.abs_diff(*cur_price);
-            let internal_dp = ib.abs_diff(*cur_price);
-            if internal_dp < external_dp {
-                ib
-            } else {
-                external_bound
-            }
-        } else {
-            external_bound
-        }
+        Default::default() /* ~ changed by cargo-mutants ~ */
     }
 
     fn debt_direction(&self, target_price: Ray) -> Option<Direction> {
         self.debt
             .map(|d| Direction::from_prices(d.price(), target_price))
     }
 
     /// Return the quantity of t0 available to fill from this order to the
