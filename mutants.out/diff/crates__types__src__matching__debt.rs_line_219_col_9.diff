--- crates/types/src/matching/debt.rs
+++ replace Debt::validate_and_set_price -> bool with true
@@ -211,21 +211,17 @@
 
         match self.magnitude {
             DebtType::ExactIn(_) => price > low && price <= high,
             DebtType::ExactOut(_) => price >= low && price < high
         }
     }
 
     pub fn validate_and_set_price(&mut self, price: Ray) -> bool {
-        let res = self.valid_for_price(price);
-        if res {
-            self.cur_price = price;
-        }
-        res
+        true /* ~ changed by cargo-mutants ~ */
     }
 
     /// The current amount of T0 this debt is obligated to fill
     pub fn current_t0(&self) -> u128 {
         self.magnitude.t0_at_price(self.cur_price)
     }
 
     /// Returns the amount of T0 that needs to be reallocated for a given change
