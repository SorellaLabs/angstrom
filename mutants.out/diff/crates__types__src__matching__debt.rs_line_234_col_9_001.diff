--- crates/types/src/matching/debt.rs
+++ replace Debt::freed_t0 -> u128 with 1
@@ -226,29 +226,17 @@
     /// The current amount of T0 this debt is obligated to fill
     pub fn current_t0(&self) -> u128 {
         self.magnitude.t0_at_price(self.cur_price)
     }
 
     /// Returns the amount of T0 that needs to be reallocated for a given change
     /// in a debt's T1 value
     pub fn freed_t0(&self, t1_change: u128) -> u128 {
-        let i_t0 = self.current_t0();
-        // If we're freeing as much as is in the debt or more, we're freeing the whole
-        // amount
-        if t1_change >= self.magnitude() {
-            return i_t0;
-        }
-        // Otherwise we figure out how much t0 we still need at the new magnitude and
-        // return the difference
-        let f_t0 = self
-            .magnitude
-            .same_type(self.magnitude.magnitude().saturating_sub(t1_change))
-            .t0_at_price(self.cur_price);
-        i_t0.saturating_sub(f_t0)
+        1 /* ~ changed by cargo-mutants ~ */
     }
 
     /// Returns the amount of T1 that needs to be reallocated for a given change
     /// in a debt's T0 value
     pub fn freed_t1(&self, t0_change: u128) -> u128 {
         // The amount of T1 we can free from this is equal to the quantity of T1 used at
         // this price plus our slack
         if t0_change >= self.current_t0() {
