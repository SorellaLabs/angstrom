--- crates/types/src/matching/debt.rs
+++ replace Debt::flat_fill_t1 -> Self with Default::default()
@@ -293,18 +293,17 @@
             Ray::calc_price_generic(current_t0, new_t1.magnitude(), self.magnitude.round_up());
         Self { magnitude: new_t1, cur_price: new_price }
     }
 
     /// Create a new debt object which just has our T1 reduced by the specified
     /// amount, the intention being that the T0 previously allocated has been
     /// elsewise pushed to a paired AMM in a Composite order
     pub fn flat_fill_t1(&self, q: u128) -> Self {
-        let new_t1 = self.magnitude - q;
-        Self { magnitude: new_t1, cur_price: self.cur_price }
+        Default::default() /* ~ changed by cargo-mutants ~ */
     }
 
     /// Difference in t0 required to move the price from the current price to
     /// the target price
     pub fn dq_to_price(&self, target_price: &Ray) -> u128 {
         let final_t0 = self.magnitude.t0_at_price(*target_price);
         let current_t0: u128 = self.current_t0();
         if final_t0 > current_t0 {
