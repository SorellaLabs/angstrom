--- crates/types/src/matching/debt.rs
+++ replace <impl Add for Debt>::add -> Self::Output with Default::default()
@@ -376,25 +376,17 @@
         *self = *self + rhs
     }
 }
 
 impl Add<Debt> for Debt {
     type Output = Option<Debt>;
 
     fn add(self, rhs: Debt) -> Self::Output {
-        let magnitude = self.magnitude + rhs.magnitude;
-        if magnitude.magnitude() == 0 {
-            return None
-        }
-        // If our new magnitude is on the same side, we stay at our price.  If we flip,
-        // we flip to the other price
-        let cur_price =
-            if magnitude.same_side(&self.magnitude) { self.cur_price } else { rhs.cur_price };
-        Some(Self { magnitude, cur_price })
+        Default::default() /* ~ changed by cargo-mutants ~ */
     }
 }
 
 impl<'a> Add<DebtType> for &'a Debt {
     type Output = Debt;
 
     fn add(self, rhs: DebtType) -> Self::Output {
         Debt { cur_price: self.cur_price, magnitude: self.magnitude + rhs }
