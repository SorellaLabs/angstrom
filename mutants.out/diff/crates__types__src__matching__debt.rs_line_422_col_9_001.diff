--- crates/types/src/matching/debt.rs
+++ replace <impl PartialEq for Debt>::eq -> bool with true
@@ -414,17 +414,17 @@
         } else {
             Some(self.price().cmp(other))
         }
     }
 }
 
 impl<'a> PartialEq<PoolPrice<'a>> for Debt {
     fn eq(&self, other: &PoolPrice<'a>) -> bool {
-        self.valid_for_price(other.as_ray())
+        true /* ~ changed by cargo-mutants ~ */
     }
 }
 
 impl<'a> PartialOrd<PoolPrice<'a>> for Debt {
     fn partial_cmp(&self, other: &PoolPrice<'a>) -> Option<std::cmp::Ordering> {
         if self == other {
             Some(std::cmp::Ordering::Equal)
         } else {
