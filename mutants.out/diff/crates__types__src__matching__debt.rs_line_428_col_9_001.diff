--- crates/types/src/matching/debt.rs
+++ replace <impl PartialOrd for Debt>::partial_cmp -> Option<std::cmp::Ordering> with None
@@ -420,21 +420,17 @@
 impl<'a> PartialEq<PoolPrice<'a>> for Debt {
     fn eq(&self, other: &PoolPrice<'a>) -> bool {
         self.valid_for_price(other.as_ray())
     }
 }
 
 impl<'a> PartialOrd<PoolPrice<'a>> for Debt {
     fn partial_cmp(&self, other: &PoolPrice<'a>) -> Option<std::cmp::Ordering> {
-        if self == other {
-            Some(std::cmp::Ordering::Equal)
-        } else {
-            Some(self.price().cmp(&other.as_ray()))
-        }
+        None /* ~ changed by cargo-mutants ~ */
     }
 }
 
 #[cfg(test)]
 mod test {
     use super::Debt;
     use crate::matching::Ray;
 
