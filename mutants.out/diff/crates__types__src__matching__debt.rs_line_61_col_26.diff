--- crates/types/src/matching/debt.rs
+++ replace == with != in DebtType::is_empty
@@ -53,17 +53,17 @@
 
     pub fn magnitude(&self) -> u128 {
         match self {
             Self::ExactIn(q) | Self::ExactOut(q) => *q
         }
     }
 
     pub fn is_empty(&self) -> bool {
-        self.magnitude() == 0
+        self.magnitude() != /* ~ changed by cargo-mutants ~ */ 0
     }
 
     pub fn t0_at_price<T: Into<Ray>>(&self, price: T) -> u128 {
         // If it's an ExactIn debt our output is rounded down, otherwise it's ExactOut
         // and the input is rounded up
         let round_up = match self {
             Self::ExactIn(_) => false,
             Self::ExactOut(_) => true
