--- crates/types/src/matching/math/mod.rs
+++ replace max_t1_for_t0 -> u128 with 1
@@ -199,23 +199,17 @@
 pub fn low_to_high<'a, T: Ord>(a: &'a T, b: &'a T) -> (&'a T, &'a T) {
     match a.cmp(b) {
         std::cmp::Ordering::Greater => (b, a),
         _ => (a, b)
     }
 }
 
 pub fn max_t1_for_t0(t0: u128, direction: Direction, price: Ray) -> u128 {
-    match direction {
-        // If we're buying we always round down so it's the amount it'd take to buy (t0 + 1) - 1
-        Direction::BuyingT0 => price.quantity(t0 + 1, true).saturating_sub(1),
-        // If we're selling, we always round up, so the max for a quantity is just what's at the
-        // quantity
-        Direction::SellingT0 => price.quantity(t0, false)
-    }
+    1 /* ~ changed by cargo-mutants ~ */
 }
 
 #[cfg(test)]
 mod tests {
     use alloy_primitives::{I256, U256};
     use uniswap_v3_math::{swap_math::compute_swap_step, tick_math::MAX_TICK};
 
     use super::*;
