--- crates/types/src/matching/math/mod.rs
+++ replace equal_move_solve -> Integer with Default::default()
@@ -13,17 +13,17 @@
 
 use super::{const_1e27, uniswap::Direction, Ray, SqrtPriceX96};
 
 /// Given an AMM with a constant liquidity, a debt, and a quantity of T0 will
 /// find the amount of T0 to feed into both the AMM and the debt to ensure that
 /// their price winds up at an equal point
 #[allow(unused)]
 pub fn equal_move_solve() -> Integer {
-    Integer::default()
+    Default::default() /* ~ changed by cargo-mutants ~ */
 }
 
 /// Given a quantity of input T0 as well as an AMM with constant liquidity and a
 /// debt that are at the same initial price, this will find the amount of T0 out
 /// of the total input amount that should be given to the AMM and the debt in
 /// order to ensure that they both end up at the closest price possible.
 pub fn amm_debt_same_move_solve(
     amm_liquidity: u128,
