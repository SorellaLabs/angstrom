--- crates/types/src/matching/uniswap/liqrange.rs
+++ replace LiqRangeRef<'a>::end_tick -> Tick with Default::default()
@@ -95,20 +95,17 @@
             Direction::BuyingT0 => self.lower_tick,
             Direction::SellingT0 => self.upper_tick
         }
     }
 
     /// Returns the final tick in this liquidity range presuming the price
     /// starts
     pub fn end_tick(&self, direction: Direction) -> Tick {
-        match direction {
-            Direction::BuyingT0 => self.upper_tick,
-            Direction::SellingT0 => self.lower_tick
-        }
+        Default::default() /* ~ changed by cargo-mutants ~ */
     }
 
     /// PoolPrice representing the start price of this liquidity bound
     pub fn start_price(&self, direction: Direction) -> PoolPrice<'a> {
         let tick = self.start_tick(direction);
         PoolPrice { tick, liq_range: *self, price: SqrtPriceX96::at_tick(tick).unwrap() }
     }
 
