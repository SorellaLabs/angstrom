--- crates/types/src/matching/uniswap/liqrange.rs
+++ replace LiqRangeRef<'a>::donate_tick -> Tick with Default::default()
@@ -116,17 +116,17 @@
     pub fn end_price(&self, direction: Direction) -> PoolPrice<'a> {
         let tick = self.end_tick(direction);
         PoolPrice { tick, liq_range: *self, price: SqrtPriceX96::at_tick(tick).unwrap() }
     }
 
     /// Returns the appropriate tick to donate to in order to reward LPs in this
     /// position
     pub fn donate_tick(&self) -> Tick {
-        self.lower_tick
+        Default::default() /* ~ changed by cargo-mutants ~ */
     }
 
     pub fn next(&self, direction: Direction) -> Option<Self> {
         match direction {
             Direction::BuyingT0 => self.pool_snap.get_range_for_tick(self.range.upper_tick),
             Direction::SellingT0 => self.pool_snap.get_range_for_tick(self.range.lower_tick - 1)
         }
     }
