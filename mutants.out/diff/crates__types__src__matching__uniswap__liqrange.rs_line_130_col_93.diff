--- crates/types/src/matching/uniswap/liqrange.rs
+++ replace - with + in LiqRangeRef<'a>::next
@@ -122,17 +122,17 @@
     /// position
     pub fn donate_tick(&self) -> Tick {
         self.lower_tick
     }
 
     pub fn next(&self, direction: Direction) -> Option<Self> {
         match direction {
             Direction::BuyingT0 => self.pool_snap.get_range_for_tick(self.range.upper_tick),
-            Direction::SellingT0 => self.pool_snap.get_range_for_tick(self.range.lower_tick - 1)
+            Direction::SellingT0 => self.pool_snap.get_range_for_tick(self.range.lower_tick + /* ~ changed by cargo-mutants ~ */ 1)
         }
     }
 }
 
 impl<'a> Debug for LiqRangeRef<'a> {
     fn fmt(&self, f: &mut std::fmt::Formatter<'_>) -> std::fmt::Result {
         let mut builder = f.debug_struct("LiqRangeRef");
         builder.field("range", &self.range);
