--- crates/types/src/matching/uniswap/mod.rs
+++ replace Direction::sort_amounts -> (T, T) with (Default::default(), Default::default())
@@ -92,20 +92,17 @@
             Self::BuyingT0 => (amount_out, amount_in),
             Self::SellingT0 => (amount_in, amount_out)
         }
     }
 
     /// Given our transaction direction turns (q_t0, q_t1) into (amount_in,
     /// amount_out)
     pub fn sort_amounts<T>(&self, token0: T, token1: T) -> (T, T) {
-        match self {
-            Self::BuyingT0 => (token1, token0),
-            Self::SellingT0 => (token0, token1)
-        }
+        (Default::default(), Default::default()) /* ~ changed by cargo-mutants ~ */
     }
 }
 
 /*
 A Uniswap pool is a relation between Token0 and Token1.  The price is defined as Token1/Token0.  We might use terms like
 'buy' and 'sell' in here, those terms are in the context of Token0 where "buy" is input Token1 to get Token0
 out and "sell" is input Token0 to get Token1 out
  */
