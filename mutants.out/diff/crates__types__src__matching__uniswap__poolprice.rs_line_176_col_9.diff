--- crates/types/src/matching/uniswap/poolprice.rs
+++ replace PoolPrice<'a>::vec_to -> eyre::Result<PoolPriceVec<'a>> with Ok(Default::default())
@@ -168,17 +168,17 @@
         debug!(final_price = ?price, "Final price");
         let new_price = PoolPrice::checked_new(liq_range, price, tick);
         Ok(new_price)
     }
 
     /// Create a PoolPriceVec from the current price to a specific target price
     /// value within the associated Pool
     pub fn vec_to(&self, end_price: SqrtPriceX96) -> eyre::Result<PoolPriceVec<'a>> {
-        PoolPriceVec::to_price_bound(self.clone(), end_price)
+        Ok(Default::default()) /* ~ changed by cargo-mutants ~ */
     }
 
     /// Create a PoolPriceVec from the current price to the upper bound of the
     /// liquidity range that the current price is in
     pub fn to_liq_range_upper(&self) -> eyre::Result<PoolPriceVec<'a>> {
         PoolPriceVec::to_upper(self.clone())
     }
 
