--- crates/types/src/matching/uniswap/poolpricevec.rs
+++ replace PoolPriceVec<'a>::output -> u128 with 1
@@ -204,21 +204,17 @@
         if self.end_bound.price > self.start_bound.price {
             self.d_t1
         } else {
             self.d_t0
         }
     }
 
     pub fn output(&self) -> u128 {
-        if self.end_bound.price > self.start_bound.price {
-            self.d_t0
-        } else {
-            self.d_t1
-        }
+        1 /* ~ changed by cargo-mutants ~ */
     }
 
     pub fn steps(&self) -> Option<&Vec<SwapStep>> {
         self.steps.as_ref()
     }
 
     /// Create a new PoolPriceVec from a start and end price with full safety
     /// checks and with the ability to span liquidity boundaries.
