--- crates/types/src/matching/uniswap/poolpricevec.rs
+++ replace PoolPriceVec<'a>::from_steps -> eyre::Result<Self> with Ok(Default::default())
@@ -274,20 +274,17 @@
         Self::from_steps(start, end, steps)
     }
 
     fn from_steps(
         start: PoolPrice<'a>,
         end: PoolPrice<'a>,
         steps: Vec<SwapStep<'a>>
     ) -> eyre::Result<Self> {
-        let (d_t0, d_t1) = steps.iter().fold((0_u128, 0_u128), |(t0, t1), step| {
-            (t0.saturating_add(step.d_t0), t1.saturating_add(step.d_t1))
-        });
-        Ok(Self { start_bound: start, end_bound: end, d_t0, d_t1, steps: Some(steps) })
+        Ok(Default::default()) /* ~ changed by cargo-mutants ~ */
     }
 
     pub fn from_swap(
         start: PoolPrice<'a>,
         direction: Direction,
         quantity: Quantity
     ) -> eyre::Result<Self> {
         let fee_pips = 0;
