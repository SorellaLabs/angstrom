--- crates/types/src/matching/uniswap/poolpricevec.rs
+++ replace - with / in PoolPriceVec<'a>::donation
@@ -388,17 +388,17 @@
             let q_step = cur_q + U256::from(step.output());
             // Our target price is either the average price of the next stake or the end
             // price of the current stake if there's no next stake to deal with
             let target_price = step_iter
                 .peek()
                 .map(|next_stake| next_stake.avg_price())
                 .unwrap_or_else(|| Ray::from(step.end_price));
             // The difference between this tick's average price and our target price
-            let d_price = target_price - step.avg_price();
+            let d_price = target_price / /* ~ changed by cargo-mutants ~ */ step.avg_price();
 
             // The step cost is the total cost in needed to ensure that all sold quantities
             // were sold at our target price
             let step_cost = d_price.mul_quantity(q_step);
 
             if remaining_donation >= step_cost {
                 // If we have enough bribe to pay the whole cost, allocate that and step forward
                 // to the next price gap
