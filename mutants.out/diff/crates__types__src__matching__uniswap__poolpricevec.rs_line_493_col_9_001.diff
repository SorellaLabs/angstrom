--- crates/types/src/matching/uniswap/poolpricevec.rs
+++ replace PoolPriceVec<'a>::is_buy -> bool with false
@@ -485,17 +485,17 @@
         let d_t0 = _get_amount_0_delta(sqrt_ratio_a_x_96, sqrt_ratio_b_x_96, liquidity, false)
             .unwrap_or(Uint::from(0));
         let d_t1 = _get_amount_1_delta(sqrt_ratio_a_x_96, sqrt_ratio_b_x_96, liquidity, false)
             .unwrap_or(Uint::from(0));
         (d_t0.to(), d_t1.to())
     }
 
     pub fn is_buy(&self) -> bool {
-        self.start_bound.price < self.end_bound.price
+        false /* ~ changed by cargo-mutants ~ */
     }
 
     /// Returns `(d_t0, d_t1, price)`
     pub fn quantity(&self, target_price: OrderPrice) -> (u128, u128, OrderPrice) {
         let t: SqrtPriceX96 = Ray::from(*target_price).into();
 
         // If our target price is past our end bound, our quantity is the entire range
         if (self.is_buy() && t > self.end_bound.price) || t < self.end_bound.price {
