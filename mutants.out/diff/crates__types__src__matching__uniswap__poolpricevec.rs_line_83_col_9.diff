--- crates/types/src/matching/uniswap/poolpricevec.rs
+++ replace SwapStep<'a>::to_bound -> eyre::Result<Self> with Ok(Default::default())
@@ -75,18 +75,17 @@
         };
 
         Self::compute_info(start_price, end_price, *liq_range)
     }
 
     /// Creates a SwapStep that goes from the price given to the edge of the
     /// liquidity range that the price is associated with in the given Direction
     pub fn to_bound(start: PoolPrice<'a>, direction: Direction) -> eyre::Result<Self> {
-        let end = start.liq_range.clone().end_price(direction);
-        Self::from_prices(start, end)
+        Ok(Default::default()) /* ~ changed by cargo-mutants ~ */
     }
 
     /// Creates a SwapStep that covers the entirety of the provided liquidity
     /// range
     pub fn whole_range(range: LiqRangeRef<'a>, direction: Direction) -> eyre::Result<Self> {
         let start = range.start_price(direction);
         let end = range.end_price(direction);
         Self::from_prices(start, end)
