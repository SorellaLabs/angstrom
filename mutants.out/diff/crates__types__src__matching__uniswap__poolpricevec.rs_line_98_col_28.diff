--- crates/types/src/matching/uniswap/poolpricevec.rs
+++ replace != with == in SwapStep<'a>::from_prices
@@ -90,17 +90,17 @@
         let start = range.start_price(direction);
         let end = range.end_price(direction);
         Self::from_prices(start, end)
     }
 
     /// Creates a SwapStep that covers the range between two prices, provided
     /// those prices are both within the same liquidity range
     pub fn from_prices(start: PoolPrice<'a>, end: PoolPrice<'a>) -> eyre::Result<Self> {
-        if start.liq_range != end.liq_range {
+        if start.liq_range == /* ~ changed by cargo-mutants ~ */ end.liq_range {
             return Err(eyre!(
                 "A SwapStep can only cover one liquidity range, provided prices are from \
                  different ranges"
             ));
         }
         Self::compute_info(start.price, end.price, start.liq_range)
     }
 
