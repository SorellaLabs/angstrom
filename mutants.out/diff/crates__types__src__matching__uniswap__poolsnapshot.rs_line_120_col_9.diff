--- crates/types/src/matching/uniswap/poolsnapshot.rs
+++ replace PoolSnapshot::at_tick -> eyre::Result<PoolPrice> with Ok(Default::default())
@@ -112,19 +112,15 @@
         let tick = price.to_tick()?;
         let range = self
             .get_range_for_tick(tick)
             .ok_or_eyre("Unable to find tick range for price")?;
         Ok(PoolPrice { liq_range: range, tick, price })
     }
 
     pub fn at_tick(&self, tick: i32) -> eyre::Result<PoolPrice> {
-        let price = SqrtPriceX96::at_tick(tick)?;
-        let range = self
-            .get_range_for_tick(tick)
-            .ok_or_eyre("Unable to find tick range for price")?;
-        Ok(PoolPrice { liq_range: range, tick, price })
+        Ok(Default::default()) /* ~ changed by cargo-mutants ~ */
     }
 
     pub fn liquidity_at_tick(&self, tick: Tick) -> Option<u128> {
         self.get_range_for_tick(tick).map(|range| range.liquidity())
     }
 }
