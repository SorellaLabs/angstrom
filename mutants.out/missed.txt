crates/types/src/matching/debt.rs:107:89: replace - with + in <impl Add for DebtType>::add
crates/types/src/matching/uniswap/poolprice.rs:219:64: replace != with == in PoolPrice<'a>::intersect_with_debt
crates/types/src/matching/mod.rs:72:21: replace + with * in <impl Add for MatchingPrice>::add
crates/types/src/matching/uniswap/poolpricevec.rs:411:39: replace > with < in PoolPriceVec<'a>::donation
crates/types/src/matching/debt.rs:428:17: replace == with != in <impl PartialOrd for Debt>::partial_cmp
crates/types/src/matching/uniswap/poolprice.rs:82:9: replace PoolPrice<'a>::liquidity -> u128 with 0
crates/types/src/matching/math/mod.rs:167:29: replace + with * in quadratic_solve
crates/types/src/matching/debt.rs:355:13: replace - with + in Debt::calc_proportion
crates/types/src/matching/debt.rs:385:34: replace == with != in <impl Add for Debt>::add
crates/types/src/matching/uniswap/flags.rs:102:34: replace | with & in <impl BitOr for UniswapFlags>::bitor
crates/types/src/matching/debt.rs:209:9: replace Debt::valid_for_price -> bool with true
crates/types/src/matching/composite.rs:156:9: replace CompositeOrder<'a>::t0_quantities -> (Option<u128>, Option<u128>) with (Some(1), Some(1))
crates/types/src/matching/uniswap/poolpricevec.rs:483:9: replace PoolPriceVec<'a>::delta_to_price -> (u128, u128) with (1, 0)
crates/types/src/matching/debt.rs:108:77: replace - with + in <impl Add for DebtType>::add
crates/types/src/matching/composite.rs:156:9: replace CompositeOrder<'a>::t0_quantities -> (Option<u128>, Option<u128>) with (Some(0), None)
crates/types/src/matching/uniswap/poolpricevec.rs:166:27: replace > with == in SwapStep<'a>::output
crates/types/src/matching/uniswap/poolprice.rs:46:37: replace && with || in <impl PartialEq for PoolPrice<'a>>::eq
crates/types/src/matching/uniswap/poolpricevec.rs:483:9: replace PoolPriceVec<'a>::delta_to_price -> (u128, u128) with (0, 1)
crates/types/src/matching/math/mod.rs:54:53: replace + with - in amm_debt_same_move_solve
crates/types/src/matching/mod.rs:72:9: replace <impl Add for MatchingPrice>::add -> Self::Output with Default::default()
crates/types/src/matching/uniswap/poolpricevec.rs:430:52: replace - with + in PoolPriceVec<'a>::donation
crates/types/src/matching/math/mod.rs:44:68: replace << with >> in amm_debt_same_move_solve
crates/types/src/matching/uniswap/liqrange.rs:130:93: replace - with + in LiqRangeRef<'a>::next
crates/types/src/matching/debt.rs:214:51: replace && with || in Debt::valid_for_price
crates/types/src/matching/uniswap/liqrange.rs:46:9: replace LiqRange::upper_tick -> i32 with 0
crates/types/src/matching/uniswap/poolpricevec.rs:411:39: replace > with == in PoolPriceVec<'a>::donation
crates/types/src/matching/uniswap/poolpricevec.rs:388:32: replace + with - in PoolPriceVec<'a>::donation
crates/types/src/matching/uniswap/poolsnapshot.rs:128:9: replace PoolSnapshot::liquidity_at_tick -> Option<u128> with Some(0)
crates/types/src/matching/uniswap/mod.rs:22:9: replace Quantity::magnitude -> u128 with 1
crates/types/src/matching/uniswap/flags.rs:62:9: replace <impl From for U160>::from -> U160 with Default::default()
crates/types/src/matching/uniswap/flags.rs:102:34: replace | with ^ in <impl BitOr for UniswapFlags>::bitor
crates/types/src/matching/uniswap/poolpricevec.rs:433:39: replace += with *= in PoolPriceVec<'a>::donation
crates/types/src/matching/debt.rs:153:9: replace Debt::price -> Ray with Default::default()
crates/types/src/matching/debt.rs:214:60: replace < with == in Debt::valid_for_price
crates/types/src/matching/math/mod.rs:143:23: replace * with + in price_intersect_solve
crates/types/src/matching/math/mod.rs:138:30: replace + with * in price_intersect_solve
crates/types/src/matching/math/mod.rs:190:5: replace resolve_precision -> u128 with 0
crates/types/src/matching/uniswap/poolpricevec.rs:212:9: replace PoolPriceVec<'a>::output -> u128 with 1
crates/types/src/matching/uniswap/flags.rs:56:34: replace - with + in UniswapFlags::mask
crates/types/src/matching/uniswap/poolpricevec.rs:158:27: replace > with < in SwapStep<'a>::input
crates/types/src/matching/math/mod.rs:132:49: replace - with + in price_intersect_solve
crates/types/src/matching/uniswap/poolpricevec.rs:204:33: replace > with < in PoolPriceVec<'a>::input
crates/types/src/matching/debt.rs:406:9: replace <impl PartialEq for Debt>::eq -> bool with true
crates/types/src/matching/uniswap/poolpricevec.rs:498:9: replace PoolPriceVec<'a>::quantity -> (u128, u128, OrderPrice) with (0, 0, Default::default())
crates/types/src/matching/sqrtprice.rs:35:9: replace SqrtPriceX96::from_float_price -> Self with Default::default()
crates/types/src/matching/uniswap/poolpricevec.rs:493:32: replace < with > in PoolPriceVec<'a>::is_buy
crates/types/src/matching/math/mod.rs:166:30: replace - with / in quadratic_solve
crates/types/src/matching/debt.rs:313:24: replace - with + in Debt::dq_to_price
crates/types/src/matching/uniswap/poolpricevec.rs:312:25: replace < with > in PoolPriceVec<'a>::from_swap
crates/types/src/matching/uniswap/liqrange.rs:73:31: replace == with != in <impl PartialEq for LiqRangeRef<'a>>::eq
crates/types/src/matching/uniswap/poolpricevec.rs:429:33: replace > with < in PoolPriceVec<'a>::donation
crates/types/src/matching/uniswap/poolprice.rs:46:55: replace == with != in <impl PartialEq for PoolPrice<'a>>::eq
crates/types/src/matching/uniswap/poolprice.rs:214:17: replace < with > in PoolPrice<'a>::intersect_with_debt
crates/types/src/matching/uniswap/poolprice.rs:312:9: replace PoolPrice<'a>::as_sqrtpricex96 -> SqrtPriceX96 with Default::default()
crates/types/src/matching/uniswap/poolpricevec.rs:142:9: replace SwapStep<'a>::start_price -> SqrtPriceX96 with Default::default()
crates/types/src/matching/uniswap/liqrange.rs:46:9: replace LiqRange::upper_tick -> i32 with 1
crates/types/src/matching/uniswap/flags.rs:56:9: replace UniswapFlags::mask -> U160 with Default::default()
crates/types/src/matching/tokens.rs:88:9: replace TokenQuantity::quantity -> u128 with 1
crates/types/src/matching/debt.rs:275:44: replace + with * in Debt::partial_fill
crates/types/src/matching/debt.rs:327:9: replace Debt::calc_proportion -> u128 with 1
crates/types/src/matching/math/mod.rs:159:5: replace quadratic_solve -> (Option<Integer>, Option<Integer>) with (Some(Default::default()), Some(Default::default()))
crates/types/src/matching/uniswap/poolsnapshot.rs:70:49: replace && with || in PoolSnapshot::get_range_for_tick
crates/types/src/matching/debt.rs:311:22: replace - with / in Debt::dq_to_price
crates/types/src/matching/composite.rs:34:9: replace CompositeOrder<'a>::has_debt -> bool with true
crates/types/src/matching/math/mod.rs:162:53: replace - with / in quadratic_solve
crates/types/src/matching/debt.rs:219:9: replace Debt::validate_and_set_price -> bool with true
crates/types/src/matching/uniswap/poolpricevec.rs:501:32: replace > with == in PoolPriceVec<'a>::quantity
crates/types/src/matching/math/mod.rs:91:43: replace <= with > in amm_debt_same_move_solve
crates/types/src/matching/debt.rs:237:22: replace >= with < in Debt::freed_t0
crates/types/src/matching/math/mod.rs:159:5: replace quadratic_solve -> (Option<Integer>, Option<Integer>) with (None, Some(Default::default()))
crates/types/src/matching/debt.rs:406:9: replace <impl PartialEq for Debt>::eq -> bool with false
crates/types/src/matching/uniswap/poolpricevec.rs:459:48: replace == with != in PoolPriceVec<'a>::to_price
crates/types/src/matching/uniswap/liqrange.rs:130:93: replace - with / in LiqRangeRef<'a>::next
crates/types/src/matching/math/mod.rs:52:24: replace * with / in amm_debt_same_move_solve
crates/types/src/matching/uniswap/liqrange.rs:71:9: replace <impl PartialEq for LiqRangeRef<'a>>::eq -> bool with true
crates/types/src/matching/math/mod.rs:129:14: replace * with + in price_intersect_solve
crates/types/src/matching/uniswap/liqrange.rs:124:9: replace LiqRangeRef<'a>::donate_tick -> Tick with Default::default()
crates/types/src/matching/debt.rs:412:9: replace <impl PartialOrd for Debt>::partial_cmp -> Option<std::cmp::Ordering> with None
crates/types/src/matching/math/mod.rs:35:5: replace amm_debt_same_move_solve -> u128 with 0
crates/types/src/matching/math/mod.rs:87:24: replace < with == in amm_debt_same_move_solve
crates/types/src/matching/debt.rs:308:9: replace Debt::dq_to_price -> u128 with 0
crates/types/src/matching/uniswap/poolpricevec.rs:309:23: replace *= with += in PoolPriceVec<'a>::from_swap
crates/types/src/matching/debt.rs:422:9: replace <impl PartialEq for Debt>::eq -> bool with false
crates/types/src/matching/debt.rs:106:76: replace - with + in <impl Add for DebtType>::add
crates/types/src/matching/uniswap/poolpricevec.rs:498:9: replace PoolPriceVec<'a>::quantity -> (u128, u128, OrderPrice) with (0, 1, Default::default())
crates/types/src/matching/uniswap/poolpricevec.rs:407:36: replace -= with += in PoolPriceVec<'a>::donation
crates/types/src/matching/uniswap/poolpricevec.rs:433:39: replace += with -= in PoolPriceVec<'a>::donation
crates/types/src/matching/math/mod.rs:92:44: replace >= with < in amm_debt_same_move_solve
crates/types/src/matching/uniswap/liqrange.rs:137:9: replace <impl Debug for LiqRangeRef<'a>>::fmt -> std::fmt::Result with Ok(Default::default())
crates/types/src/matching/uniswap/mod.rs:82:9: replace Direction::is_input -> bool with false
crates/types/src/matching/uniswap/poolsnapshot.rs:128:9: replace PoolSnapshot::liquidity_at_tick -> Option<u128> with Some(1)
crates/types/src/matching/debt.rs:367:9: replace <impl Add for Option<Debt>>::add -> Self::Output with Default::default()
crates/types/src/matching/composite.rs:34:9: replace CompositeOrder<'a>::has_debt -> bool with false
crates/types/src/matching/uniswap/poolpricevec.rs:154:9: replace SwapStep<'a>::liquidity -> u128 with 0
crates/types/src/matching/math/mod.rs:131:68: replace << with >> in price_intersect_solve
crates/types/src/matching/composite.rs:145:9: replace CompositeOrder<'a>::partial_fill_t1 -> Self with Default::default()
crates/types/src/matching/debt.rs:168:9: replace Debt::bid_side -> bool with true
crates/types/src/matching/math/mod.rs:159:5: replace quadratic_solve -> (Option<Integer>, Option<Integer>) with (None, None)
crates/types/src/matching/debt.rs:327:9: replace Debt::calc_proportion -> u128 with 0
crates/types/src/matching/uniswap/poolsnapshot.rs:87:44: replace && with || in PoolSnapshot::ranges_for_ticks
crates/types/src/matching/math/mod.rs:35:5: replace amm_debt_same_move_solve -> u128 with 1
crates/types/src/matching/composite.rs:156:9: replace CompositeOrder<'a>::t0_quantities -> (Option<u128>, Option<u128>) with (None, Some(0))
crates/types/src/matching/debt.rs:159:9: replace Debt::additional_t0_needed -> u128 with 1
crates/types/src/matching/math/mod.rs:209:50: replace + with - in max_t1_for_t0
crates/types/src/matching/uniswap/poolpricevec.rs:350:22: replace += with -= in PoolPriceVec<'a>::from_swap
crates/types/src/matching/uniswap/flags.rs:78:26: replace << with >> in <impl From for U160>::from
crates/types/src/matching/uniswap/poolpricevec.rs:204:33: replace > with == in PoolPriceVec<'a>::input
crates/types/src/matching/composite.rs:26:9: replace CompositeOrder<'a>::debt -> Option<&Debt> with None
crates/types/src/matching/uniswap/poolpricevec.rs:220:9: replace PoolPriceVec<'a>::steps -> Option<&Vec<SwapStep>> with None
crates/types/src/matching/math/mod.rs:143:23: replace * with / in price_intersect_solve
crates/types/src/matching/uniswap/poolsnapshot.rs:70:57: replace < with > in PoolSnapshot::get_range_for_tick
crates/types/src/matching/uniswap/flags.rs:86:34: replace | with ^ in <impl BitOr for UniswapFlags>::bitor
crates/types/src/matching/math/mod.rs:161:46: replace * with + in quadratic_solve
crates/types/src/matching/uniswap/poolpricevec.rs:501:32: replace > with < in PoolPriceVec<'a>::quantity
crates/types/src/matching/debt.rs:102:75: replace + with * in <impl Add for DebtType>::add
crates/types/src/matching/uniswap/poolpricevec.rs:493:9: replace PoolPriceVec<'a>::is_buy -> bool with true
crates/types/src/matching/debt.rs:61:9: replace DebtType::is_empty -> bool with false
crates/types/src/matching/uniswap/poolpricevec.rs:350:22: replace += with *= in PoolPriceVec<'a>::from_swap
crates/types/src/matching/uniswap/poolpricevec.rs:483:9: replace PoolPriceVec<'a>::delta_to_price -> (u128, u128) with (0, 0)
crates/types/src/matching/debt.rs:336:35: replace * with + in Debt::calc_proportion
crates/types/src/matching/uniswap/liqrange.rs:42:9: replace LiqRange::lower_tick -> i32 with 1
crates/types/src/matching/math/mod.rs:21:5: replace equal_move_solve -> Integer with Default::default()
crates/types/src/matching/math/mod.rs:166:30: replace - with + in quadratic_solve
crates/types/src/matching/debt.rs:214:44: replace >= with < in Debt::valid_for_price
crates/types/src/matching/debt.rs:41:9: replace DebtType::round_up -> bool with false
crates/types/src/matching/composite.rs:109:19: replace + with - in CompositeOrder<'a>::quantity
crates/types/src/matching/uniswap/poolpricevec.rs:98:28: replace != with == in SwapStep<'a>::from_prices
crates/types/src/matching/debt.rs:339:29: replace + with * in Debt::calc_proportion
crates/types/src/matching/uniswap/poolpricevec.rs:166:27: replace > with < in SwapStep<'a>::output
crates/types/src/matching/uniswap/mod.rs:82:9: replace Direction::is_input -> bool with true
crates/types/src/matching/uniswap/poolpricevec.rs:212:33: replace > with == in PoolPriceVec<'a>::output
crates/types/src/matching/uniswap/liqrange.rs:87:43: replace && with || in LiqRangeRef<'a>::price_in_range
crates/types/src/matching/debt.rs:209:9: replace Debt::valid_for_price -> bool with false
crates/types/src/matching/debt.rs:337:34: replace * with / in Debt::calc_proportion
crates/types/src/matching/math/mod.rs:159:42: replace << with >> in quadratic_solve
crates/types/src/matching/math/mod.rs:95:28: replace < with == in amm_debt_same_move_solve
crates/types/src/matching/math/mod.rs:128:31: replace + with * in price_intersect_solve
crates/types/src/matching/composite.rs:130:9: replace CompositeOrder<'a>::negative_quantity_t1 -> u128 with 0
crates/types/src/matching/math/mod.rs:159:25: replace * with / in quadratic_solve
crates/types/src/matching/math/mod.rs:167:29: replace + with - in quadratic_solve
crates/types/src/matching/debt.rs:61:9: replace DebtType::is_empty -> bool with true
crates/types/src/matching/math/mod.rs:207:5: replace max_t1_for_t0 -> u128 with 1
crates/types/src/matching/math/mod.rs:143:54: replace << with >> in price_intersect_solve
crates/types/src/matching/math/mod.rs:132:49: replace - with / in price_intersect_solve
crates/types/src/matching/debt.rs:105:62: replace > with < in <impl Add for DebtType>::add
crates/types/src/matching/uniswap/poolpricevec.rs:454:9: replace PoolPriceVec<'a>::to_price -> Option<Self> with None
crates/types/src/matching/debt.rs:254:22: replace >= with < in Debt::freed_t1
crates/types/src/matching/uniswap/poolprice.rs:244:22: replace <= with > in PoolPrice<'a>::order_to_target
crates/types/src/matching/uniswap/poolpricevec.rs:498:9: replace PoolPriceVec<'a>::quantity -> (u128, u128, OrderPrice) with (1, 1, Default::default())
crates/types/src/matching/uniswap/poolpricevec.rs:146:9: replace SwapStep<'a>::end_price -> SqrtPriceX96 with Default::default()
crates/types/src/matching/composite.rs:156:9: replace CompositeOrder<'a>::t0_quantities -> (Option<u128>, Option<u128>) with (Some(0), Some(1))
crates/types/src/matching/uniswap/poolpricevec.rs:158:9: replace SwapStep<'a>::input -> u128 with 1
crates/types/src/matching/debt.rs:275:44: replace + with - in Debt::partial_fill
crates/types/src/matching/uniswap/poolprice.rs:196:9: replace PoolPrice<'a>::intersect_with_debt -> eyre::Result<u128> with Ok(1)
crates/types/src/matching/debt.rs:311:22: replace - with + in Debt::dq_to_price
crates/types/src/matching/uniswap/poolpricevec.rs:61:45: replace || with && in SwapStep<'a>::for_price_range
crates/types/src/matching/math/mod.rs:171:23: replace == with != in quadratic_solve
crates/types/src/matching/uniswap/poolpricevec.rs:432:36: replace > with < in PoolPriceVec<'a>::donation
crates/types/src/matching/debt.rs:254:9: replace Debt::freed_t1 -> u128 with 1
crates/types/src/matching/uniswap/poolpricevec.rs:501:27: replace && with || in PoolPriceVec<'a>::quantity
crates/types/src/matching/math/mod.rs:95:28: replace < with > in amm_debt_same_move_solve
crates/types/src/matching/uniswap/flags.rs:56:27: replace << with >> in UniswapFlags::mask
crates/types/src/matching/composite.rs:38:9: replace CompositeOrder<'a>::amm -> Option<&PoolPrice<'a>> with None
crates/types/src/matching/debt.rs:310:21: replace > with == in Debt::dq_to_price
crates/types/src/matching/debt.rs:219:9: replace Debt::validate_and_set_price -> bool with false
crates/types/src/matching/debt.rs:88:9: replace DebtType::same_side -> bool with false
crates/types/src/matching/debt.rs:412:17: replace == with != in <impl PartialOrd for Debt>::partial_cmp
crates/types/src/matching/math/mod.rs:207:5: replace max_t1_for_t0 -> u128 with 0
crates/types/src/matching/debt.rs:334:45: replace << with >> in Debt::calc_proportion
crates/types/src/matching/uniswap/poolprice.rs:46:9: replace <impl PartialEq for PoolPrice<'a>>::eq -> bool with true
crates/types/src/matching/debt.rs:107:62: replace > with < in <impl Add for DebtType>::add
crates/types/src/matching/debt.rs:183:52: replace + with - in Debt::price_range
crates/types/src/matching/uniswap/poolpricevec.rs:322:29: replace == with != in PoolPriceVec<'a>::from_swap
crates/types/src/matching/debt.rs:384:9: replace <impl Add for Debt>::add -> Self::Output with Default::default()
crates/types/src/matching/math/mod.rs:162:53: replace - with + in quadratic_solve
crates/types/src/matching/uniswap/poolprice.rs:64:40: replace || with && in PoolPrice<'a>::checked_new
crates/types/src/matching/uniswap/poolpricevec.rs:413:34: replace += with -= in PoolPriceVec<'a>::donation
crates/types/src/matching/math/mod.rs:159:25: replace * with + in quadratic_solve
crates/types/src/matching/uniswap/poolprice.rs:74:9: replace PoolPrice<'a>::tick -> Tick with Default::default()
crates/types/src/matching/uniswap/liqrange.rs:94:9: replace LiqRangeRef<'a>::start_tick -> Tick with Default::default()
crates/types/src/matching/composite.rs:119:9: replace CompositeOrder<'a>::negative_quantity -> u128 with 1
crates/types/src/matching/uniswap/flags.rs:86:34: replace | with & in <impl BitOr for UniswapFlags>::bitor
crates/types/src/matching/uniswap/liqrange.rs:72:13: replace && with || in <impl PartialEq for LiqRangeRef<'a>>::eq
crates/types/src/matching/uniswap/poolprice.rs:82:9: replace PoolPrice<'a>::liquidity -> u128 with 1
crates/types/src/matching/debt.rs:213:43: replace > with < in Debt::valid_for_price
crates/types/src/matching/sqrtprice.rs:35:46: replace * with / in SqrtPriceX96::from_float_price
crates/types/src/matching/uniswap/poolprice.rs:214:17: replace < with == in PoolPrice<'a>::intersect_with_debt
crates/types/src/matching/composite.rs:156:9: replace CompositeOrder<'a>::t0_quantities -> (Option<u128>, Option<u128>) with (Some(0), Some(0))
crates/types/src/matching/debt.rs:105:90: replace - with / in <impl Add for DebtType>::add
crates/types/src/matching/debt.rs:422:9: replace <impl PartialEq for Debt>::eq -> bool with true
crates/types/src/matching/uniswap/poolprice.rs:318:9: replace PoolPrice<'a>::as_float -> f64 with -1.0
crates/types/src/matching/debt.rs:161:31: replace - with + in Debt::additional_t0_needed
crates/types/src/matching/uniswap/poolprice.rs:318:9: replace PoolPrice<'a>::as_float -> f64 with 0.0
crates/types/src/matching/uniswap/poolpricevec.rs:483:9: replace PoolPriceVec<'a>::delta_to_price -> (u128, u128) with (1, 1)
crates/types/src/matching/uniswap/poolpricevec.rs:212:33: replace > with < in PoolPriceVec<'a>::output
crates/types/src/matching/sqrtprice.rs:82:9: replace <impl From for SqrtPriceX96>::from -> Self with Default::default()
crates/types/src/matching/uniswap/poolpricevec.rs:493:9: replace PoolPriceVec<'a>::is_buy -> bool with false
crates/types/src/matching/uniswap/poolprice.rs:225:17: replace + with * in PoolPrice<'a>::intersect_with_debt
crates/types/src/matching/debt.rs:214:60: replace < with > in Debt::valid_for_price
crates/types/src/matching/uniswap/poolprice.rs:64:48: replace > with == in PoolPrice<'a>::checked_new
crates/types/src/matching/uniswap/poolpricevec.rs:407:36: replace -= with /= in PoolPriceVec<'a>::donation
crates/types/src/matching/uniswap/poolpricevec.rs:61:58: replace < with == in SwapStep<'a>::for_price_range
crates/types/src/matching/math/mod.rs:128:24: replace << with >> in price_intersect_solve
crates/types/src/matching/mod.rs:72:21: replace + with - in <impl Add for MatchingPrice>::add
crates/types/src/matching/uniswap/poolpricevec.rs:166:9: replace SwapStep<'a>::output -> u128 with 0
crates/types/src/matching/uniswap/liqrange.rs:42:9: replace LiqRange::lower_tick -> i32 with -1
crates/types/src/matching/uniswap/liqrange.rs:46:9: replace LiqRange::upper_tick -> i32 with -1
crates/types/src/matching/math/mod.rs:51:44: replace << with >> in amm_debt_same_move_solve
crates/types/src/matching/uniswap/flags.rs:102:9: replace <impl BitOr for UniswapFlags>::bitor -> Self::Output with Default::default()
crates/types/src/matching/math/mod.rs:159:5: replace quadratic_solve -> (Option<Integer>, Option<Integer>) with (Some(Default::default()), None)
crates/types/src/matching/debt.rs:336:35: replace * with / in Debt::calc_proportion
crates/types/src/matching/uniswap/poolprice.rs:270:23: replace == with != in PoolPrice<'a>::order_to_target
crates/types/src/matching/debt.rs:234:9: replace Debt::freed_t0 -> u128 with 0
crates/types/src/matching/uniswap/poolprice.rs:117:75: replace * with / in PoolPrice<'a>::d_t0
crates/types/src/matching/debt.rs:341:29: replace - with / in Debt::calc_proportion
crates/types/src/matching/composite.rs:119:9: replace CompositeOrder<'a>::negative_quantity -> u128 with 0
crates/types/src/matching/debt.rs:76:9: replace DebtType::slack_at_price -> u128 with 0
crates/types/src/matching/composite.rs:156:9: replace CompositeOrder<'a>::t0_quantities -> (Option<u128>, Option<u128>) with (None, None)
crates/types/src/matching/uniswap/poolpricevec.rs:204:9: replace PoolPriceVec<'a>::input -> u128 with 0
crates/types/src/matching/uniswap/poolpricevec.rs:493:32: replace < with == in PoolPriceVec<'a>::is_buy
crates/types/src/matching/uniswap/poolpricevec.rs:498:9: replace PoolPriceVec<'a>::quantity -> (u128, u128, OrderPrice) with (1, 0, Default::default())
crates/types/src/matching/debt.rs:88:9: replace DebtType::same_side -> bool with true
crates/types/src/matching/composite.rs:42:9: replace CompositeOrder<'a>::bound -> Option<Ray> with None
crates/types/src/matching/debt.rs:106:76: replace - with / in <impl Add for DebtType>::add
crates/types/src/matching/uniswap/poolpricevec.rs:309:23: replace *= with /= in PoolPriceVec<'a>::from_swap
crates/types/src/matching/debt.rs:105:90: replace - with + in <impl Add for DebtType>::add
crates/types/src/matching/tokens.rs:88:9: replace TokenQuantity::quantity -> u128 with 0
crates/types/src/matching/debt.rs:181:9: replace Debt::price_range -> (Ray, Ray) with (Default::default(), Default::default())
crates/types/src/matching/uniswap/poolpricevec.rs:204:9: replace PoolPriceVec<'a>::input -> u128 with 1
crates/types/src/matching/debt.rs:355:13: replace - with / in Debt::calc_proportion
crates/types/src/matching/debt.rs:76:9: replace DebtType::slack_at_price -> u128 with 1
crates/types/src/matching/composite.rs:206:9: replace CompositeOrder<'a>::start_price -> Ray with Default::default()
crates/types/src/matching/debt.rs:61:26: replace == with != in DebtType::is_empty
crates/types/src/matching/debt.rs:107:89: replace - with / in <impl Add for DebtType>::add
crates/types/src/matching/debt.rs:183:52: replace + with * in Debt::price_range
crates/types/src/matching/math/mod.rs:111:5: replace price_intersect_solve -> Integer with Default::default()
crates/types/src/matching/math/mod.rs:146:45: replace - with + in price_intersect_solve
crates/types/src/matching/debt.rs:341:29: replace - with + in Debt::calc_proportion
crates/types/src/matching/debt.rs:41:9: replace DebtType::round_up -> bool with true
crates/types/src/matching/debt.rs:339:29: replace + with - in Debt::calc_proportion
crates/types/src/matching/uniswap/poolpricevec.rs:388:32: replace + with * in PoolPriceVec<'a>::donation
crates/types/src/matching/math/mod.rs:129:14: replace * with / in price_intersect_solve
crates/types/src/matching/uniswap/poolpricevec.rs:158:27: replace > with == in SwapStep<'a>::input
crates/types/src/matching/uniswap/poolpricevec.rs:501:61: replace < with == in PoolPriceVec<'a>::quantity
crates/types/src/matching/debt.rs:103:78: replace + with - in <impl Add for DebtType>::add
crates/types/src/matching/uniswap/mod.rs:22:9: replace Quantity::magnitude -> u128 with 0
crates/types/src/matching/math/mod.rs:146:45: replace - with / in price_intersect_solve
crates/types/src/matching/uniswap/poolpricevec.rs:501:56: replace || with && in PoolPriceVec<'a>::quantity
crates/types/src/matching/math/mod.rs:87:24: replace < with > in amm_debt_same_move_solve
crates/types/src/matching/uniswap/poolprice.rs:52:9: replace <impl PartialOrd for PoolPrice<'a>>::partial_cmp -> Option<std::cmp::Ordering> with None
crates/types/src/matching/uniswap/poolprice.rs:139:26: replace != with == in PoolPrice<'a>::d_t0
crates/types/src/matching/debt.rs:213:49: replace && with || in Debt::valid_for_price
crates/types/src/matching/uniswap/poolprice.rs:340:9: replace <impl From for U256>::from -> Self with Default::default()
crates/types/src/matching/debt.rs:376:9: replace <impl AddAssign for Option<Debt>>::add_assign with ()
crates/types/src/matching/uniswap/poolpricevec.rs:121:30: replace && with || in SwapStep<'a>::compute_info
crates/types/src/matching/uniswap/poolpricevec.rs:351:22: replace += with *= in PoolPriceVec<'a>::from_swap
crates/types/src/matching/math/mod.rs:161:42: replace * with / in quadratic_solve
crates/types/src/matching/debt.rs:168:9: replace Debt::bid_side -> bool with false
crates/types/src/matching/composite.rs:156:9: replace CompositeOrder<'a>::t0_quantities -> (Option<u128>, Option<u128>) with (None, Some(1))
crates/types/src/matching/math/mod.rs:138:30: replace + with - in price_intersect_solve
crates/types/src/matching/uniswap/poolpricevec.rs:402:35: replace >= with < in PoolPriceVec<'a>::donation
crates/types/src/matching/uniswap/poolprice.rs:225:17: replace + with - in PoolPrice<'a>::intersect_with_debt
crates/types/src/matching/debt.rs:161:31: replace - with / in Debt::additional_t0_needed
crates/types/src/matching/uniswap/liqrange.rs:128:9: replace LiqRangeRef<'a>::next -> Option<Self> with None
crates/types/src/matching/math/mod.rs:50:46: replace << with >> in amm_debt_same_move_solve
crates/types/src/matching/debt.rs:313:24: replace - with / in Debt::dq_to_price
crates/types/src/matching/debt.rs:254:9: replace Debt::freed_t1 -> u128 with 0
crates/types/src/matching/uniswap/poolpricevec.rs:308:12: delete ! in PoolPriceVec<'a>::from_swap
crates/types/src/matching/debt.rs:308:9: replace Debt::dq_to_price -> u128 with 1
crates/types/src/matching/debt.rs:102:75: replace + with - in <impl Add for DebtType>::add
crates/types/src/matching/math/mod.rs:161:46: replace * with / in quadratic_solve
crates/types/src/matching/uniswap/flags.rs:94:9: replace <impl BitOr for U160>::bitor -> Self::Output with Default::default()
crates/types/src/matching/mod.rs:90:9: replace <impl From for MatchingPrice>::from -> Self with Default::default()
crates/types/src/matching/math/mod.rs:84:40: replace >= with < in amm_debt_same_move_solve
crates/types/src/matching/uniswap/poolpricevec.rs:312:25: replace < with == in PoolPriceVec<'a>::from_swap
crates/types/src/matching/math/mod.rs:190:5: replace resolve_precision -> u128 with 1
crates/types/src/matching/uniswap/flags.rs:94:14: replace | with & in <impl BitOr for U160>::bitor
crates/types/src/matching/sqrtprice.rs:35:46: replace * with + in SqrtPriceX96::from_float_price
crates/types/src/matching/composite.rs:30:9: replace CompositeOrder<'a>::has_amm -> bool with false
crates/types/src/matching/math/mod.rs:122:61: replace << with >> in price_intersect_solve
crates/types/src/matching/uniswap/poolsnapshot.rs:99:9: replace PoolSnapshot::ranges -> Iter<LiqRange> with Iter::from(Default::default())
crates/types/src/matching/uniswap/poolpricevec.rs:351:22: replace += with -= in PoolPriceVec<'a>::from_swap
crates/types/src/matching/composite.rs:156:9: replace CompositeOrder<'a>::t0_quantities -> (Option<u128>, Option<u128>) with (Some(1), Some(0))
crates/types/src/matching/debt.rs:108:77: replace - with / in <impl Add for DebtType>::add
crates/types/src/matching/uniswap/liqrange.rs:42:9: replace LiqRange::lower_tick -> i32 with 0
crates/types/src/matching/uniswap/poolpricevec.rs:501:61: replace < with > in PoolPriceVec<'a>::quantity
crates/types/src/matching/uniswap/poolprice.rs:318:9: replace PoolPrice<'a>::as_float -> f64 with 1.0
crates/types/src/matching/math/mod.rs:54:53: replace + with * in amm_debt_same_move_solve
crates/types/src/matching/uniswap/poolpricevec.rs:460:50: replace == with != in PoolPriceVec<'a>::to_price
crates/types/src/matching/debt.rs:175:9: replace Debt::slack -> u128 with 1
crates/types/src/matching/tokens.rs:94:9: replace TokenQuantity::as_u256 -> U256 with Default::default()
crates/types/src/matching/uniswap/poolprice.rs:46:9: replace <impl PartialEq for PoolPrice<'a>>::eq -> bool with false
crates/types/src/matching/uniswap/poolsnapshot.rs:128:9: replace PoolSnapshot::liquidity_at_tick -> Option<u128> with None
crates/types/src/matching/debt.rs:103:78: replace + with * in <impl Add for DebtType>::add
crates/types/src/matching/uniswap/mod.rs:68:9: replace Direction::is_bid -> bool with false
crates/types/src/matching/debt.rs:159:9: replace Debt::additional_t0_needed -> u128 with 0
crates/types/src/matching/debt.rs:428:9: replace <impl PartialOrd for Debt>::partial_cmp -> Option<std::cmp::Ordering> with None
crates/types/src/matching/uniswap/liqrange.rs:86:9: replace LiqRangeRef<'a>::price_in_range -> bool with true
crates/types/src/matching/math/mod.rs:74:7: replace << with >> in amm_debt_same_move_solve
crates/types/src/matching/debt.rs:337:34: replace * with + in Debt::calc_proportion
crates/types/src/matching/uniswap/poolpricevec.rs:212:9: replace PoolPriceVec<'a>::output -> u128 with 0
crates/types/src/matching/uniswap/poolprice.rs:249:22: replace >= with < in PoolPrice<'a>::order_to_target
crates/types/src/matching/uniswap/poolpricevec.rs:158:9: replace SwapStep<'a>::input -> u128 with 0
crates/types/src/matching/debt.rs:234:9: replace Debt::freed_t0 -> u128 with 1
crates/types/src/matching/math/mod.rs:138:22: replace << with >> in price_intersect_solve
crates/types/src/matching/math/mod.rs:171:53: replace == with != in quadratic_solve
crates/types/src/matching/composite.rs:156:9: replace CompositeOrder<'a>::t0_quantities -> (Option<u128>, Option<u128>) with (Some(1), None)
crates/types/src/matching/math/mod.rs:52:24: replace * with + in amm_debt_same_move_solve
crates/types/src/matching/composite.rs:130:9: replace CompositeOrder<'a>::negative_quantity_t1 -> u128 with 1
crates/types/src/matching/debt.rs:213:58: replace <= with > in Debt::valid_for_price
crates/types/src/matching/uniswap/poolprice.rs:64:17: replace < with > in PoolPrice<'a>::checked_new
crates/types/src/matching/uniswap/mod.rs:68:9: replace Direction::is_bid -> bool with true
crates/types/src/matching/uniswap/poolprice.rs:240:9: replace PoolPrice<'a>::order_to_target -> Option<PoolPriceVec<'a>> with None
crates/types/src/matching/uniswap/poolprice.rs:307:9: replace PoolPrice<'a>::as_ray -> Ray with Default::default()
crates/types/src/matching/uniswap/poolprice.rs:142:39: replace < with > in PoolPrice<'a>::d_t0
crates/types/src/matching/uniswap/flags.rs:86:9: replace <impl BitOr for UniswapFlags>::bitor -> Self::Output with Default::default()
crates/types/src/matching/debt.rs:105:62: replace > with == in <impl Add for DebtType>::add
crates/types/src/matching/composite.rs:182:9: replace CompositeOrder<'a>::partial_fill -> Self with Default::default()
crates/types/src/matching/math/mod.rs:209:50: replace + with * in max_t1_for_t0
crates/types/src/matching/debt.rs:175:9: replace Debt::slack -> u128 with 0
crates/types/src/matching/uniswap/liqrange.rs:73:13: replace && with || in <impl PartialEq for LiqRangeRef<'a>>::eq
crates/types/src/matching/math/mod.rs:83:39: replace <= with > in amm_debt_same_move_solve
crates/types/src/matching/uniswap/liqrange.rs:71:9: replace <impl PartialEq for LiqRangeRef<'a>>::eq -> bool with false
crates/types/src/matching/math/mod.rs:54:40: replace * with + in amm_debt_same_move_solve
crates/types/src/matching/composite.rs:30:9: replace CompositeOrder<'a>::has_amm -> bool with true
crates/types/src/matching/debt.rs:333:33: replace << with >> in Debt::calc_proportion
crates/types/src/matching/uniswap/poolpricevec.rs:432:36: replace > with == in PoolPriceVec<'a>::donation
crates/types/src/matching/uniswap/poolpricevec.rs:150:9: replace SwapStep<'a>::avg_price -> Ray with Default::default()
crates/types/src/matching/uniswap/poolpricevec.rs:396:40: replace - with + in PoolPriceVec<'a>::donation
crates/types/src/matching/sqrtprice.rs:56:9: replace SqrtPriceX96::as_price_x192 -> U320 with Default::default()
crates/types/src/matching/uniswap/poolpricevec.rs:166:9: replace SwapStep<'a>::output -> u128 with 1
crates/types/src/matching/composite.rs:42:9: replace CompositeOrder<'a>::bound -> Option<Ray> with Some(Default::default())
crates/types/src/matching/uniswap/poolprice.rs:196:9: replace PoolPrice<'a>::intersect_with_debt -> eyre::Result<u128> with Ok(0)
crates/types/src/matching/debt.rs:107:62: replace > with == in <impl Add for DebtType>::add
crates/types/src/matching/uniswap/poolprice.rs:147:38: replace < with > in PoolPrice<'a>::d_t0
crates/types/src/matching/debt.rs:213:43: replace > with == in Debt::valid_for_price
crates/types/src/matching/uniswap/flags.rs:56:34: replace - with / in UniswapFlags::mask
crates/types/src/matching/uniswap/poolpricevec.rs:429:33: replace > with == in PoolPriceVec<'a>::donation
crates/types/src/matching/uniswap/flags.rs:94:14: replace | with ^ in <impl BitOr for U160>::bitor
crates/types/src/matching/math/mod.rs:54:40: replace * with / in amm_debt_same_move_solve
crates/types/src/matching/uniswap/poolpricevec.rs:154:9: replace SwapStep<'a>::liquidity -> u128 with 1
crates/types/src/matching/math/mod.rs:161:42: replace * with + in quadratic_solve
