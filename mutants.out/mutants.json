[
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/debt.rs",
    "function": {
      "function_name": "Debt::set_price",
      "return_type": "-> Self",
      "span": {
        "start": {
          "line": 142,
          "column": 5
        },
        "end": {
          "line": 146,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 145,
        "column": 9
      },
      "end": {
        "line": 145,
        "column": 47
      }
    },
    "replacement": "Default::default()",
    "genre": "FnValue"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/debt.rs",
    "function": {
      "function_name": "<impl Add for DebtType>::add",
      "return_type": "-> Self::Output",
      "span": {
        "start": {
          "line": 99,
          "column": 5
        },
        "end": {
          "line": 110,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 107,
        "column": 89
      },
      "end": {
        "line": 107,
        "column": 90
      }
    },
    "replacement": "+",
    "genre": "BinaryOperator"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/uniswap/poolprice.rs",
    "function": {
      "function_name": "PoolPrice<'a>::intersect_with_debt",
      "return_type": "-> eyre::Result<u128>",
      "span": {
        "start": {
          "line": 191,
          "column": 5
        },
        "end": {
          "line": 226,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 219,
        "column": 64
      },
      "end": {
        "line": 219,
        "column": 66
      }
    },
    "replacement": "==",
    "genre": "BinaryOperator"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/mod.rs",
    "function": {
      "function_name": "<impl Add for MatchingPrice>::add",
      "return_type": "-> Self::Output",
      "span": {
        "start": {
          "line": 71,
          "column": 5
        },
        "end": {
          "line": 73,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 72,
        "column": 21
      },
      "end": {
        "line": 72,
        "column": 22
      }
    },
    "replacement": "*",
    "genre": "BinaryOperator"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/uniswap/poolpricevec.rs",
    "function": {
      "function_name": "PoolPriceVec<'a>::donation",
      "return_type": "-> DonationResult",
      "span": {
        "start": {
          "line": 376,
          "column": 5
        },
        "end": {
          "line": 450,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 413,
        "column": 34
      },
      "end": {
        "line": 413,
        "column": 36
      }
    },
    "replacement": "*=",
    "genre": "BinaryOperator"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/uniswap/poolpricevec.rs",
    "function": {
      "function_name": "PoolPriceVec<'a>::donation",
      "return_type": "-> DonationResult",
      "span": {
        "start": {
          "line": 376,
          "column": 5
        },
        "end": {
          "line": 450,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 411,
        "column": 39
      },
      "end": {
        "line": 411,
        "column": 40
      }
    },
    "replacement": "<",
    "genre": "BinaryOperator"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/uniswap/poolsnapshot.rs",
    "function": {
      "function_name": "PoolSnapshot::ranges_for_ticks",
      "return_type": "-> eyre::Result<Vec<LiqRangeRef>>",
      "span": {
        "start": {
          "line": 74,
          "column": 5
        },
        "end": {
          "line": 95,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 87,
        "column": 64
      },
      "end": {
        "line": 87,
        "column": 66
      }
    },
    "replacement": ">",
    "genre": "BinaryOperator"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/debt.rs",
    "function": {
      "function_name": "<impl PartialOrd for Debt>::partial_cmp",
      "return_type": "-> Option<std::cmp::Ordering>",
      "span": {
        "start": {
          "line": 427,
          "column": 5
        },
        "end": {
          "line": 433,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 428,
        "column": 17
      },
      "end": {
        "line": 428,
        "column": 19
      }
    },
    "replacement": "!=",
    "genre": "BinaryOperator"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/uniswap/poolprice.rs",
    "function": {
      "function_name": "PoolPrice<'a>::liquidity",
      "return_type": "-> u128",
      "span": {
        "start": {
          "line": 81,
          "column": 5
        },
        "end": {
          "line": 83,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 82,
        "column": 9
      },
      "end": {
        "line": 82,
        "column": 33
      }
    },
    "replacement": "0",
    "genre": "FnValue"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/math/mod.rs",
    "function": {
      "function_name": "quadratic_solve",
      "return_type": "-> (Option<Integer>, Option<Integer>)",
      "span": {
        "start": {
          "line": 153,
          "column": 1
        },
        "end": {
          "line": 187,
          "column": 2
        }
      }
    },
    "span": {
      "start": {
        "line": 167,
        "column": 29
      },
      "end": {
        "line": 167,
        "column": 30
      }
    },
    "replacement": "*",
    "genre": "BinaryOperator"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/debt.rs",
    "function": {
      "function_name": "Debt::calc_proportion",
      "return_type": "-> u128",
      "span": {
        "start": {
          "line": 317,
          "column": 5
        },
        "end": {
          "line": 360,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 355,
        "column": 13
      },
      "end": {
        "line": 355,
        "column": 14
      }
    },
    "replacement": "+",
    "genre": "BinaryOperator"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/debt.rs",
    "function": {
      "function_name": "<impl Add for &'a Debt>::add",
      "return_type": "-> Self::Output",
      "span": {
        "start": {
          "line": 399,
          "column": 5
        },
        "end": {
          "line": 401,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 400,
        "column": 9
      },
      "end": {
        "line": 400,
        "column": 76
      }
    },
    "replacement": "Default::default()",
    "genre": "FnValue"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/debt.rs",
    "function": {
      "function_name": "<impl Add for &'a Debt>::add",
      "return_type": "-> Self::Output",
      "span": {
        "start": {
          "line": 399,
          "column": 5
        },
        "end": {
          "line": 401,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 400,
        "column": 69
      },
      "end": {
        "line": 400,
        "column": 70
      }
    },
    "replacement": "*",
    "genre": "BinaryOperator"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/debt.rs",
    "function": {
      "function_name": "<impl Add for Debt>::add",
      "return_type": "-> Self::Output",
      "span": {
        "start": {
          "line": 383,
          "column": 5
        },
        "end": {
          "line": 393,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 385,
        "column": 34
      },
      "end": {
        "line": 385,
        "column": 36
      }
    },
    "replacement": "!=",
    "genre": "BinaryOperator"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/uniswap/flags.rs",
    "function": {
      "function_name": "<impl BitOr for UniswapFlags>::bitor",
      "return_type": "-> Self::Output",
      "span": {
        "start": {
          "line": 101,
          "column": 5
        },
        "end": {
          "line": 103,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 102,
        "column": 34
      },
      "end": {
        "line": 102,
        "column": 35
      }
    },
    "replacement": "&",
    "genre": "BinaryOperator"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/debt.rs",
    "function": {
      "function_name": "Debt::valid_for_price",
      "return_type": "-> bool",
      "span": {
        "start": {
          "line": 205,
          "column": 5
        },
        "end": {
          "line": 216,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 209,
        "column": 9
      },
      "end": {
        "line": 215,
        "column": 10
      }
    },
    "replacement": "true",
    "genre": "FnValue"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/debt.rs",
    "function": {
      "function_name": "<impl Add for Option<Debt>>::add",
      "return_type": "-> Self::Output",
      "span": {
        "start": {
          "line": 366,
          "column": 5
        },
        "end": {
          "line": 371,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 369,
        "column": 26
      },
      "end": {
        "line": 369,
        "column": 27
      }
    },
    "replacement": "*",
    "genre": "BinaryOperator"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/debt.rs",
    "function": {
      "function_name": "Debt::flat_fill_t1",
      "return_type": "-> Self",
      "span": {
        "start": {
          "line": 297,
          "column": 5
        },
        "end": {
          "line": 303,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 301,
        "column": 9
      },
      "end": {
        "line": 302,
        "column": 62
      }
    },
    "replacement": "Default::default()",
    "genre": "FnValue"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/uniswap/liqrange.rs",
    "function": {
      "function_name": "LiqRange::liquidity",
      "return_type": "-> u128",
      "span": {
        "start": {
          "line": 49,
          "column": 5
        },
        "end": {
          "line": 51,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 50,
        "column": 9
      },
      "end": {
        "line": 50,
        "column": 23
      }
    },
    "replacement": "0",
    "genre": "FnValue"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/composite.rs",
    "function": {
      "function_name": "CompositeOrder<'a>::t0_quantities",
      "return_type": "-> (Option<u128>, Option<u128>)",
      "span": {
        "start": {
          "line": 148,
          "column": 5
        },
        "end": {
          "line": 173,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 156,
        "column": 9
      },
      "end": {
        "line": 172,
        "column": 10
      }
    },
    "replacement": "(Some(1), Some(1))",
    "genre": "FnValue"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/composite.rs",
    "function": {
      "function_name": "CompositeOrder<'a>::calc_quantities",
      "return_type": "-> (u128, u128)",
      "span": {
        "start": {
          "line": 45,
          "column": 5
        },
        "end": {
          "line": 64,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 46,
        "column": 9
      },
      "end": {
        "line": 63,
        "column": 24
      }
    },
    "replacement": "(1, 0)",
    "genre": "FnValue"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/uniswap/poolpricevec.rs",
    "function": {
      "function_name": "PoolPriceVec<'a>::delta_to_price",
      "return_type": "-> (u128, u128)",
      "span": {
        "start": {
          "line": 476,
          "column": 5
        },
        "end": {
          "line": 490,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 483,
        "column": 9
      },
      "end": {
        "line": 489,
        "column": 31
      }
    },
    "replacement": "(1, 0)",
    "genre": "FnValue"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/debt.rs",
    "function": {
      "function_name": "<impl Add for DebtType>::add",
      "return_type": "-> Self::Output",
      "span": {
        "start": {
          "line": 99,
          "column": 5
        },
        "end": {
          "line": 110,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 108,
        "column": 77
      },
      "end": {
        "line": 108,
        "column": 78
      }
    },
    "replacement": "+",
    "genre": "BinaryOperator"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/composite.rs",
    "function": {
      "function_name": "CompositeOrder<'a>::t0_quantities",
      "return_type": "-> (Option<u128>, Option<u128>)",
      "span": {
        "start": {
          "line": 148,
          "column": 5
        },
        "end": {
          "line": 173,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 156,
        "column": 9
      },
      "end": {
        "line": 172,
        "column": 10
      }
    },
    "replacement": "(Some(0), None)",
    "genre": "FnValue"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/uniswap/poolpricevec.rs",
    "function": {
      "function_name": "SwapStep<'a>::for_price_range",
      "return_type": "-> eyre::Result<Self>",
      "span": {
        "start": {
          "line": 42,
          "column": 5
        },
        "end": {
          "line": 78,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 65,
        "column": 39
      },
      "end": {
        "line": 65,
        "column": 41
      }
    },
    "replacement": "<",
    "genre": "BinaryOperator"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/uniswap/poolpricevec.rs",
    "function": {
      "function_name": "SwapStep<'a>::output",
      "return_type": "-> u128",
      "span": {
        "start": {
          "line": 165,
          "column": 5
        },
        "end": {
          "line": 171,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 166,
        "column": 27
      },
      "end": {
        "line": 166,
        "column": 28
      }
    },
    "replacement": "==",
    "genre": "BinaryOperator"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/debt.rs",
    "function": {
      "function_name": "<impl Sub for DebtType>::sub",
      "return_type": "-> Self::Output",
      "span": {
        "start": {
          "line": 116,
          "column": 5
        },
        "end": {
          "line": 121,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 117,
        "column": 9
      },
      "end": {
        "line": 120,
        "column": 10
      }
    },
    "replacement": "Default::default()",
    "genre": "FnValue"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/uniswap/poolprice.rs",
    "function": {
      "function_name": "<impl PartialEq for PoolPrice<'a>>::eq",
      "return_type": "-> bool",
      "span": {
        "start": {
          "line": 45,
          "column": 5
        },
        "end": {
          "line": 47,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 46,
        "column": 37
      },
      "end": {
        "line": 46,
        "column": 39
      }
    },
    "replacement": "||",
    "genre": "BinaryOperator"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/uniswap/poolpricevec.rs",
    "function": {
      "function_name": "PoolPriceVec<'a>::delta_to_price",
      "return_type": "-> (u128, u128)",
      "span": {
        "start": {
          "line": 476,
          "column": 5
        },
        "end": {
          "line": 490,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 483,
        "column": 9
      },
      "end": {
        "line": 489,
        "column": 31
      }
    },
    "replacement": "(0, 1)",
    "genre": "FnValue"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/math/mod.rs",
    "function": {
      "function_name": "amm_debt_same_move_solve",
      "return_type": "-> u128",
      "span": {
        "start": {
          "line": 24,
          "column": 1
        },
        "end": {
          "line": 99,
          "column": 2
        }
      }
    },
    "span": {
      "start": {
        "line": 54,
        "column": 53
      },
      "end": {
        "line": 54,
        "column": 54
      }
    },
    "replacement": "-",
    "genre": "BinaryOperator"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/mod.rs",
    "function": {
      "function_name": "<impl Add for MatchingPrice>::add",
      "return_type": "-> Self::Output",
      "span": {
        "start": {
          "line": 71,
          "column": 5
        },
        "end": {
          "line": 73,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 72,
        "column": 9
      },
      "end": {
        "line": 72,
        "column": 29
      }
    },
    "replacement": "Default::default()",
    "genre": "FnValue"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/mod.rs",
    "function": {
      "function_name": "const_1e54",
      "return_type": "-> &'static Natural",
      "span": {
        "start": {
          "line": 32,
          "column": 1
        },
        "end": {
          "line": 35,
          "column": 2
        }
      }
    },
    "span": {
      "start": {
        "line": 33,
        "column": 5
      },
      "end": {
        "line": 34,
        "column": 72
      }
    },
    "replacement": "&Default::default()",
    "genre": "FnValue"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/uniswap/poolprice.rs",
    "function": {
      "function_name": "PoolPrice<'a>::d_t0",
      "return_type": "-> eyre::Result<Self>",
      "span": {
        "start": {
          "line": 85,
          "column": 5
        },
        "end": {
          "line": 171,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 147,
        "column": 38
      },
      "end": {
        "line": 147,
        "column": 39
      }
    },
    "replacement": "==",
    "genre": "BinaryOperator"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/uniswap/poolprice.rs",
    "function": {
      "function_name": "<impl PartialOrd for PoolPrice<'a>>::partial_cmp",
      "return_type": "-> Option<std::cmp::Ordering>",
      "span": {
        "start": {
          "line": 51,
          "column": 5
        },
        "end": {
          "line": 53,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 52,
        "column": 9
      },
      "end": {
        "line": 52,
        "column": 30
      }
    },
    "replacement": "Some(Default::default())",
    "genre": "FnValue"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/uniswap/liqrange.rs",
    "function": {
      "function_name": "LiqRangeRef<'a>::start_price",
      "return_type": "-> PoolPrice<'a>",
      "span": {
        "start": {
          "line": 109,
          "column": 5
        },
        "end": {
          "line": 113,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 111,
        "column": 9
      },
      "end": {
        "line": 112,
        "column": 90
      }
    },
    "replacement": "Default::default()",
    "genre": "FnValue"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/uniswap/poolpricevec.rs",
    "function": {
      "function_name": "PoolPriceVec<'a>::donation",
      "return_type": "-> DonationResult",
      "span": {
        "start": {
          "line": 376,
          "column": 5
        },
        "end": {
          "line": 450,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 430,
        "column": 52
      },
      "end": {
        "line": 430,
        "column": 53
      }
    },
    "replacement": "+",
    "genre": "BinaryOperator"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/math/mod.rs",
    "function": {
      "function_name": "amm_debt_same_move_solve",
      "return_type": "-> u128",
      "span": {
        "start": {
          "line": 24,
          "column": 1
        },
        "end": {
          "line": 99,
          "column": 2
        }
      }
    },
    "span": {
      "start": {
        "line": 44,
        "column": 68
      },
      "end": {
        "line": 44,
        "column": 70
      }
    },
    "replacement": ">>",
    "genre": "BinaryOperator"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/uniswap/liqrange.rs",
    "function": {
      "function_name": "LiqRangeRef<'a>::next",
      "return_type": "-> Option<Self>",
      "span": {
        "start": {
          "line": 127,
          "column": 5
        },
        "end": {
          "line": 132,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 130,
        "column": 93
      },
      "end": {
        "line": 130,
        "column": 94
      }
    },
    "replacement": "+",
    "genre": "BinaryOperator"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/debt.rs",
    "function": {
      "function_name": "Debt::valid_for_price",
      "return_type": "-> bool",
      "span": {
        "start": {
          "line": 205,
          "column": 5
        },
        "end": {
          "line": 216,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 214,
        "column": 51
      },
      "end": {
        "line": 214,
        "column": 53
      }
    },
    "replacement": "||",
    "genre": "BinaryOperator"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/uniswap/liqrange.rs",
    "function": {
      "function_name": "LiqRange::upper_tick",
      "return_type": "-> i32",
      "span": {
        "start": {
          "line": 45,
          "column": 5
        },
        "end": {
          "line": 47,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 46,
        "column": 9
      },
      "end": {
        "line": 46,
        "column": 24
      }
    },
    "replacement": "0",
    "genre": "FnValue"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/uniswap/poolpricevec.rs",
    "function": {
      "function_name": "PoolPriceVec<'a>::donation",
      "return_type": "-> DonationResult",
      "span": {
        "start": {
          "line": 376,
          "column": 5
        },
        "end": {
          "line": 450,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 411,
        "column": 39
      },
      "end": {
        "line": 411,
        "column": 40
      }
    },
    "replacement": "==",
    "genre": "BinaryOperator"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/uniswap/mod.rs",
    "function": {
      "function_name": "Direction::sort_tokens",
      "return_type": "-> (T, T)",
      "span": {
        "start": {
          "line": 88,
          "column": 5
        },
        "end": {
          "line": 95,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 91,
        "column": 9
      },
      "end": {
        "line": 94,
        "column": 10
      }
    },
    "replacement": "(Default::default(), Default::default())",
    "genre": "FnValue"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/uniswap/poolpricevec.rs",
    "function": {
      "function_name": "PoolPriceVec<'a>::donation",
      "return_type": "-> DonationResult",
      "span": {
        "start": {
          "line": 376,
          "column": 5
        },
        "end": {
          "line": 450,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 388,
        "column": 32
      },
      "end": {
        "line": 388,
        "column": 33
      }
    },
    "replacement": "-",
    "genre": "BinaryOperator"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/uniswap/poolsnapshot.rs",
    "function": {
      "function_name": "PoolSnapshot::liquidity_at_tick",
      "return_type": "-> Option<u128>",
      "span": {
        "start": {
          "line": 127,
          "column": 5
        },
        "end": {
          "line": 129,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 128,
        "column": 9
      },
      "end": {
        "line": 128,
        "column": 69
      }
    },
    "replacement": "Some(0)",
    "genre": "FnValue"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/uniswap/mod.rs",
    "function": {
      "function_name": "Quantity::magnitude",
      "return_type": "-> u128",
      "span": {
        "start": {
          "line": 21,
          "column": 5
        },
        "end": {
          "line": 26,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 22,
        "column": 9
      },
      "end": {
        "line": 25,
        "column": 10
      }
    },
    "replacement": "1",
    "genre": "FnValue"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/uniswap/flags.rs",
    "function": {
      "function_name": "<impl From for U160>::from",
      "return_type": "-> U160",
      "span": {
        "start": {
          "line": 61,
          "column": 5
        },
        "end": {
          "line": 79,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 62,
        "column": 9
      },
      "end": {
        "line": 78,
        "column": 37
      }
    },
    "replacement": "Default::default()",
    "genre": "FnValue"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/sqrtprice.rs",
    "function": {
      "function_name": "<impl From for SqrtPriceX96>::from",
      "return_type": "-> Self",
      "span": {
        "start": {
          "line": 87,
          "column": 5
        },
        "end": {
          "line": 95,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 88,
        "column": 67
      },
      "end": {
        "line": 88,
        "column": 68
      }
    },
    "replacement": "/",
    "genre": "BinaryOperator"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/uniswap/flags.rs",
    "function": {
      "function_name": "<impl BitOr for UniswapFlags>::bitor",
      "return_type": "-> Self::Output",
      "span": {
        "start": {
          "line": 101,
          "column": 5
        },
        "end": {
          "line": 103,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 102,
        "column": 34
      },
      "end": {
        "line": 102,
        "column": 35
      }
    },
    "replacement": "^",
    "genre": "BinaryOperator"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/uniswap/poolpricevec.rs",
    "function": {
      "function_name": "PoolPriceVec<'a>::donation",
      "return_type": "-> DonationResult",
      "span": {
        "start": {
          "line": 376,
          "column": 5
        },
        "end": {
          "line": 450,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 433,
        "column": 39
      },
      "end": {
        "line": 433,
        "column": 41
      }
    },
    "replacement": "*=",
    "genre": "BinaryOperator"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/debt.rs",
    "function": {
      "function_name": "Debt::price",
      "return_type": "-> Ray",
      "span": {
        "start": {
          "line": 152,
          "column": 5
        },
        "end": {
          "line": 154,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 153,
        "column": 9
      },
      "end": {
        "line": 153,
        "column": 23
      }
    },
    "replacement": "Default::default()",
    "genre": "FnValue"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/debt.rs",
    "function": {
      "function_name": "Debt::valid_for_price",
      "return_type": "-> bool",
      "span": {
        "start": {
          "line": 205,
          "column": 5
        },
        "end": {
          "line": 216,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 214,
        "column": 60
      },
      "end": {
        "line": 214,
        "column": 61
      }
    },
    "replacement": "==",
    "genre": "BinaryOperator"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/uniswap/poolsnapshot.rs",
    "function": {
      "function_name": "PoolSnapshot::ranges_for_ticks",
      "return_type": "-> eyre::Result<Vec<LiqRangeRef>>",
      "span": {
        "start": {
          "line": 74,
          "column": 5
        },
        "end": {
          "line": 95,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 87,
        "column": 37
      },
      "end": {
        "line": 87,
        "column": 38
      }
    },
    "replacement": "<",
    "genre": "BinaryOperator"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/math/mod.rs",
    "function": {
      "function_name": "price_intersect_solve",
      "return_type": "-> Integer",
      "span": {
        "start": {
          "line": 101,
          "column": 1
        },
        "end": {
          "line": 151,
          "column": 2
        }
      }
    },
    "span": {
      "start": {
        "line": 143,
        "column": 23
      },
      "end": {
        "line": 143,
        "column": 24
      }
    },
    "replacement": "+",
    "genre": "BinaryOperator"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/math/mod.rs",
    "function": {
      "function_name": "price_intersect_solve",
      "return_type": "-> Integer",
      "span": {
        "start": {
          "line": 101,
          "column": 1
        },
        "end": {
          "line": 151,
          "column": 2
        }
      }
    },
    "span": {
      "start": {
        "line": 138,
        "column": 30
      },
      "end": {
        "line": 138,
        "column": 31
      }
    },
    "replacement": "*",
    "genre": "BinaryOperator"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/math/mod.rs",
    "function": {
      "function_name": "resolve_precision",
      "return_type": "-> u128",
      "span": {
        "start": {
          "line": 189,
          "column": 1
        },
        "end": {
          "line": 195,
          "column": 2
        }
      }
    },
    "span": {
      "start": {
        "line": 190,
        "column": 5
      },
      "end": {
        "line": 194,
        "column": 27
      }
    },
    "replacement": "0",
    "genre": "FnValue"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/uniswap/poolpricevec.rs",
    "function": {
      "function_name": "PoolPriceVec<'a>::output",
      "return_type": "-> u128",
      "span": {
        "start": {
          "line": 211,
          "column": 5
        },
        "end": {
          "line": 217,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 212,
        "column": 9
      },
      "end": {
        "line": 216,
        "column": 10
      }
    },
    "replacement": "1",
    "genre": "FnValue"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/uniswap/flags.rs",
    "function": {
      "function_name": "UniswapFlags::mask",
      "return_type": "-> U160",
      "span": {
        "start": {
          "line": 55,
          "column": 5
        },
        "end": {
          "line": 57,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 56,
        "column": 34
      },
      "end": {
        "line": 56,
        "column": 35
      }
    },
    "replacement": "+",
    "genre": "BinaryOperator"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/uniswap/poolpricevec.rs",
    "function": {
      "function_name": "SwapStep<'a>::input",
      "return_type": "-> u128",
      "span": {
        "start": {
          "line": 157,
          "column": 5
        },
        "end": {
          "line": 163,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 158,
        "column": 27
      },
      "end": {
        "line": 158,
        "column": 28
      }
    },
    "replacement": "<",
    "genre": "BinaryOperator"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/uniswap/poolpricevec.rs",
    "function": {
      "function_name": "SwapStep<'a>::for_price_range",
      "return_type": "-> eyre::Result<Self>",
      "span": {
        "start": {
          "line": 42,
          "column": 5
        },
        "end": {
          "line": 78,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 61,
        "column": 21
      },
      "end": {
        "line": 61,
        "column": 23
      }
    },
    "replacement": "<",
    "genre": "BinaryOperator"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/math/mod.rs",
    "function": {
      "function_name": "price_intersect_solve",
      "return_type": "-> Integer",
      "span": {
        "start": {
          "line": 101,
          "column": 1
        },
        "end": {
          "line": 151,
          "column": 2
        }
      }
    },
    "span": {
      "start": {
        "line": 132,
        "column": 49
      },
      "end": {
        "line": 132,
        "column": 50
      }
    },
    "replacement": "+",
    "genre": "BinaryOperator"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/uniswap/poolpricevec.rs",
    "function": {
      "function_name": "PoolPriceVec<'a>::input",
      "return_type": "-> u128",
      "span": {
        "start": {
          "line": 203,
          "column": 5
        },
        "end": {
          "line": 209,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 204,
        "column": 33
      },
      "end": {
        "line": 204,
        "column": 34
      }
    },
    "replacement": "<",
    "genre": "BinaryOperator"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/uniswap/poolprice.rs",
    "function": {
      "function_name": "PoolPrice<'a>::d_t0",
      "return_type": "-> eyre::Result<Self>",
      "span": {
        "start": {
          "line": 85,
          "column": 5
        },
        "end": {
          "line": 171,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 117,
        "column": 75
      },
      "end": {
        "line": 117,
        "column": 76
      }
    },
    "replacement": "+",
    "genre": "BinaryOperator"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/debt.rs",
    "function": {
      "function_name": "<impl PartialEq for Debt>::eq",
      "return_type": "-> bool",
      "span": {
        "start": {
          "line": 405,
          "column": 5
        },
        "end": {
          "line": 407,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 406,
        "column": 9
      },
      "end": {
        "line": 406,
        "column": 37
      }
    },
    "replacement": "true",
    "genre": "FnValue"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/uniswap/poolpricevec.rs",
    "function": {
      "function_name": "PoolPriceVec<'a>::quantity",
      "return_type": "-> (u128, u128, OrderPrice)",
      "span": {
        "start": {
          "line": 496,
          "column": 5
        },
        "end": {
          "line": 508,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 498,
        "column": 9
      },
      "end": {
        "line": 507,
        "column": 35
      }
    },
    "replacement": "(0, 0, Default::default())",
    "genre": "FnValue"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/sqrtprice.rs",
    "function": {
      "function_name": "SqrtPriceX96::from_float_price",
      "return_type": "-> Self",
      "span": {
        "start": {
          "line": 33,
          "column": 5
        },
        "end": {
          "line": 36,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 35,
        "column": 9
      },
      "end": {
        "line": 35,
        "column": 67
      }
    },
    "replacement": "Default::default()",
    "genre": "FnValue"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/uniswap/poolpricevec.rs",
    "function": {
      "function_name": "PoolPriceVec<'a>::is_buy",
      "return_type": "-> bool",
      "span": {
        "start": {
          "line": 492,
          "column": 5
        },
        "end": {
          "line": 494,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 493,
        "column": 32
      },
      "end": {
        "line": 493,
        "column": 33
      }
    },
    "replacement": ">",
    "genre": "BinaryOperator"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/uniswap/poolpricevec.rs",
    "function": {
      "function_name": "PoolPriceVec<'a>::from_price_range",
      "return_type": "-> eyre::Result<Self>",
      "span": {
        "start": {
          "line": 223,
          "column": 5
        },
        "end": {
          "line": 240,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 227,
        "column": 12
      },
      "end": {
        "line": 227,
        "column": 13
      }
    },
    "replacement": "",
    "genre": "UnaryOperator"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/math/mod.rs",
    "function": {
      "function_name": "quadratic_solve",
      "return_type": "-> (Option<Integer>, Option<Integer>)",
      "span": {
        "start": {
          "line": 153,
          "column": 1
        },
        "end": {
          "line": 187,
          "column": 2
        }
      }
    },
    "span": {
      "start": {
        "line": 166,
        "column": 30
      },
      "end": {
        "line": 166,
        "column": 31
      }
    },
    "replacement": "/",
    "genre": "BinaryOperator"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/debt.rs",
    "function": {
      "function_name": "Debt::dq_to_price",
      "return_type": "-> u128",
      "span": {
        "start": {
          "line": 305,
          "column": 5
        },
        "end": {
          "line": 315,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 313,
        "column": 24
      },
      "end": {
        "line": 313,
        "column": 25
      }
    },
    "replacement": "+",
    "genre": "BinaryOperator"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/uniswap/poolpricevec.rs",
    "function": {
      "function_name": "PoolPriceVec<'a>::from_swap",
      "return_type": "-> eyre::Result<Self>",
      "span": {
        "start": {
          "line": 288,
          "column": 5
        },
        "end": {
          "line": 374,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 312,
        "column": 25
      },
      "end": {
        "line": 312,
        "column": 26
      }
    },
    "replacement": ">",
    "genre": "BinaryOperator"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/tokens.rs",
    "function": {
      "function_name": "TokenQuantity::zero_from_uint",
      "return_type": "-> Self",
      "span": {
        "start": {
          "line": 56,
          "column": 5
        },
        "end": {
          "line": 59,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 58,
        "column": 9
      },
      "end": {
        "line": 58,
        "column": 34
      }
    },
    "replacement": "Default::default()",
    "genre": "FnValue"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/uniswap/liqrange.rs",
    "function": {
      "function_name": "<impl PartialEq for LiqRangeRef<'a>>::eq",
      "return_type": "-> bool",
      "span": {
        "start": {
          "line": 70,
          "column": 5
        },
        "end": {
          "line": 74,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 73,
        "column": 31
      },
      "end": {
        "line": 73,
        "column": 33
      }
    },
    "replacement": "!=",
    "genre": "BinaryOperator"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/uniswap/poolpricevec.rs",
    "function": {
      "function_name": "PoolPriceVec<'a>::donation",
      "return_type": "-> DonationResult",
      "span": {
        "start": {
          "line": 376,
          "column": 5
        },
        "end": {
          "line": 450,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 429,
        "column": 33
      },
      "end": {
        "line": 429,
        "column": 34
      }
    },
    "replacement": "<",
    "genre": "BinaryOperator"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/uniswap/poolprice.rs",
    "function": {
      "function_name": "<impl PartialEq for PoolPrice<'a>>::eq",
      "return_type": "-> bool",
      "span": {
        "start": {
          "line": 45,
          "column": 5
        },
        "end": {
          "line": 47,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 46,
        "column": 55
      },
      "end": {
        "line": 46,
        "column": 57
      }
    },
    "replacement": "!=",
    "genre": "BinaryOperator"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/uniswap/poolprice.rs",
    "function": {
      "function_name": "PoolPrice<'a>::intersect_with_debt",
      "return_type": "-> eyre::Result<u128>",
      "span": {
        "start": {
          "line": 191,
          "column": 5
        },
        "end": {
          "line": 226,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 214,
        "column": 17
      },
      "end": {
        "line": 214,
        "column": 18
      }
    },
    "replacement": ">",
    "genre": "BinaryOperator"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/uniswap/poolprice.rs",
    "function": {
      "function_name": "PoolPrice<'a>::as_sqrtpricex96",
      "return_type": "-> SqrtPriceX96",
      "span": {
        "start": {
          "line": 310,
          "column": 5
        },
        "end": {
          "line": 313,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 312,
        "column": 9
      },
      "end": {
        "line": 312,
        "column": 19
      }
    },
    "replacement": "Default::default()",
    "genre": "FnValue"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/uniswap/poolpricevec.rs",
    "function": {
      "function_name": "SwapStep<'a>::compute_info",
      "return_type": "-> eyre::Result<Self>",
      "span": {
        "start": {
          "line": 107,
          "column": 5
        },
        "end": {
          "line": 139,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 114,
        "column": 9
      },
      "end": {
        "line": 138,
        "column": 67
      }
    },
    "replacement": "Ok(Default::default())",
    "genre": "FnValue"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/uniswap/poolpricevec.rs",
    "function": {
      "function_name": "SwapStep<'a>::start_price",
      "return_type": "-> SqrtPriceX96",
      "span": {
        "start": {
          "line": 141,
          "column": 5
        },
        "end": {
          "line": 143,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 142,
        "column": 9
      },
      "end": {
        "line": 142,
        "column": 25
      }
    },
    "replacement": "Default::default()",
    "genre": "FnValue"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/tokens.rs",
    "function": {
      "function_name": "TokenQuantity::swap_at_price",
      "return_type": "-> Self",
      "span": {
        "start": {
          "line": 66,
          "column": 5
        },
        "end": {
          "line": 71,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 67,
        "column": 9
      },
      "end": {
        "line": 70,
        "column": 10
      }
    },
    "replacement": "Default::default()",
    "genre": "FnValue"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/uniswap/poolpricevec.rs",
    "function": {
      "function_name": "SwapStep<'a>::compute_info",
      "return_type": "-> eyre::Result<Self>",
      "span": {
        "start": {
          "line": 107,
          "column": 5
        },
        "end": {
          "line": 139,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 120,
        "column": 13
      },
      "end": {
        "line": 120,
        "column": 15
      }
    },
    "replacement": "&&",
    "genre": "BinaryOperator"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/uniswap/liqrange.rs",
    "function": {
      "function_name": "LiqRange::upper_tick",
      "return_type": "-> i32",
      "span": {
        "start": {
          "line": 45,
          "column": 5
        },
        "end": {
          "line": 47,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 46,
        "column": 9
      },
      "end": {
        "line": 46,
        "column": 24
      }
    },
    "replacement": "1",
    "genre": "FnValue"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/uniswap/poolsnapshot.rs",
    "function": {
      "function_name": "PoolSnapshot::ranges_for_ticks",
      "return_type": "-> eyre::Result<Vec<LiqRangeRef>>",
      "span": {
        "start": {
          "line": 74,
          "column": 5
        },
        "end": {
          "line": 95,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 87,
        "column": 37
      },
      "end": {
        "line": 87,
        "column": 38
      }
    },
    "replacement": "==",
    "genre": "BinaryOperator"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/uniswap/flags.rs",
    "function": {
      "function_name": "UniswapFlags::mask",
      "return_type": "-> U160",
      "span": {
        "start": {
          "line": 55,
          "column": 5
        },
        "end": {
          "line": 57,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 56,
        "column": 9
      },
      "end": {
        "line": 56,
        "column": 52
      }
    },
    "replacement": "Default::default()",
    "genre": "FnValue"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/uniswap/poolprice.rs",
    "function": {
      "function_name": "PoolPrice<'a>::d_t0",
      "return_type": "-> eyre::Result<Self>",
      "span": {
        "start": {
          "line": 85,
          "column": 5
        },
        "end": {
          "line": 171,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 157,
        "column": 54
      },
      "end": {
        "line": 157,
        "column": 56
      }
    },
    "replacement": "+=",
    "genre": "BinaryOperator"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/tokens.rs",
    "function": {
      "function_name": "TokenQuantity::quantity",
      "return_type": "-> u128",
      "span": {
        "start": {
          "line": 87,
          "column": 5
        },
        "end": {
          "line": 91,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 88,
        "column": 9
      },
      "end": {
        "line": 90,
        "column": 10
      }
    },
    "replacement": "1",
    "genre": "FnValue"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/debt.rs",
    "function": {
      "function_name": "Debt::partial_fill",
      "return_type": "-> Self",
      "span": {
        "start": {
          "line": 269,
          "column": 5
        },
        "end": {
          "line": 285,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 275,
        "column": 44
      },
      "end": {
        "line": 275,
        "column": 45
      }
    },
    "replacement": "*",
    "genre": "BinaryOperator"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/uniswap/mod.rs",
    "function": {
      "function_name": "Quantity::as_output",
      "return_type": "-> Direction",
      "span": {
        "start": {
          "line": 36,
          "column": 5
        },
        "end": {
          "line": 42,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 38,
        "column": 9
      },
      "end": {
        "line": 41,
        "column": 10
      }
    },
    "replacement": "Default::default()",
    "genre": "FnValue"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/debt.rs",
    "function": {
      "function_name": "Debt::calc_proportion",
      "return_type": "-> u128",
      "span": {
        "start": {
          "line": 317,
          "column": 5
        },
        "end": {
          "line": 360,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 327,
        "column": 9
      },
      "end": {
        "line": 359,
        "column": 46
      }
    },
    "replacement": "1",
    "genre": "FnValue"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/math/mod.rs",
    "function": {
      "function_name": "quadratic_solve",
      "return_type": "-> (Option<Integer>, Option<Integer>)",
      "span": {
        "start": {
          "line": 153,
          "column": 1
        },
        "end": {
          "line": 187,
          "column": 2
        }
      }
    },
    "span": {
      "start": {
        "line": 159,
        "column": 5
      },
      "end": {
        "line": 186,
        "column": 6
      }
    },
    "replacement": "(Some(Default::default()), Some(Default::default()))",
    "genre": "FnValue"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/uniswap/poolsnapshot.rs",
    "function": {
      "function_name": "PoolSnapshot::get_range_for_tick",
      "return_type": "-> Option<LiqRangeRef>",
      "span": {
        "start": {
          "line": 64,
          "column": 5
        },
        "end": {
          "line": 72,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 70,
        "column": 49
      },
      "end": {
        "line": 70,
        "column": 51
      }
    },
    "replacement": "||",
    "genre": "BinaryOperator"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/debt.rs",
    "function": {
      "function_name": "Debt::dq_to_price",
      "return_type": "-> u128",
      "span": {
        "start": {
          "line": 305,
          "column": 5
        },
        "end": {
          "line": 315,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 311,
        "column": 22
      },
      "end": {
        "line": 311,
        "column": 23
      }
    },
    "replacement": "/",
    "genre": "BinaryOperator"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/uniswap/poolpricevec.rs",
    "function": {
      "function_name": "PoolPriceVec<'a>::from_price_range",
      "return_type": "-> eyre::Result<Self>",
      "span": {
        "start": {
          "line": 223,
          "column": 5
        },
        "end": {
          "line": 240,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 227,
        "column": 9
      },
      "end": {
        "line": 239,
        "column": 44
      }
    },
    "replacement": "Ok(Default::default())",
    "genre": "FnValue"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/uniswap/poolpricevec.rs",
    "function": {
      "function_name": "PoolPriceVec<'a>::donation",
      "return_type": "-> DonationResult",
      "span": {
        "start": {
          "line": 376,
          "column": 5
        },
        "end": {
          "line": 450,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 430,
        "column": 52
      },
      "end": {
        "line": 430,
        "column": 53
      }
    },
    "replacement": "/",
    "genre": "BinaryOperator"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/composite.rs",
    "function": {
      "function_name": "CompositeOrder<'a>::has_debt",
      "return_type": "-> bool",
      "span": {
        "start": {
          "line": 33,
          "column": 5
        },
        "end": {
          "line": 35,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 34,
        "column": 9
      },
      "end": {
        "line": 34,
        "column": 28
      }
    },
    "replacement": "true",
    "genre": "FnValue"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/uniswap/poolsnapshot.rs",
    "function": {
      "function_name": "PoolSnapshot::get_range_for_tick",
      "return_type": "-> Option<LiqRangeRef>",
      "span": {
        "start": {
          "line": 64,
          "column": 5
        },
        "end": {
          "line": 72,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 67,
        "column": 9
      },
      "end": {
        "line": 71,
        "column": 89
      }
    },
    "replacement": "Some(Default::default())",
    "genre": "FnValue"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/math/mod.rs",
    "function": {
      "function_name": "quadratic_solve",
      "return_type": "-> (Option<Integer>, Option<Integer>)",
      "span": {
        "start": {
          "line": 153,
          "column": 1
        },
        "end": {
          "line": 187,
          "column": 2
        }
      }
    },
    "span": {
      "start": {
        "line": 162,
        "column": 53
      },
      "end": {
        "line": 162,
        "column": 54
      }
    },
    "replacement": "/",
    "genre": "BinaryOperator"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/debt.rs",
    "function": {
      "function_name": "Debt::validate_and_set_price",
      "return_type": "-> bool",
      "span": {
        "start": {
          "line": 218,
          "column": 5
        },
        "end": {
          "line": 224,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 219,
        "column": 9
      },
      "end": {
        "line": 223,
        "column": 12
      }
    },
    "replacement": "true",
    "genre": "FnValue"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/uniswap/poolpricevec.rs",
    "function": {
      "function_name": "PoolPriceVec<'a>::quantity",
      "return_type": "-> (u128, u128, OrderPrice)",
      "span": {
        "start": {
          "line": 496,
          "column": 5
        },
        "end": {
          "line": 508,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 501,
        "column": 32
      },
      "end": {
        "line": 501,
        "column": 33
      }
    },
    "replacement": "==",
    "genre": "BinaryOperator"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/math/mod.rs",
    "function": {
      "function_name": "amm_debt_same_move_solve",
      "return_type": "-> u128",
      "span": {
        "start": {
          "line": 24,
          "column": 1
        },
        "end": {
          "line": 99,
          "column": 2
        }
      }
    },
    "span": {
      "start": {
        "line": 91,
        "column": 43
      },
      "end": {
        "line": 91,
        "column": 45
      }
    },
    "replacement": ">",
    "genre": "BinaryOperator"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/debt.rs",
    "function": {
      "function_name": "Debt::freed_t0",
      "return_type": "-> u128",
      "span": {
        "start": {
          "line": 231,
          "column": 5
        },
        "end": {
          "line": 247,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 237,
        "column": 22
      },
      "end": {
        "line": 237,
        "column": 24
      }
    },
    "replacement": "<",
    "genre": "BinaryOperator"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/math/mod.rs",
    "function": {
      "function_name": "quadratic_solve",
      "return_type": "-> (Option<Integer>, Option<Integer>)",
      "span": {
        "start": {
          "line": 153,
          "column": 1
        },
        "end": {
          "line": 187,
          "column": 2
        }
      }
    },
    "span": {
      "start": {
        "line": 159,
        "column": 5
      },
      "end": {
        "line": 186,
        "column": 6
      }
    },
    "replacement": "(None, Some(Default::default()))",
    "genre": "FnValue"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/uniswap/liqrange.rs",
    "function": {
      "function_name": "LiqRangeRef<'a>::price_in_range",
      "return_type": "-> bool",
      "span": {
        "start": {
          "line": 84,
          "column": 5
        },
        "end": {
          "line": 91,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 87,
        "column": 24
      },
      "end": {
        "line": 87,
        "column": 26
      }
    },
    "replacement": "<",
    "genre": "BinaryOperator"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/debt.rs",
    "function": {
      "function_name": "<impl PartialEq for Debt>::eq",
      "return_type": "-> bool",
      "span": {
        "start": {
          "line": 405,
          "column": 5
        },
        "end": {
          "line": 407,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 406,
        "column": 9
      },
      "end": {
        "line": 406,
        "column": 37
      }
    },
    "replacement": "false",
    "genre": "FnValue"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/uniswap/poolpricevec.rs",
    "function": {
      "function_name": "PoolPriceVec<'a>::to_price",
      "return_type": "-> Option<Self>",
      "span": {
        "start": {
          "line": 453,
          "column": 5
        },
        "end": {
          "line": 474,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 459,
        "column": 48
      },
      "end": {
        "line": 459,
        "column": 50
      }
    },
    "replacement": "!=",
    "genre": "BinaryOperator"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/uniswap/liqrange.rs",
    "function": {
      "function_name": "LiqRangeRef<'a>::next",
      "return_type": "-> Option<Self>",
      "span": {
        "start": {
          "line": 127,
          "column": 5
        },
        "end": {
          "line": 132,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 130,
        "column": 93
      },
      "end": {
        "line": 130,
        "column": 94
      }
    },
    "replacement": "/",
    "genre": "BinaryOperator"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/math/mod.rs",
    "function": {
      "function_name": "amm_debt_same_move_solve",
      "return_type": "-> u128",
      "span": {
        "start": {
          "line": 24,
          "column": 1
        },
        "end": {
          "line": 99,
          "column": 2
        }
      }
    },
    "span": {
      "start": {
        "line": 52,
        "column": 24
      },
      "end": {
        "line": 52,
        "column": 25
      }
    },
    "replacement": "/",
    "genre": "BinaryOperator"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/uniswap/liqrange.rs",
    "function": {
      "function_name": "<impl PartialEq for LiqRangeRef<'a>>::eq",
      "return_type": "-> bool",
      "span": {
        "start": {
          "line": 70,
          "column": 5
        },
        "end": {
          "line": 74,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 71,
        "column": 9
      },
      "end": {
        "line": 73,
        "column": 49
      }
    },
    "replacement": "true",
    "genre": "FnValue"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/uniswap/mod.rs",
    "function": {
      "function_name": "Direction::from_is_bid",
      "return_type": "-> Self",
      "span": {
        "start": {
          "line": 60,
          "column": 5
        },
        "end": {
          "line": 65,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 61,
        "column": 9
      },
      "end": {
        "line": 64,
        "column": 10
      }
    },
    "replacement": "Default::default()",
    "genre": "FnValue"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/debt.rs",
    "function": {
      "function_name": "<impl PartialOrd for Debt>::partial_cmp",
      "return_type": "-> Option<std::cmp::Ordering>",
      "span": {
        "start": {
          "line": 427,
          "column": 5
        },
        "end": {
          "line": 433,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 428,
        "column": 9
      },
      "end": {
        "line": 432,
        "column": 10
      }
    },
    "replacement": "Some(Default::default())",
    "genre": "FnValue"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/math/mod.rs",
    "function": {
      "function_name": "price_intersect_solve",
      "return_type": "-> Integer",
      "span": {
        "start": {
          "line": 101,
          "column": 1
        },
        "end": {
          "line": 151,
          "column": 2
        }
      }
    },
    "span": {
      "start": {
        "line": 129,
        "column": 14
      },
      "end": {
        "line": 129,
        "column": 15
      }
    },
    "replacement": "+",
    "genre": "BinaryOperator"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/uniswap/liqrange.rs",
    "function": {
      "function_name": "LiqRangeRef<'a>::donate_tick",
      "return_type": "-> Tick",
      "span": {
        "start": {
          "line": 121,
          "column": 5
        },
        "end": {
          "line": 125,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 124,
        "column": 9
      },
      "end": {
        "line": 124,
        "column": 24
      }
    },
    "replacement": "Default::default()",
    "genre": "FnValue"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/uniswap/poolprice.rs",
    "function": {
      "function_name": "<impl Add for PoolPrice<'a>>::add",
      "return_type": "-> Self::Output",
      "span": {
        "start": {
          "line": 325,
          "column": 5
        },
        "end": {
          "line": 327,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 326,
        "column": 9
      },
      "end": {
        "line": 326,
        "column": 59
      }
    },
    "replacement": "Default::default()",
    "genre": "FnValue"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/debt.rs",
    "function": {
      "function_name": "<impl PartialOrd for Debt>::partial_cmp",
      "return_type": "-> Option<std::cmp::Ordering>",
      "span": {
        "start": {
          "line": 411,
          "column": 5
        },
        "end": {
          "line": 417,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 412,
        "column": 9
      },
      "end": {
        "line": 416,
        "column": 10
      }
    },
    "replacement": "None",
    "genre": "FnValue"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/math/mod.rs",
    "function": {
      "function_name": "amm_debt_same_move_solve",
      "return_type": "-> u128",
      "span": {
        "start": {
          "line": 24,
          "column": 1
        },
        "end": {
          "line": 99,
          "column": 2
        }
      }
    },
    "span": {
      "start": {
        "line": 35,
        "column": 5
      },
      "end": {
        "line": 98,
        "column": 11
      }
    },
    "replacement": "0",
    "genre": "FnValue"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/math/mod.rs",
    "function": {
      "function_name": "amm_debt_same_move_solve",
      "return_type": "-> u128",
      "span": {
        "start": {
          "line": 24,
          "column": 1
        },
        "end": {
          "line": 99,
          "column": 2
        }
      }
    },
    "span": {
      "start": {
        "line": 87,
        "column": 24
      },
      "end": {
        "line": 87,
        "column": 25
      }
    },
    "replacement": "==",
    "genre": "BinaryOperator"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/sqrtprice.rs",
    "function": {
      "function_name": "<impl From for SqrtPriceX96>::from",
      "return_type": "-> Self",
      "span": {
        "start": {
          "line": 87,
          "column": 5
        },
        "end": {
          "line": 95,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 88,
        "column": 67
      },
      "end": {
        "line": 88,
        "column": 68
      }
    },
    "replacement": "+",
    "genre": "BinaryOperator"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/debt.rs",
    "function": {
      "function_name": "Debt::dq_to_price",
      "return_type": "-> u128",
      "span": {
        "start": {
          "line": 305,
          "column": 5
        },
        "end": {
          "line": 315,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 308,
        "column": 9
      },
      "end": {
        "line": 314,
        "column": 10
      }
    },
    "replacement": "0",
    "genre": "FnValue"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/uniswap/poolpricevec.rs",
    "function": {
      "function_name": "PoolPriceVec<'a>::from_swap",
      "return_type": "-> eyre::Result<Self>",
      "span": {
        "start": {
          "line": 288,
          "column": 5
        },
        "end": {
          "line": 374,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 309,
        "column": 23
      },
      "end": {
        "line": 309,
        "column": 25
      }
    },
    "replacement": "+=",
    "genre": "BinaryOperator"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/debt.rs",
    "function": {
      "function_name": "<impl PartialEq for Debt>::eq",
      "return_type": "-> bool",
      "span": {
        "start": {
          "line": 421,
          "column": 5
        },
        "end": {
          "line": 423,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 422,
        "column": 9
      },
      "end": {
        "line": 422,
        "column": 45
      }
    },
    "replacement": "false",
    "genre": "FnValue"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/debt.rs",
    "function": {
      "function_name": "Debt::partial_fill",
      "return_type": "-> Self",
      "span": {
        "start": {
          "line": 269,
          "column": 5
        },
        "end": {
          "line": 285,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 273,
        "column": 9
      },
      "end": {
        "line": 284,
        "column": 65
      }
    },
    "replacement": "Default::default()",
    "genre": "FnValue"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/debt.rs",
    "function": {
      "function_name": "<impl Add for DebtType>::add",
      "return_type": "-> Self::Output",
      "span": {
        "start": {
          "line": 99,
          "column": 5
        },
        "end": {
          "line": 110,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 106,
        "column": 76
      },
      "end": {
        "line": 106,
        "column": 77
      }
    },
    "replacement": "+",
    "genre": "BinaryOperator"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/uniswap/poolpricevec.rs",
    "function": {
      "function_name": "PoolPriceVec<'a>::quantity",
      "return_type": "-> (u128, u128, OrderPrice)",
      "span": {
        "start": {
          "line": 496,
          "column": 5
        },
        "end": {
          "line": 508,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 498,
        "column": 9
      },
      "end": {
        "line": 507,
        "column": 35
      }
    },
    "replacement": "(0, 1, Default::default())",
    "genre": "FnValue"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/tokens.rs",
    "function": {
      "function_name": "TokenQuantity::one_from_uint",
      "return_type": "-> Self",
      "span": {
        "start": {
          "line": 61,
          "column": 5
        },
        "end": {
          "line": 64,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 63,
        "column": 9
      },
      "end": {
        "line": 63,
        "column": 34
      }
    },
    "replacement": "Default::default()",
    "genre": "FnValue"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/uniswap/poolpricevec.rs",
    "function": {
      "function_name": "PoolPriceVec<'a>::donation",
      "return_type": "-> DonationResult",
      "span": {
        "start": {
          "line": 376,
          "column": 5
        },
        "end": {
          "line": 450,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 407,
        "column": 36
      },
      "end": {
        "line": 407,
        "column": 38
      }
    },
    "replacement": "+=",
    "genre": "BinaryOperator"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/uniswap/poolpricevec.rs",
    "function": {
      "function_name": "PoolPriceVec<'a>::donation",
      "return_type": "-> DonationResult",
      "span": {
        "start": {
          "line": 376,
          "column": 5
        },
        "end": {
          "line": 450,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 433,
        "column": 39
      },
      "end": {
        "line": 433,
        "column": 41
      }
    },
    "replacement": "-=",
    "genre": "BinaryOperator"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/math/mod.rs",
    "function": {
      "function_name": "amm_debt_same_move_solve",
      "return_type": "-> u128",
      "span": {
        "start": {
          "line": 24,
          "column": 1
        },
        "end": {
          "line": 99,
          "column": 2
        }
      }
    },
    "span": {
      "start": {
        "line": 92,
        "column": 44
      },
      "end": {
        "line": 92,
        "column": 46
      }
    },
    "replacement": "<",
    "genre": "BinaryOperator"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/sqrtprice.rs",
    "function": {
      "function_name": "SqrtPriceX96::to_tick",
      "return_type": "-> eyre::Result<i32>",
      "span": {
        "start": {
          "line": 49,
          "column": 5
        },
        "end": {
          "line": 51,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 50,
        "column": 9
      },
      "end": {
        "line": 50,
        "column": 56
      }
    },
    "replacement": "Ok(1)",
    "genre": "FnValue"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/mod.rs",
    "function": {
      "function_name": "<impl From for MatchingPrice>::from",
      "return_type": "-> Self",
      "span": {
        "start": {
          "line": 77,
          "column": 5
        },
        "end": {
          "line": 79,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 78,
        "column": 9
      },
      "end": {
        "line": 78,
        "column": 32
      }
    },
    "replacement": "Default::default()",
    "genre": "FnValue"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/debt.rs",
    "function": {
      "function_name": "DebtType::same_type",
      "return_type": "-> Self",
      "span": {
        "start": {
          "line": 47,
          "column": 5
        },
        "end": {
          "line": 52,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 48,
        "column": 9
      },
      "end": {
        "line": 51,
        "column": 10
      }
    },
    "replacement": "Default::default()",
    "genre": "FnValue"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/uniswap/liqrange.rs",
    "function": {
      "function_name": "<impl Debug for LiqRangeRef<'a>>::fmt",
      "return_type": "-> std::fmt::Result",
      "span": {
        "start": {
          "line": 136,
          "column": 5
        },
        "end": {
          "line": 141,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 137,
        "column": 9
      },
      "end": {
        "line": 140,
        "column": 25
      }
    },
    "replacement": "Ok(Default::default())",
    "genre": "FnValue"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/uniswap/mod.rs",
    "function": {
      "function_name": "Direction::is_input",
      "return_type": "-> bool",
      "span": {
        "start": {
          "line": 79,
          "column": 5
        },
        "end": {
          "line": 86,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 82,
        "column": 9
      },
      "end": {
        "line": 85,
        "column": 10
      }
    },
    "replacement": "false",
    "genre": "FnValue"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/mod.rs",
    "function": {
      "function_name": "const_1e27",
      "return_type": "-> &'static Natural",
      "span": {
        "start": {
          "line": 27,
          "column": 1
        },
        "end": {
          "line": 30,
          "column": 2
        }
      }
    },
    "span": {
      "start": {
        "line": 28,
        "column": 5
      },
      "end": {
        "line": 29,
        "column": 74
      }
    },
    "replacement": "&Default::default()",
    "genre": "FnValue"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/uniswap/poolsnapshot.rs",
    "function": {
      "function_name": "PoolSnapshot::liquidity_at_tick",
      "return_type": "-> Option<u128>",
      "span": {
        "start": {
          "line": 127,
          "column": 5
        },
        "end": {
          "line": 129,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 128,
        "column": 9
      },
      "end": {
        "line": 128,
        "column": 69
      }
    },
    "replacement": "Some(1)",
    "genre": "FnValue"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/debt.rs",
    "function": {
      "function_name": "<impl Add for Option<Debt>>::add",
      "return_type": "-> Self::Output",
      "span": {
        "start": {
          "line": 366,
          "column": 5
        },
        "end": {
          "line": 371,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 367,
        "column": 9
      },
      "end": {
        "line": 370,
        "column": 10
      }
    },
    "replacement": "Default::default()",
    "genre": "FnValue"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/composite.rs",
    "function": {
      "function_name": "CompositeOrder<'a>::has_debt",
      "return_type": "-> bool",
      "span": {
        "start": {
          "line": 33,
          "column": 5
        },
        "end": {
          "line": 35,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 34,
        "column": 9
      },
      "end": {
        "line": 34,
        "column": 28
      }
    },
    "replacement": "false",
    "genre": "FnValue"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/uniswap/poolpricevec.rs",
    "function": {
      "function_name": "SwapStep<'a>::liquidity",
      "return_type": "-> u128",
      "span": {
        "start": {
          "line": 153,
          "column": 5
        },
        "end": {
          "line": 155,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 154,
        "column": 9
      },
      "end": {
        "line": 154,
        "column": 33
      }
    },
    "replacement": "0",
    "genre": "FnValue"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/math/mod.rs",
    "function": {
      "function_name": "price_intersect_solve",
      "return_type": "-> Integer",
      "span": {
        "start": {
          "line": 101,
          "column": 1
        },
        "end": {
          "line": 151,
          "column": 2
        }
      }
    },
    "span": {
      "start": {
        "line": 131,
        "column": 68
      },
      "end": {
        "line": 131,
        "column": 70
      }
    },
    "replacement": ">>",
    "genre": "BinaryOperator"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/composite.rs",
    "function": {
      "function_name": "CompositeOrder<'a>::partial_fill_t1",
      "return_type": "-> Self",
      "span": {
        "start": {
          "line": 142,
          "column": 5
        },
        "end": {
          "line": 146,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 145,
        "column": 9
      },
      "end": {
        "line": 145,
        "column": 21
      }
    },
    "replacement": "Default::default()",
    "genre": "FnValue"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/debt.rs",
    "function": {
      "function_name": "Debt::bid_side",
      "return_type": "-> bool",
      "span": {
        "start": {
          "line": 164,
          "column": 5
        },
        "end": {
          "line": 169,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 168,
        "column": 9
      },
      "end": {
        "line": 168,
        "column": 55
      }
    },
    "replacement": "true",
    "genre": "FnValue"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/math/mod.rs",
    "function": {
      "function_name": "quadratic_solve",
      "return_type": "-> (Option<Integer>, Option<Integer>)",
      "span": {
        "start": {
          "line": 153,
          "column": 1
        },
        "end": {
          "line": 187,
          "column": 2
        }
      }
    },
    "span": {
      "start": {
        "line": 159,
        "column": 5
      },
      "end": {
        "line": 186,
        "column": 6
      }
    },
    "replacement": "(None, None)",
    "genre": "FnValue"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/debt.rs",
    "function": {
      "function_name": "Debt::calc_proportion",
      "return_type": "-> u128",
      "span": {
        "start": {
          "line": 317,
          "column": 5
        },
        "end": {
          "line": 360,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 327,
        "column": 9
      },
      "end": {
        "line": 359,
        "column": 46
      }
    },
    "replacement": "0",
    "genre": "FnValue"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/uniswap/poolsnapshot.rs",
    "function": {
      "function_name": "PoolSnapshot::ranges_for_ticks",
      "return_type": "-> eyre::Result<Vec<LiqRangeRef>>",
      "span": {
        "start": {
          "line": 74,
          "column": 5
        },
        "end": {
          "line": 95,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 87,
        "column": 44
      },
      "end": {
        "line": 87,
        "column": 46
      }
    },
    "replacement": "||",
    "genre": "BinaryOperator"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/math/mod.rs",
    "function": {
      "function_name": "amm_debt_same_move_solve",
      "return_type": "-> u128",
      "span": {
        "start": {
          "line": 24,
          "column": 1
        },
        "end": {
          "line": 99,
          "column": 2
        }
      }
    },
    "span": {
      "start": {
        "line": 35,
        "column": 5
      },
      "end": {
        "line": 98,
        "column": 11
      }
    },
    "replacement": "1",
    "genre": "FnValue"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/composite.rs",
    "function": {
      "function_name": "CompositeOrder<'a>::t0_quantities",
      "return_type": "-> (Option<u128>, Option<u128>)",
      "span": {
        "start": {
          "line": 148,
          "column": 5
        },
        "end": {
          "line": 173,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 156,
        "column": 9
      },
      "end": {
        "line": 172,
        "column": 10
      }
    },
    "replacement": "(None, Some(0))",
    "genre": "FnValue"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/debt.rs",
    "function": {
      "function_name": "<impl Add for &'a Debt>::add",
      "return_type": "-> Self::Output",
      "span": {
        "start": {
          "line": 399,
          "column": 5
        },
        "end": {
          "line": 401,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 400,
        "column": 69
      },
      "end": {
        "line": 400,
        "column": 70
      }
    },
    "replacement": "-",
    "genre": "BinaryOperator"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/debt.rs",
    "function": {
      "function_name": "<impl AddAssign for Option<Debt>>::add_assign",
      "return_type": "",
      "span": {
        "start": {
          "line": 375,
          "column": 5
        },
        "end": {
          "line": 377,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 376,
        "column": 23
      },
      "end": {
        "line": 376,
        "column": 24
      }
    },
    "replacement": "-",
    "genre": "BinaryOperator"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/debt.rs",
    "function": {
      "function_name": "Debt::additional_t0_needed",
      "return_type": "-> u128",
      "span": {
        "start": {
          "line": 156,
          "column": 5
        },
        "end": {
          "line": 162,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 159,
        "column": 9
      },
      "end": {
        "line": 161,
        "column": 50
      }
    },
    "replacement": "1",
    "genre": "FnValue"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/uniswap/poolpricevec.rs",
    "function": {
      "function_name": "PoolPriceVec<'a>::donation",
      "return_type": "-> DonationResult",
      "span": {
        "start": {
          "line": 376,
          "column": 5
        },
        "end": {
          "line": 450,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 377,
        "column": 9
      },
      "end": {
        "line": 449,
        "column": 10
      }
    },
    "replacement": "Default::default()",
    "genre": "FnValue"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/debt.rs",
    "function": {
      "function_name": "Debt::flat_fill_t1",
      "return_type": "-> Self",
      "span": {
        "start": {
          "line": 297,
          "column": 5
        },
        "end": {
          "line": 303,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 301,
        "column": 37
      },
      "end": {
        "line": 301,
        "column": 38
      }
    },
    "replacement": "/",
    "genre": "BinaryOperator"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/tokens.rs",
    "function": {
      "function_name": "<impl Add for TokenQuantity>::add",
      "return_type": "-> Self::Output",
      "span": {
        "start": {
          "line": 26,
          "column": 5
        },
        "end": {
          "line": 31,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 27,
        "column": 9
      },
      "end": {
        "line": 30,
        "column": 10
      }
    },
    "replacement": "Default::default()",
    "genre": "FnValue"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/debt.rs",
    "function": {
      "function_name": "<impl Add for Debt>::add",
      "return_type": "-> Self::Output",
      "span": {
        "start": {
          "line": 383,
          "column": 5
        },
        "end": {
          "line": 393,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 384,
        "column": 40
      },
      "end": {
        "line": 384,
        "column": 41
      }
    },
    "replacement": "-",
    "genre": "BinaryOperator"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/math/mod.rs",
    "function": {
      "function_name": "max_t1_for_t0",
      "return_type": "-> u128",
      "span": {
        "start": {
          "line": 206,
          "column": 1
        },
        "end": {
          "line": 214,
          "column": 2
        }
      }
    },
    "span": {
      "start": {
        "line": 209,
        "column": 50
      },
      "end": {
        "line": 209,
        "column": 51
      }
    },
    "replacement": "-",
    "genre": "BinaryOperator"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/uniswap/poolpricevec.rs",
    "function": {
      "function_name": "PoolPriceVec<'a>::from_swap",
      "return_type": "-> eyre::Result<Self>",
      "span": {
        "start": {
          "line": 288,
          "column": 5
        },
        "end": {
          "line": 374,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 350,
        "column": 22
      },
      "end": {
        "line": 350,
        "column": 24
      }
    },
    "replacement": "-=",
    "genre": "BinaryOperator"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/uniswap/poolpricevec.rs",
    "function": {
      "function_name": "PoolPriceVec<'a>::to_price_bound",
      "return_type": "-> eyre::Result<Self>",
      "span": {
        "start": {
          "line": 242,
          "column": 5
        },
        "end": {
          "line": 261,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 243,
        "column": 9
      },
      "end": {
        "line": 260,
        "column": 44
      }
    },
    "replacement": "Ok(Default::default())",
    "genre": "FnValue"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/mod.rs",
    "function": {
      "function_name": "const_2_96",
      "return_type": "-> &'static Natural",
      "span": {
        "start": {
          "line": 42,
          "column": 1
        },
        "end": {
          "line": 46,
          "column": 2
        }
      }
    },
    "span": {
      "start": {
        "line": 44,
        "column": 5
      },
      "end": {
        "line": 45,
        "column": 55
      }
    },
    "replacement": "&Default::default()",
    "genre": "FnValue"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/uniswap/poolprice.rs",
    "function": {
      "function_name": "PoolPrice<'a>::liquidity_range",
      "return_type": "-> LiqRangeRef<'a>",
      "span": {
        "start": {
          "line": 77,
          "column": 5
        },
        "end": {
          "line": 79,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 78,
        "column": 9
      },
      "end": {
        "line": 78,
        "column": 23
      }
    },
    "replacement": "Default::default()",
    "genre": "FnValue"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/uniswap/flags.rs",
    "function": {
      "function_name": "<impl From for U160>::from",
      "return_type": "-> U160",
      "span": {
        "start": {
          "line": 61,
          "column": 5
        },
        "end": {
          "line": 79,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 78,
        "column": 26
      },
      "end": {
        "line": 78,
        "column": 28
      }
    },
    "replacement": ">>",
    "genre": "BinaryOperator"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/uniswap/poolpricevec.rs",
    "function": {
      "function_name": "PoolPriceVec<'a>::input",
      "return_type": "-> u128",
      "span": {
        "start": {
          "line": 203,
          "column": 5
        },
        "end": {
          "line": 209,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 204,
        "column": 33
      },
      "end": {
        "line": 204,
        "column": 34
      }
    },
    "replacement": "==",
    "genre": "BinaryOperator"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/composite.rs",
    "function": {
      "function_name": "CompositeOrder<'a>::debt",
      "return_type": "-> Option<&Debt>",
      "span": {
        "start": {
          "line": 25,
          "column": 5
        },
        "end": {
          "line": 27,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 26,
        "column": 9
      },
      "end": {
        "line": 26,
        "column": 27
      }
    },
    "replacement": "None",
    "genre": "FnValue"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/uniswap/poolpricevec.rs",
    "function": {
      "function_name": "PoolPriceVec<'a>::steps",
      "return_type": "-> Option<&Vec<SwapStep>>",
      "span": {
        "start": {
          "line": 219,
          "column": 5
        },
        "end": {
          "line": 221,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 220,
        "column": 9
      },
      "end": {
        "line": 220,
        "column": 28
      }
    },
    "replacement": "None",
    "genre": "FnValue"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/tokens.rs",
    "function": {
      "function_name": "TokenQuantity::one",
      "return_type": "-> Self",
      "span": {
        "start": {
          "line": 51,
          "column": 5
        },
        "end": {
          "line": 54,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 53,
        "column": 9
      },
      "end": {
        "line": 53,
        "column": 36
      }
    },
    "replacement": "Default::default()",
    "genre": "FnValue"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/sqrtprice.rs",
    "function": {
      "function_name": "<impl Deref for SqrtPriceX96>::deref",
      "return_type": "-> &Self::Target",
      "span": {
        "start": {
          "line": 63,
          "column": 5
        },
        "end": {
          "line": 65,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 64,
        "column": 9
      },
      "end": {
        "line": 64,
        "column": 16
      }
    },
    "replacement": "&Default::default()",
    "genre": "FnValue"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/math/mod.rs",
    "function": {
      "function_name": "price_intersect_solve",
      "return_type": "-> Integer",
      "span": {
        "start": {
          "line": 101,
          "column": 1
        },
        "end": {
          "line": 151,
          "column": 2
        }
      }
    },
    "span": {
      "start": {
        "line": 143,
        "column": 23
      },
      "end": {
        "line": 143,
        "column": 24
      }
    },
    "replacement": "/",
    "genre": "BinaryOperator"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/uniswap/poolsnapshot.rs",
    "function": {
      "function_name": "PoolSnapshot::get_range_for_tick",
      "return_type": "-> Option<LiqRangeRef>",
      "span": {
        "start": {
          "line": 64,
          "column": 5
        },
        "end": {
          "line": 72,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 70,
        "column": 57
      },
      "end": {
        "line": 70,
        "column": 58
      }
    },
    "replacement": ">",
    "genre": "BinaryOperator"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/sqrtprice.rs",
    "function": {
      "function_name": "<impl From for SqrtPriceX96>::from",
      "return_type": "-> Self",
      "span": {
        "start": {
          "line": 75,
          "column": 5
        },
        "end": {
          "line": 77,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 76,
        "column": 9
      },
      "end": {
        "line": 76,
        "column": 32
      }
    },
    "replacement": "Default::default()",
    "genre": "FnValue"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/uniswap/flags.rs",
    "function": {
      "function_name": "<impl BitOr for UniswapFlags>::bitor",
      "return_type": "-> Self::Output",
      "span": {
        "start": {
          "line": 85,
          "column": 5
        },
        "end": {
          "line": 87,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 86,
        "column": 34
      },
      "end": {
        "line": 86,
        "column": 35
      }
    },
    "replacement": "^",
    "genre": "BinaryOperator"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/math/mod.rs",
    "function": {
      "function_name": "quadratic_solve",
      "return_type": "-> (Option<Integer>, Option<Integer>)",
      "span": {
        "start": {
          "line": 153,
          "column": 1
        },
        "end": {
          "line": 187,
          "column": 2
        }
      }
    },
    "span": {
      "start": {
        "line": 161,
        "column": 46
      },
      "end": {
        "line": 161,
        "column": 47
      }
    },
    "replacement": "+",
    "genre": "BinaryOperator"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/uniswap/poolpricevec.rs",
    "function": {
      "function_name": "PoolPriceVec<'a>::quantity",
      "return_type": "-> (u128, u128, OrderPrice)",
      "span": {
        "start": {
          "line": 496,
          "column": 5
        },
        "end": {
          "line": 508,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 501,
        "column": 32
      },
      "end": {
        "line": 501,
        "column": 33
      }
    },
    "replacement": "<",
    "genre": "BinaryOperator"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/debt.rs",
    "function": {
      "function_name": "<impl Add for DebtType>::add",
      "return_type": "-> Self::Output",
      "span": {
        "start": {
          "line": 99,
          "column": 5
        },
        "end": {
          "line": 110,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 102,
        "column": 75
      },
      "end": {
        "line": 102,
        "column": 76
      }
    },
    "replacement": "*",
    "genre": "BinaryOperator"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/uniswap/poolpricevec.rs",
    "function": {
      "function_name": "PoolPriceVec<'a>::from_swap",
      "return_type": "-> eyre::Result<Self>",
      "span": {
        "start": {
          "line": 288,
          "column": 5
        },
        "end": {
          "line": 374,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 293,
        "column": 9
      },
      "end": {
        "line": 373,
        "column": 83
      }
    },
    "replacement": "Ok(Default::default())",
    "genre": "FnValue"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/uniswap/poolpricevec.rs",
    "function": {
      "function_name": "PoolPriceVec<'a>::is_buy",
      "return_type": "-> bool",
      "span": {
        "start": {
          "line": 492,
          "column": 5
        },
        "end": {
          "line": 494,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 493,
        "column": 9
      },
      "end": {
        "line": 493,
        "column": 54
      }
    },
    "replacement": "true",
    "genre": "FnValue"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/uniswap/poolsnapshot.rs",
    "function": {
      "function_name": "PoolSnapshot::at_tick",
      "return_type": "-> eyre::Result<PoolPrice>",
      "span": {
        "start": {
          "line": 119,
          "column": 5
        },
        "end": {
          "line": 125,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 120,
        "column": 9
      },
      "end": {
        "line": 124,
        "column": 56
      }
    },
    "replacement": "Ok(Default::default())",
    "genre": "FnValue"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/debt.rs",
    "function": {
      "function_name": "DebtType::is_empty",
      "return_type": "-> bool",
      "span": {
        "start": {
          "line": 60,
          "column": 5
        },
        "end": {
          "line": 62,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 61,
        "column": 9
      },
      "end": {
        "line": 61,
        "column": 30
      }
    },
    "replacement": "false",
    "genre": "FnValue"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/uniswap/poolsnapshot.rs",
    "function": {
      "function_name": "PoolSnapshot::get_range_for_tick",
      "return_type": "-> Option<LiqRangeRef>",
      "span": {
        "start": {
          "line": 64,
          "column": 5
        },
        "end": {
          "line": 72,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 70,
        "column": 57
      },
      "end": {
        "line": 70,
        "column": 58
      }
    },
    "replacement": "==",
    "genre": "BinaryOperator"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/uniswap/poolpricevec.rs",
    "function": {
      "function_name": "SwapStep<'a>::compute_info",
      "return_type": "-> eyre::Result<Self>",
      "span": {
        "start": {
          "line": 107,
          "column": 5
        },
        "end": {
          "line": 139,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 120,
        "column": 28
      },
      "end": {
        "line": 120,
        "column": 30
      }
    },
    "replacement": "!=",
    "genre": "BinaryOperator"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/uniswap/poolprice.rs",
    "function": {
      "function_name": "PoolPrice<'a>::d_t0",
      "return_type": "-> eyre::Result<Self>",
      "span": {
        "start": {
          "line": 85,
          "column": 5
        },
        "end": {
          "line": 171,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 97,
        "column": 28
      },
      "end": {
        "line": 97,
        "column": 29
      }
    },
    "replacement": "<",
    "genre": "BinaryOperator"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/uniswap/poolpricevec.rs",
    "function": {
      "function_name": "PoolPriceVec<'a>::from_swap",
      "return_type": "-> eyre::Result<Self>",
      "span": {
        "start": {
          "line": 288,
          "column": 5
        },
        "end": {
          "line": 374,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 350,
        "column": 22
      },
      "end": {
        "line": 350,
        "column": 24
      }
    },
    "replacement": "*=",
    "genre": "BinaryOperator"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/uniswap/poolpricevec.rs",
    "function": {
      "function_name": "PoolPriceVec<'a>::delta_to_price",
      "return_type": "-> (u128, u128)",
      "span": {
        "start": {
          "line": 476,
          "column": 5
        },
        "end": {
          "line": 490,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 483,
        "column": 9
      },
      "end": {
        "line": 489,
        "column": 31
      }
    },
    "replacement": "(0, 0)",
    "genre": "FnValue"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/debt.rs",
    "function": {
      "function_name": "Debt::calc_proportion",
      "return_type": "-> u128",
      "span": {
        "start": {
          "line": 317,
          "column": 5
        },
        "end": {
          "line": 360,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 336,
        "column": 35
      },
      "end": {
        "line": 336,
        "column": 36
      }
    },
    "replacement": "+",
    "genre": "BinaryOperator"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/mod.rs",
    "function": {
      "function_name": "<impl Deref for MatchingPrice>::deref",
      "return_type": "-> &Self::Target",
      "span": {
        "start": {
          "line": 63,
          "column": 5
        },
        "end": {
          "line": 65,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 64,
        "column": 9
      },
      "end": {
        "line": 64,
        "column": 16
      }
    },
    "replacement": "&Default::default()",
    "genre": "FnValue"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/uniswap/liqrange.rs",
    "function": {
      "function_name": "LiqRange::lower_tick",
      "return_type": "-> i32",
      "span": {
        "start": {
          "line": 41,
          "column": 5
        },
        "end": {
          "line": 43,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 42,
        "column": 9
      },
      "end": {
        "line": 42,
        "column": 24
      }
    },
    "replacement": "1",
    "genre": "FnValue"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/math/mod.rs",
    "function": {
      "function_name": "equal_move_solve",
      "return_type": "-> Integer",
      "span": {
        "start": {
          "line": 16,
          "column": 1
        },
        "end": {
          "line": 22,
          "column": 2
        }
      }
    },
    "span": {
      "start": {
        "line": 21,
        "column": 5
      },
      "end": {
        "line": 21,
        "column": 23
      }
    },
    "replacement": "Default::default()",
    "genre": "FnValue"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/math/mod.rs",
    "function": {
      "function_name": "quadratic_solve",
      "return_type": "-> (Option<Integer>, Option<Integer>)",
      "span": {
        "start": {
          "line": 153,
          "column": 1
        },
        "end": {
          "line": 187,
          "column": 2
        }
      }
    },
    "span": {
      "start": {
        "line": 166,
        "column": 30
      },
      "end": {
        "line": 166,
        "column": 31
      }
    },
    "replacement": "+",
    "genre": "BinaryOperator"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/debt.rs",
    "function": {
      "function_name": "Debt::valid_for_price",
      "return_type": "-> bool",
      "span": {
        "start": {
          "line": 205,
          "column": 5
        },
        "end": {
          "line": 216,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 214,
        "column": 44
      },
      "end": {
        "line": 214,
        "column": 46
      }
    },
    "replacement": "<",
    "genre": "BinaryOperator"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/uniswap/poolsnapshot.rs",
    "function": {
      "function_name": "PoolSnapshot::get_range_for_tick",
      "return_type": "-> Option<LiqRangeRef>",
      "span": {
        "start": {
          "line": 64,
          "column": 5
        },
        "end": {
          "line": 72,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 67,
        "column": 9
      },
      "end": {
        "line": 71,
        "column": 89
      }
    },
    "replacement": "None",
    "genre": "FnValue"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/uniswap/liqrange.rs",
    "function": {
      "function_name": "LiqRangeRef<'a>::price_in_range",
      "return_type": "-> bool",
      "span": {
        "start": {
          "line": 84,
          "column": 5
        },
        "end": {
          "line": 91,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 86,
        "column": 9
      },
      "end": {
        "line": 90,
        "column": 10
      }
    },
    "replacement": "false",
    "genre": "FnValue"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/debt.rs",
    "function": {
      "function_name": "DebtType::round_up",
      "return_type": "-> bool",
      "span": {
        "start": {
          "line": 39,
          "column": 5
        },
        "end": {
          "line": 45,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 41,
        "column": 9
      },
      "end": {
        "line": 44,
        "column": 10
      }
    },
    "replacement": "false",
    "genre": "FnValue"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/composite.rs",
    "function": {
      "function_name": "CompositeOrder<'a>::calc_quantities",
      "return_type": "-> (u128, u128)",
      "span": {
        "start": {
          "line": 45,
          "column": 5
        },
        "end": {
          "line": 64,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 46,
        "column": 9
      },
      "end": {
        "line": 63,
        "column": 24
      }
    },
    "replacement": "(0, 1)",
    "genre": "FnValue"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/tokens.rs",
    "function": {
      "function_name": "TokenQuantity::as_t0",
      "return_type": "-> Self",
      "span": {
        "start": {
          "line": 73,
          "column": 5
        },
        "end": {
          "line": 78,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 74,
        "column": 9
      },
      "end": {
        "line": 77,
        "column": 10
      }
    },
    "replacement": "Default::default()",
    "genre": "FnValue"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/composite.rs",
    "function": {
      "function_name": "CompositeOrder<'a>::quantity",
      "return_type": "-> u128",
      "span": {
        "start": {
          "line": 86,
          "column": 5
        },
        "end": {
          "line": 111,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 109,
        "column": 19
      },
      "end": {
        "line": 109,
        "column": 20
      }
    },
    "replacement": "-",
    "genre": "BinaryOperator"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/uniswap/poolpricevec.rs",
    "function": {
      "function_name": "SwapStep<'a>::from_prices",
      "return_type": "-> eyre::Result<Self>",
      "span": {
        "start": {
          "line": 95,
          "column": 5
        },
        "end": {
          "line": 105,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 98,
        "column": 28
      },
      "end": {
        "line": 98,
        "column": 30
      }
    },
    "replacement": "==",
    "genre": "BinaryOperator"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/debt.rs",
    "function": {
      "function_name": "<impl AddAssign for Option<Debt>>::add_assign",
      "return_type": "",
      "span": {
        "start": {
          "line": 375,
          "column": 5
        },
        "end": {
          "line": 377,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 376,
        "column": 23
      },
      "end": {
        "line": 376,
        "column": 24
      }
    },
    "replacement": "*",
    "genre": "BinaryOperator"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/debt.rs",
    "function": {
      "function_name": "Debt::calc_proportion",
      "return_type": "-> u128",
      "span": {
        "start": {
          "line": 317,
          "column": 5
        },
        "end": {
          "line": 360,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 339,
        "column": 29
      },
      "end": {
        "line": 339,
        "column": 30
      }
    },
    "replacement": "*",
    "genre": "BinaryOperator"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/debt.rs",
    "function": {
      "function_name": "Debt::additional_t0_needed",
      "return_type": "-> u128",
      "span": {
        "start": {
          "line": 156,
          "column": 5
        },
        "end": {
          "line": 162,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 159,
        "column": 44
      },
      "end": {
        "line": 159,
        "column": 45
      }
    },
    "replacement": "*",
    "genre": "BinaryOperator"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/uniswap/poolpricevec.rs",
    "function": {
      "function_name": "SwapStep<'a>::output",
      "return_type": "-> u128",
      "span": {
        "start": {
          "line": 165,
          "column": 5
        },
        "end": {
          "line": 171,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 166,
        "column": 27
      },
      "end": {
        "line": 166,
        "column": 28
      }
    },
    "replacement": "<",
    "genre": "BinaryOperator"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/uniswap/mod.rs",
    "function": {
      "function_name": "Direction::is_input",
      "return_type": "-> bool",
      "span": {
        "start": {
          "line": 79,
          "column": 5
        },
        "end": {
          "line": 86,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 82,
        "column": 9
      },
      "end": {
        "line": 85,
        "column": 10
      }
    },
    "replacement": "true",
    "genre": "FnValue"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/uniswap/poolpricevec.rs",
    "function": {
      "function_name": "PoolPriceVec<'a>::output",
      "return_type": "-> u128",
      "span": {
        "start": {
          "line": 211,
          "column": 5
        },
        "end": {
          "line": 217,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 212,
        "column": 33
      },
      "end": {
        "line": 212,
        "column": 34
      }
    },
    "replacement": "==",
    "genre": "BinaryOperator"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/uniswap/poolsnapshot.rs",
    "function": {
      "function_name": "PoolSnapshot::ranges_for_ticks",
      "return_type": "-> eyre::Result<Vec<LiqRangeRef>>",
      "span": {
        "start": {
          "line": 74,
          "column": 5
        },
        "end": {
          "line": 95,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 81,
        "column": 9
      },
      "end": {
        "line": 94,
        "column": 19
      }
    },
    "replacement": "Ok(vec![])",
    "genre": "FnValue"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/uniswap/liqrange.rs",
    "function": {
      "function_name": "LiqRangeRef<'a>::price_in_range",
      "return_type": "-> bool",
      "span": {
        "start": {
          "line": 84,
          "column": 5
        },
        "end": {
          "line": 91,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 87,
        "column": 43
      },
      "end": {
        "line": 87,
        "column": 45
      }
    },
    "replacement": "||",
    "genre": "BinaryOperator"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/uniswap/poolprice.rs",
    "function": {
      "function_name": "PoolPrice<'a>::checked_new",
      "return_type": "-> Self",
      "span": {
        "start": {
          "line": 63,
          "column": 5
        },
        "end": {
          "line": 71,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 67,
        "column": 58
      },
      "end": {
        "line": 67,
        "column": 60
      }
    },
    "replacement": "==",
    "genre": "BinaryOperator"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/uniswap/mod.rs",
    "function": {
      "function_name": "Quantity::as_input",
      "return_type": "-> Direction",
      "span": {
        "start": {
          "line": 28,
          "column": 5
        },
        "end": {
          "line": 34,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 30,
        "column": 9
      },
      "end": {
        "line": 33,
        "column": 10
      }
    },
    "replacement": "Default::default()",
    "genre": "FnValue"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/debt.rs",
    "function": {
      "function_name": "<impl PartialOrd for Debt>::partial_cmp",
      "return_type": "-> Option<std::cmp::Ordering>",
      "span": {
        "start": {
          "line": 411,
          "column": 5
        },
        "end": {
          "line": 417,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 412,
        "column": 9
      },
      "end": {
        "line": 416,
        "column": 10
      }
    },
    "replacement": "Some(Default::default())",
    "genre": "FnValue"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/debt.rs",
    "function": {
      "function_name": "Debt::valid_for_price",
      "return_type": "-> bool",
      "span": {
        "start": {
          "line": 205,
          "column": 5
        },
        "end": {
          "line": 216,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 209,
        "column": 9
      },
      "end": {
        "line": 215,
        "column": 10
      }
    },
    "replacement": "false",
    "genre": "FnValue"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/debt.rs",
    "function": {
      "function_name": "Debt::calc_proportion",
      "return_type": "-> u128",
      "span": {
        "start": {
          "line": 317,
          "column": 5
        },
        "end": {
          "line": 360,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 337,
        "column": 34
      },
      "end": {
        "line": 337,
        "column": 35
      }
    },
    "replacement": "/",
    "genre": "BinaryOperator"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/debt.rs",
    "function": {
      "function_name": "Debt::from_quantities",
      "return_type": "-> Self",
      "span": {
        "start": {
          "line": 136,
          "column": 5
        },
        "end": {
          "line": 140,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 137,
        "column": 9
      },
      "end": {
        "line": 139,
        "column": 36
      }
    },
    "replacement": "Default::default()",
    "genre": "FnValue"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/uniswap/poolpricevec.rs",
    "function": {
      "function_name": "SwapStep<'a>::for_price_range",
      "return_type": "-> eyre::Result<Self>",
      "span": {
        "start": {
          "line": 42,
          "column": 5
        },
        "end": {
          "line": 78,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 55,
        "column": 9
      },
      "end": {
        "line": 77,
        "column": 63
      }
    },
    "replacement": "Ok(Default::default())",
    "genre": "FnValue"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/math/mod.rs",
    "function": {
      "function_name": "quadratic_solve",
      "return_type": "-> (Option<Integer>, Option<Integer>)",
      "span": {
        "start": {
          "line": 153,
          "column": 1
        },
        "end": {
          "line": 187,
          "column": 2
        }
      }
    },
    "span": {
      "start": {
        "line": 159,
        "column": 42
      },
      "end": {
        "line": 159,
        "column": 44
      }
    },
    "replacement": ">>",
    "genre": "BinaryOperator"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/math/mod.rs",
    "function": {
      "function_name": "amm_debt_same_move_solve",
      "return_type": "-> u128",
      "span": {
        "start": {
          "line": 24,
          "column": 1
        },
        "end": {
          "line": 99,
          "column": 2
        }
      }
    },
    "span": {
      "start": {
        "line": 95,
        "column": 28
      },
      "end": {
        "line": 95,
        "column": 29
      }
    },
    "replacement": "==",
    "genre": "BinaryOperator"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/math/mod.rs",
    "function": {
      "function_name": "price_intersect_solve",
      "return_type": "-> Integer",
      "span": {
        "start": {
          "line": 101,
          "column": 1
        },
        "end": {
          "line": 151,
          "column": 2
        }
      }
    },
    "span": {
      "start": {
        "line": 128,
        "column": 31
      },
      "end": {
        "line": 128,
        "column": 32
      }
    },
    "replacement": "*",
    "genre": "BinaryOperator"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/uniswap/poolpricevec.rs",
    "function": {
      "function_name": "SwapStep<'a>::to_bound",
      "return_type": "-> eyre::Result<Self>",
      "span": {
        "start": {
          "line": 80,
          "column": 5
        },
        "end": {
          "line": 85,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 83,
        "column": 9
      },
      "end": {
        "line": 84,
        "column": 38
      }
    },
    "replacement": "Ok(Default::default())",
    "genre": "FnValue"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/debt.rs",
    "function": {
      "function_name": "Debt::partial_fill_t1",
      "return_type": "-> Self",
      "span": {
        "start": {
          "line": 287,
          "column": 5
        },
        "end": {
          "line": 295,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 291,
        "column": 37
      },
      "end": {
        "line": 291,
        "column": 38
      }
    },
    "replacement": "+",
    "genre": "BinaryOperator"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/composite.rs",
    "function": {
      "function_name": "CompositeOrder<'a>::negative_quantity_t1",
      "return_type": "-> u128",
      "span": {
        "start": {
          "line": 128,
          "column": 5
        },
        "end": {
          "line": 140,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 130,
        "column": 9
      },
      "end": {
        "line": 139,
        "column": 10
      }
    },
    "replacement": "0",
    "genre": "FnValue"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/composite.rs",
    "function": {
      "function_name": "CompositeOrder<'a>::find_closest_bound",
      "return_type": "-> Ray",
      "span": {
        "start": {
          "line": 66,
          "column": 5
        },
        "end": {
          "line": 79,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 71,
        "column": 28
      },
      "end": {
        "line": 71,
        "column": 29
      }
    },
    "replacement": ">",
    "genre": "BinaryOperator"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/math/mod.rs",
    "function": {
      "function_name": "quadratic_solve",
      "return_type": "-> (Option<Integer>, Option<Integer>)",
      "span": {
        "start": {
          "line": 153,
          "column": 1
        },
        "end": {
          "line": 187,
          "column": 2
        }
      }
    },
    "span": {
      "start": {
        "line": 159,
        "column": 25
      },
      "end": {
        "line": 159,
        "column": 26
      }
    },
    "replacement": "/",
    "genre": "BinaryOperator"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/math/mod.rs",
    "function": {
      "function_name": "quadratic_solve",
      "return_type": "-> (Option<Integer>, Option<Integer>)",
      "span": {
        "start": {
          "line": 153,
          "column": 1
        },
        "end": {
          "line": 187,
          "column": 2
        }
      }
    },
    "span": {
      "start": {
        "line": 167,
        "column": 29
      },
      "end": {
        "line": 167,
        "column": 30
      }
    },
    "replacement": "-",
    "genre": "BinaryOperator"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/debt.rs",
    "function": {
      "function_name": "DebtType::is_empty",
      "return_type": "-> bool",
      "span": {
        "start": {
          "line": 60,
          "column": 5
        },
        "end": {
          "line": 62,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 61,
        "column": 9
      },
      "end": {
        "line": 61,
        "column": 30
      }
    },
    "replacement": "true",
    "genre": "FnValue"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/debt.rs",
    "function": {
      "function_name": "Debt::current_t0",
      "return_type": "-> u128",
      "span": {
        "start": {
          "line": 226,
          "column": 5
        },
        "end": {
          "line": 229,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 228,
        "column": 9
      },
      "end": {
        "line": 228,
        "column": 51
      }
    },
    "replacement": "0",
    "genre": "FnValue"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/math/mod.rs",
    "function": {
      "function_name": "max_t1_for_t0",
      "return_type": "-> u128",
      "span": {
        "start": {
          "line": 206,
          "column": 1
        },
        "end": {
          "line": 214,
          "column": 2
        }
      }
    },
    "span": {
      "start": {
        "line": 207,
        "column": 5
      },
      "end": {
        "line": 213,
        "column": 6
      }
    },
    "replacement": "1",
    "genre": "FnValue"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/math/mod.rs",
    "function": {
      "function_name": "price_intersect_solve",
      "return_type": "-> Integer",
      "span": {
        "start": {
          "line": 101,
          "column": 1
        },
        "end": {
          "line": 151,
          "column": 2
        }
      }
    },
    "span": {
      "start": {
        "line": 143,
        "column": 54
      },
      "end": {
        "line": 143,
        "column": 56
      }
    },
    "replacement": ">>",
    "genre": "BinaryOperator"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/math/mod.rs",
    "function": {
      "function_name": "price_intersect_solve",
      "return_type": "-> Integer",
      "span": {
        "start": {
          "line": 101,
          "column": 1
        },
        "end": {
          "line": 151,
          "column": 2
        }
      }
    },
    "span": {
      "start": {
        "line": 132,
        "column": 49
      },
      "end": {
        "line": 132,
        "column": 50
      }
    },
    "replacement": "/",
    "genre": "BinaryOperator"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/debt.rs",
    "function": {
      "function_name": "<impl Add for DebtType>::add",
      "return_type": "-> Self::Output",
      "span": {
        "start": {
          "line": 99,
          "column": 5
        },
        "end": {
          "line": 110,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 105,
        "column": 62
      },
      "end": {
        "line": 105,
        "column": 63
      }
    },
    "replacement": "<",
    "genre": "BinaryOperator"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/uniswap/poolpricevec.rs",
    "function": {
      "function_name": "SwapStep<'a>::compute_info",
      "return_type": "-> eyre::Result<Self>",
      "span": {
        "start": {
          "line": 107,
          "column": 5
        },
        "end": {
          "line": 139,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 121,
        "column": 12
      },
      "end": {
        "line": 121,
        "column": 13
      }
    },
    "replacement": "",
    "genre": "UnaryOperator"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/uniswap/poolpricevec.rs",
    "function": {
      "function_name": "PoolPriceVec<'a>::to_price",
      "return_type": "-> Option<Self>",
      "span": {
        "start": {
          "line": 453,
          "column": 5
        },
        "end": {
          "line": 474,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 454,
        "column": 9
      },
      "end": {
        "line": 473,
        "column": 10
      }
    },
    "replacement": "None",
    "genre": "FnValue"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/debt.rs",
    "function": {
      "function_name": "Debt::freed_t1",
      "return_type": "-> u128",
      "span": {
        "start": {
          "line": 249,
          "column": 5
        },
        "end": {
          "line": 267,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 254,
        "column": 22
      },
      "end": {
        "line": 254,
        "column": 24
      }
    },
    "replacement": "<",
    "genre": "BinaryOperator"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/uniswap/poolpricevec.rs",
    "function": {
      "function_name": "PoolPriceVec<'a>::to_upper",
      "return_type": "-> eyre::Result<Self>",
      "span": {
        "start": {
          "line": 263,
          "column": 5
        },
        "end": {
          "line": 275,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 264,
        "column": 9
      },
      "end": {
        "line": 274,
        "column": 44
      }
    },
    "replacement": "Ok(Default::default())",
    "genre": "FnValue"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/uniswap/poolprice.rs",
    "function": {
      "function_name": "PoolPrice<'a>::order_to_target",
      "return_type": "-> Option<PoolPriceVec<'a>>",
      "span": {
        "start": {
          "line": 228,
          "column": 5
        },
        "end": {
          "line": 299,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 244,
        "column": 22
      },
      "end": {
        "line": 244,
        "column": 24
      }
    },
    "replacement": ">",
    "genre": "BinaryOperator"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/sqrtprice.rs",
    "function": {
      "function_name": "SqrtPriceX96::as_f64",
      "return_type": "-> f64",
      "span": {
        "start": {
          "line": 20,
          "column": 5
        },
        "end": {
          "line": 31,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 25,
        "column": 9
      },
      "end": {
        "line": 30,
        "column": 12
      }
    },
    "replacement": "-1.0",
    "genre": "FnValue"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/uniswap/poolpricevec.rs",
    "function": {
      "function_name": "PoolPriceVec<'a>::quantity",
      "return_type": "-> (u128, u128, OrderPrice)",
      "span": {
        "start": {
          "line": 496,
          "column": 5
        },
        "end": {
          "line": 508,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 498,
        "column": 9
      },
      "end": {
        "line": 507,
        "column": 35
      }
    },
    "replacement": "(1, 1, Default::default())",
    "genre": "FnValue"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/uniswap/poolpricevec.rs",
    "function": {
      "function_name": "SwapStep<'a>::end_price",
      "return_type": "-> SqrtPriceX96",
      "span": {
        "start": {
          "line": 145,
          "column": 5
        },
        "end": {
          "line": 147,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 146,
        "column": 9
      },
      "end": {
        "line": 146,
        "column": 23
      }
    },
    "replacement": "Default::default()",
    "genre": "FnValue"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/composite.rs",
    "function": {
      "function_name": "CompositeOrder<'a>::t0_quantities",
      "return_type": "-> (Option<u128>, Option<u128>)",
      "span": {
        "start": {
          "line": 148,
          "column": 5
        },
        "end": {
          "line": 173,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 156,
        "column": 9
      },
      "end": {
        "line": 172,
        "column": 10
      }
    },
    "replacement": "(Some(0), Some(1))",
    "genre": "FnValue"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/uniswap/poolprice.rs",
    "function": {
      "function_name": "PoolPrice<'a>::to_liq_range_lower",
      "return_type": "-> eyre::Result<PoolPriceVec<'a>>",
      "span": {
        "start": {
          "line": 185,
          "column": 5
        },
        "end": {
          "line": 189,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 188,
        "column": 9
      },
      "end": {
        "line": 188,
        "column": 71
      }
    },
    "replacement": "Ok(Default::default())",
    "genre": "FnValue"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/uniswap/poolprice.rs",
    "function": {
      "function_name": "PoolPrice<'a>::vec_to",
      "return_type": "-> eyre::Result<PoolPriceVec<'a>>",
      "span": {
        "start": {
          "line": 173,
          "column": 5
        },
        "end": {
          "line": 177,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 176,
        "column": 9
      },
      "end": {
        "line": 176,
        "column": 62
      }
    },
    "replacement": "Ok(Default::default())",
    "genre": "FnValue"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/uniswap/poolpricevec.rs",
    "function": {
      "function_name": "SwapStep<'a>::input",
      "return_type": "-> u128",
      "span": {
        "start": {
          "line": 157,
          "column": 5
        },
        "end": {
          "line": 163,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 158,
        "column": 9
      },
      "end": {
        "line": 162,
        "column": 10
      }
    },
    "replacement": "1",
    "genre": "FnValue"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/debt.rs",
    "function": {
      "function_name": "Debt::partial_fill",
      "return_type": "-> Self",
      "span": {
        "start": {
          "line": 269,
          "column": 5
        },
        "end": {
          "line": 285,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 275,
        "column": 44
      },
      "end": {
        "line": 275,
        "column": 45
      }
    },
    "replacement": "-",
    "genre": "BinaryOperator"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/composite.rs",
    "function": {
      "function_name": "CompositeOrder<'a>::debt_direction",
      "return_type": "-> Option<Direction>",
      "span": {
        "start": {
          "line": 81,
          "column": 5
        },
        "end": {
          "line": 84,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 82,
        "column": 9
      },
      "end": {
        "line": 83,
        "column": 70
      }
    },
    "replacement": "None",
    "genre": "FnValue"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/sqrtprice.rs",
    "function": {
      "function_name": "SqrtPriceX96::to_tick",
      "return_type": "-> eyre::Result<i32>",
      "span": {
        "start": {
          "line": 49,
          "column": 5
        },
        "end": {
          "line": 51,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 50,
        "column": 9
      },
      "end": {
        "line": 50,
        "column": 56
      }
    },
    "replacement": "Ok(-1)",
    "genre": "FnValue"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/uniswap/poolsnapshot.rs",
    "function": {
      "function_name": "PoolSnapshot::ranges_for_ticks",
      "return_type": "-> eyre::Result<Vec<LiqRangeRef>>",
      "span": {
        "start": {
          "line": 74,
          "column": 5
        },
        "end": {
          "line": 95,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 81,
        "column": 9
      },
      "end": {
        "line": 94,
        "column": 19
      }
    },
    "replacement": "Ok(vec![Default::default()])",
    "genre": "FnValue"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/debt.rs",
    "function": {
      "function_name": "Debt::partial_fill_t1",
      "return_type": "-> Self",
      "span": {
        "start": {
          "line": 287,
          "column": 5
        },
        "end": {
          "line": 295,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 291,
        "column": 37
      },
      "end": {
        "line": 291,
        "column": 38
      }
    },
    "replacement": "/",
    "genre": "BinaryOperator"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/uniswap/poolprice.rs",
    "function": {
      "function_name": "PoolPrice<'a>::intersect_with_debt",
      "return_type": "-> eyre::Result<u128>",
      "span": {
        "start": {
          "line": 191,
          "column": 5
        },
        "end": {
          "line": 226,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 196,
        "column": 9
      },
      "end": {
        "line": 225,
        "column": 27
      }
    },
    "replacement": "Ok(1)",
    "genre": "FnValue"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/debt.rs",
    "function": {
      "function_name": "Debt::dq_to_price",
      "return_type": "-> u128",
      "span": {
        "start": {
          "line": 305,
          "column": 5
        },
        "end": {
          "line": 315,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 311,
        "column": 22
      },
      "end": {
        "line": 311,
        "column": 23
      }
    },
    "replacement": "+",
    "genre": "BinaryOperator"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/uniswap/poolprice.rs",
    "function": {
      "function_name": "PoolPrice<'a>::d_t0",
      "return_type": "-> eyre::Result<Self>",
      "span": {
        "start": {
          "line": 85,
          "column": 5
        },
        "end": {
          "line": 171,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 156,
        "column": 53
      },
      "end": {
        "line": 156,
        "column": 55
      }
    },
    "replacement": "+=",
    "genre": "BinaryOperator"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/debt.rs",
    "function": {
      "function_name": "DebtType::t0_at_price",
      "return_type": "-> u128",
      "span": {
        "start": {
          "line": 64,
          "column": 5
        },
        "end": {
          "line": 73,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 67,
        "column": 9
      },
      "end": {
        "line": 72,
        "column": 63
      }
    },
    "replacement": "1",
    "genre": "FnValue"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/uniswap/poolpricevec.rs",
    "function": {
      "function_name": "SwapStep<'a>::for_price_range",
      "return_type": "-> eyre::Result<Self>",
      "span": {
        "start": {
          "line": 42,
          "column": 5
        },
        "end": {
          "line": 78,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 61,
        "column": 45
      },
      "end": {
        "line": 61,
        "column": 47
      }
    },
    "replacement": "&&",
    "genre": "BinaryOperator"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/uniswap/liqrange.rs",
    "function": {
      "function_name": "LiqRangeRef<'a>::price_in_range",
      "return_type": "-> bool",
      "span": {
        "start": {
          "line": 84,
          "column": 5
        },
        "end": {
          "line": 91,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 87,
        "column": 57
      },
      "end": {
        "line": 87,
        "column": 58
      }
    },
    "replacement": ">",
    "genre": "BinaryOperator"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/math/mod.rs",
    "function": {
      "function_name": "quadratic_solve",
      "return_type": "-> (Option<Integer>, Option<Integer>)",
      "span": {
        "start": {
          "line": 153,
          "column": 1
        },
        "end": {
          "line": 187,
          "column": 2
        }
      }
    },
    "span": {
      "start": {
        "line": 171,
        "column": 23
      },
      "end": {
        "line": 171,
        "column": 25
      }
    },
    "replacement": "!=",
    "genre": "BinaryOperator"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/uniswap/poolpricevec.rs",
    "function": {
      "function_name": "PoolPriceVec<'a>::donation",
      "return_type": "-> DonationResult",
      "span": {
        "start": {
          "line": 376,
          "column": 5
        },
        "end": {
          "line": 450,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 432,
        "column": 36
      },
      "end": {
        "line": 432,
        "column": 37
      }
    },
    "replacement": "<",
    "genre": "BinaryOperator"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/composite.rs",
    "function": {
      "function_name": "CompositeOrder<'a>::debt",
      "return_type": "-> Option<&Debt>",
      "span": {
        "start": {
          "line": 25,
          "column": 5
        },
        "end": {
          "line": 27,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 26,
        "column": 9
      },
      "end": {
        "line": 26,
        "column": 27
      }
    },
    "replacement": "Some(&Default::default())",
    "genre": "FnValue"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/debt.rs",
    "function": {
      "function_name": "Debt::freed_t1",
      "return_type": "-> u128",
      "span": {
        "start": {
          "line": 249,
          "column": 5
        },
        "end": {
          "line": 267,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 254,
        "column": 9
      },
      "end": {
        "line": 266,
        "column": 10
      }
    },
    "replacement": "1",
    "genre": "FnValue"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/uniswap/poolpricevec.rs",
    "function": {
      "function_name": "PoolPriceVec<'a>::quantity",
      "return_type": "-> (u128, u128, OrderPrice)",
      "span": {
        "start": {
          "line": 496,
          "column": 5
        },
        "end": {
          "line": 508,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 501,
        "column": 27
      },
      "end": {
        "line": 501,
        "column": 29
      }
    },
    "replacement": "||",
    "genre": "BinaryOperator"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/math/mod.rs",
    "function": {
      "function_name": "amm_debt_same_move_solve",
      "return_type": "-> u128",
      "span": {
        "start": {
          "line": 24,
          "column": 1
        },
        "end": {
          "line": 99,
          "column": 2
        }
      }
    },
    "span": {
      "start": {
        "line": 95,
        "column": 28
      },
      "end": {
        "line": 95,
        "column": 29
      }
    },
    "replacement": ">",
    "genre": "BinaryOperator"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/uniswap/flags.rs",
    "function": {
      "function_name": "UniswapFlags::mask",
      "return_type": "-> U160",
      "span": {
        "start": {
          "line": 55,
          "column": 5
        },
        "end": {
          "line": 57,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 56,
        "column": 27
      },
      "end": {
        "line": 56,
        "column": 29
      }
    },
    "replacement": ">>",
    "genre": "BinaryOperator"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/composite.rs",
    "function": {
      "function_name": "CompositeOrder<'a>::amm",
      "return_type": "-> Option<&PoolPrice<'a>>",
      "span": {
        "start": {
          "line": 37,
          "column": 5
        },
        "end": {
          "line": 39,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 38,
        "column": 9
      },
      "end": {
        "line": 38,
        "column": 26
      }
    },
    "replacement": "None",
    "genre": "FnValue"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/debt.rs",
    "function": {
      "function_name": "Debt::dq_to_price",
      "return_type": "-> u128",
      "span": {
        "start": {
          "line": 305,
          "column": 5
        },
        "end": {
          "line": 315,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 310,
        "column": 21
      },
      "end": {
        "line": 310,
        "column": 22
      }
    },
    "replacement": "==",
    "genre": "BinaryOperator"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/debt.rs",
    "function": {
      "function_name": "Debt::validate_and_set_price",
      "return_type": "-> bool",
      "span": {
        "start": {
          "line": 218,
          "column": 5
        },
        "end": {
          "line": 224,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 219,
        "column": 9
      },
      "end": {
        "line": 223,
        "column": 12
      }
    },
    "replacement": "false",
    "genre": "FnValue"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/uniswap/poolprice.rs",
    "function": {
      "function_name": "PoolPrice<'a>::d_t0",
      "return_type": "-> eyre::Result<Self>",
      "span": {
        "start": {
          "line": 85,
          "column": 5
        },
        "end": {
          "line": 171,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 156,
        "column": 53
      },
      "end": {
        "line": 156,
        "column": 55
      }
    },
    "replacement": "/=",
    "genre": "BinaryOperator"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/debt.rs",
    "function": {
      "function_name": "DebtType::same_side",
      "return_type": "-> bool",
      "span": {
        "start": {
          "line": 87,
          "column": 5
        },
        "end": {
          "line": 93,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 88,
        "column": 9
      },
      "end": {
        "line": 92,
        "column": 10
      }
    },
    "replacement": "false",
    "genre": "FnValue"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/debt.rs",
    "function": {
      "function_name": "<impl PartialOrd for Debt>::partial_cmp",
      "return_type": "-> Option<std::cmp::Ordering>",
      "span": {
        "start": {
          "line": 411,
          "column": 5
        },
        "end": {
          "line": 417,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 412,
        "column": 17
      },
      "end": {
        "line": 412,
        "column": 19
      }
    },
    "replacement": "!=",
    "genre": "BinaryOperator"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/math/mod.rs",
    "function": {
      "function_name": "max_t1_for_t0",
      "return_type": "-> u128",
      "span": {
        "start": {
          "line": 206,
          "column": 1
        },
        "end": {
          "line": 214,
          "column": 2
        }
      }
    },
    "span": {
      "start": {
        "line": 207,
        "column": 5
      },
      "end": {
        "line": 213,
        "column": 6
      }
    },
    "replacement": "0",
    "genre": "FnValue"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/debt.rs",
    "function": {
      "function_name": "Debt::calc_proportion",
      "return_type": "-> u128",
      "span": {
        "start": {
          "line": 317,
          "column": 5
        },
        "end": {
          "line": 360,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 334,
        "column": 45
      },
      "end": {
        "line": 334,
        "column": 47
      }
    },
    "replacement": ">>",
    "genre": "BinaryOperator"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/uniswap/poolprice.rs",
    "function": {
      "function_name": "<impl PartialEq for PoolPrice<'a>>::eq",
      "return_type": "-> bool",
      "span": {
        "start": {
          "line": 45,
          "column": 5
        },
        "end": {
          "line": 47,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 46,
        "column": 9
      },
      "end": {
        "line": 46,
        "column": 73
      }
    },
    "replacement": "true",
    "genre": "FnValue"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/debt.rs",
    "function": {
      "function_name": "<impl Add for DebtType>::add",
      "return_type": "-> Self::Output",
      "span": {
        "start": {
          "line": 99,
          "column": 5
        },
        "end": {
          "line": 110,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 107,
        "column": 62
      },
      "end": {
        "line": 107,
        "column": 63
      }
    },
    "replacement": "<",
    "genre": "BinaryOperator"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/debt.rs",
    "function": {
      "function_name": "Debt::price_range",
      "return_type": "-> (Ray, Ray)",
      "span": {
        "start": {
          "line": 178,
          "column": 5
        },
        "end": {
          "line": 203,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 183,
        "column": 52
      },
      "end": {
        "line": 183,
        "column": 53
      }
    },
    "replacement": "-",
    "genre": "BinaryOperator"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/uniswap/poolpricevec.rs",
    "function": {
      "function_name": "PoolPriceVec<'a>::from_swap",
      "return_type": "-> eyre::Result<Self>",
      "span": {
        "start": {
          "line": 288,
          "column": 5
        },
        "end": {
          "line": 374,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 322,
        "column": 29
      },
      "end": {
        "line": 322,
        "column": 31
      }
    },
    "replacement": "!=",
    "genre": "BinaryOperator"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/debt.rs",
    "function": {
      "function_name": "<impl Add for Debt>::add",
      "return_type": "-> Self::Output",
      "span": {
        "start": {
          "line": 383,
          "column": 5
        },
        "end": {
          "line": 393,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 384,
        "column": 9
      },
      "end": {
        "line": 392,
        "column": 44
      }
    },
    "replacement": "Default::default()",
    "genre": "FnValue"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/math/mod.rs",
    "function": {
      "function_name": "quadratic_solve",
      "return_type": "-> (Option<Integer>, Option<Integer>)",
      "span": {
        "start": {
          "line": 153,
          "column": 1
        },
        "end": {
          "line": 187,
          "column": 2
        }
      }
    },
    "span": {
      "start": {
        "line": 162,
        "column": 53
      },
      "end": {
        "line": 162,
        "column": 54
      }
    },
    "replacement": "+",
    "genre": "BinaryOperator"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/uniswap/poolprice.rs",
    "function": {
      "function_name": "PoolPrice<'a>::checked_new",
      "return_type": "-> Self",
      "span": {
        "start": {
          "line": 63,
          "column": 5
        },
        "end": {
          "line": 71,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 64,
        "column": 40
      },
      "end": {
        "line": 64,
        "column": 42
      }
    },
    "replacement": "&&",
    "genre": "BinaryOperator"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/uniswap/poolpricevec.rs",
    "function": {
      "function_name": "PoolPriceVec<'a>::donation",
      "return_type": "-> DonationResult",
      "span": {
        "start": {
          "line": 376,
          "column": 5
        },
        "end": {
          "line": 450,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 413,
        "column": 34
      },
      "end": {
        "line": 413,
        "column": 36
      }
    },
    "replacement": "-=",
    "genre": "BinaryOperator"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/math/mod.rs",
    "function": {
      "function_name": "quadratic_solve",
      "return_type": "-> (Option<Integer>, Option<Integer>)",
      "span": {
        "start": {
          "line": 153,
          "column": 1
        },
        "end": {
          "line": 187,
          "column": 2
        }
      }
    },
    "span": {
      "start": {
        "line": 159,
        "column": 25
      },
      "end": {
        "line": 159,
        "column": 26
      }
    },
    "replacement": "+",
    "genre": "BinaryOperator"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/uniswap/poolprice.rs",
    "function": {
      "function_name": "PoolPrice<'a>::tick",
      "return_type": "-> Tick",
      "span": {
        "start": {
          "line": 73,
          "column": 5
        },
        "end": {
          "line": 75,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 74,
        "column": 9
      },
      "end": {
        "line": 74,
        "column": 18
      }
    },
    "replacement": "Default::default()",
    "genre": "FnValue"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/uniswap/liqrange.rs",
    "function": {
      "function_name": "LiqRangeRef<'a>::start_tick",
      "return_type": "-> Tick",
      "span": {
        "start": {
          "line": 93,
          "column": 5
        },
        "end": {
          "line": 98,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 94,
        "column": 9
      },
      "end": {
        "line": 97,
        "column": 10
      }
    },
    "replacement": "Default::default()",
    "genre": "FnValue"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/composite.rs",
    "function": {
      "function_name": "CompositeOrder<'a>::negative_quantity",
      "return_type": "-> u128",
      "span": {
        "start": {
          "line": 113,
          "column": 5
        },
        "end": {
          "line": 126,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 119,
        "column": 9
      },
      "end": {
        "line": 125,
        "column": 10
      }
    },
    "replacement": "1",
    "genre": "FnValue"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/debt.rs",
    "function": {
      "function_name": "Debt::flat_fill_t1",
      "return_type": "-> Self",
      "span": {
        "start": {
          "line": 297,
          "column": 5
        },
        "end": {
          "line": 303,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 301,
        "column": 37
      },
      "end": {
        "line": 301,
        "column": 38
      }
    },
    "replacement": "+",
    "genre": "BinaryOperator"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/uniswap/flags.rs",
    "function": {
      "function_name": "<impl BitOr for UniswapFlags>::bitor",
      "return_type": "-> Self::Output",
      "span": {
        "start": {
          "line": 85,
          "column": 5
        },
        "end": {
          "line": 87,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 86,
        "column": 34
      },
      "end": {
        "line": 86,
        "column": 35
      }
    },
    "replacement": "&",
    "genre": "BinaryOperator"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/debt.rs",
    "function": {
      "function_name": "Debt::magnitude",
      "return_type": "-> u128",
      "span": {
        "start": {
          "line": 148,
          "column": 5
        },
        "end": {
          "line": 150,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 149,
        "column": 9
      },
      "end": {
        "line": 149,
        "column": 35
      }
    },
    "replacement": "1",
    "genre": "FnValue"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/uniswap/liqrange.rs",
    "function": {
      "function_name": "<impl PartialEq for LiqRangeRef<'a>>::eq",
      "return_type": "-> bool",
      "span": {
        "start": {
          "line": 70,
          "column": 5
        },
        "end": {
          "line": 74,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 72,
        "column": 13
      },
      "end": {
        "line": 72,
        "column": 15
      }
    },
    "replacement": "||",
    "genre": "BinaryOperator"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/uniswap/poolprice.rs",
    "function": {
      "function_name": "PoolPrice<'a>::liquidity",
      "return_type": "-> u128",
      "span": {
        "start": {
          "line": 81,
          "column": 5
        },
        "end": {
          "line": 83,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 82,
        "column": 9
      },
      "end": {
        "line": 82,
        "column": 33
      }
    },
    "replacement": "1",
    "genre": "FnValue"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/debt.rs",
    "function": {
      "function_name": "Debt::dq_to_price",
      "return_type": "-> u128",
      "span": {
        "start": {
          "line": 305,
          "column": 5
        },
        "end": {
          "line": 315,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 310,
        "column": 21
      },
      "end": {
        "line": 310,
        "column": 22
      }
    },
    "replacement": "<",
    "genre": "BinaryOperator"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/debt.rs",
    "function": {
      "function_name": "Debt::valid_for_price",
      "return_type": "-> bool",
      "span": {
        "start": {
          "line": 205,
          "column": 5
        },
        "end": {
          "line": 216,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 213,
        "column": 43
      },
      "end": {
        "line": 213,
        "column": 44
      }
    },
    "replacement": "<",
    "genre": "BinaryOperator"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/sqrtprice.rs",
    "function": {
      "function_name": "SqrtPriceX96::from_float_price",
      "return_type": "-> Self",
      "span": {
        "start": {
          "line": 33,
          "column": 5
        },
        "end": {
          "line": 36,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 35,
        "column": 46
      },
      "end": {
        "line": 35,
        "column": 47
      }
    },
    "replacement": "/",
    "genre": "BinaryOperator"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/uniswap/poolprice.rs",
    "function": {
      "function_name": "PoolPrice<'a>::intersect_with_debt",
      "return_type": "-> eyre::Result<u128>",
      "span": {
        "start": {
          "line": 191,
          "column": 5
        },
        "end": {
          "line": 226,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 214,
        "column": 17
      },
      "end": {
        "line": 214,
        "column": 18
      }
    },
    "replacement": "==",
    "genre": "BinaryOperator"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/composite.rs",
    "function": {
      "function_name": "CompositeOrder<'a>::t0_quantities",
      "return_type": "-> (Option<u128>, Option<u128>)",
      "span": {
        "start": {
          "line": 148,
          "column": 5
        },
        "end": {
          "line": 173,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 156,
        "column": 9
      },
      "end": {
        "line": 172,
        "column": 10
      }
    },
    "replacement": "(Some(0), Some(0))",
    "genre": "FnValue"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/debt.rs",
    "function": {
      "function_name": "<impl Add for DebtType>::add",
      "return_type": "-> Self::Output",
      "span": {
        "start": {
          "line": 99,
          "column": 5
        },
        "end": {
          "line": 110,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 105,
        "column": 90
      },
      "end": {
        "line": 105,
        "column": 91
      }
    },
    "replacement": "/",
    "genre": "BinaryOperator"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/debt.rs",
    "function": {
      "function_name": "<impl PartialEq for Debt>::eq",
      "return_type": "-> bool",
      "span": {
        "start": {
          "line": 421,
          "column": 5
        },
        "end": {
          "line": 423,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 422,
        "column": 9
      },
      "end": {
        "line": 422,
        "column": 45
      }
    },
    "replacement": "true",
    "genre": "FnValue"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/uniswap/poolprice.rs",
    "function": {
      "function_name": "PoolPrice<'a>::as_float",
      "return_type": "-> f64",
      "span": {
        "start": {
          "line": 315,
          "column": 5
        },
        "end": {
          "line": 319,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 318,
        "column": 9
      },
      "end": {
        "line": 318,
        "column": 28
      }
    },
    "replacement": "-1.0",
    "genre": "FnValue"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/uniswap/poolpricevec.rs",
    "function": {
      "function_name": "PoolPriceVec<'a>::to_price",
      "return_type": "-> Option<Self>",
      "span": {
        "start": {
          "line": 453,
          "column": 5
        },
        "end": {
          "line": 474,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 454,
        "column": 9
      },
      "end": {
        "line": 473,
        "column": 10
      }
    },
    "replacement": "Some(Default::default())",
    "genre": "FnValue"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/math/mod.rs",
    "function": {
      "function_name": "low_to_high",
      "return_type": "-> (&'a T, &'a T)",
      "span": {
        "start": {
          "line": 197,
          "column": 1
        },
        "end": {
          "line": 204,
          "column": 2
        }
      }
    },
    "span": {
      "start": {
        "line": 200,
        "column": 5
      },
      "end": {
        "line": 203,
        "column": 6
      }
    },
    "replacement": "(&Default::default(), &Default::default())",
    "genre": "FnValue"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/debt.rs",
    "function": {
      "function_name": "Debt::additional_t0_needed",
      "return_type": "-> u128",
      "span": {
        "start": {
          "line": 156,
          "column": 5
        },
        "end": {
          "line": 162,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 161,
        "column": 31
      },
      "end": {
        "line": 161,
        "column": 32
      }
    },
    "replacement": "+",
    "genre": "BinaryOperator"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/uniswap/poolprice.rs",
    "function": {
      "function_name": "PoolPrice<'a>::as_float",
      "return_type": "-> f64",
      "span": {
        "start": {
          "line": 315,
          "column": 5
        },
        "end": {
          "line": 319,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 318,
        "column": 9
      },
      "end": {
        "line": 318,
        "column": 28
      }
    },
    "replacement": "0.0",
    "genre": "FnValue"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/tokens.rs",
    "function": {
      "function_name": "TokenQuantity::as_t1",
      "return_type": "-> Self",
      "span": {
        "start": {
          "line": 80,
          "column": 5
        },
        "end": {
          "line": 85,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 81,
        "column": 9
      },
      "end": {
        "line": 84,
        "column": 10
      }
    },
    "replacement": "Default::default()",
    "genre": "FnValue"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/uniswap/poolpricevec.rs",
    "function": {
      "function_name": "PoolPriceVec<'a>::delta_to_price",
      "return_type": "-> (u128, u128)",
      "span": {
        "start": {
          "line": 476,
          "column": 5
        },
        "end": {
          "line": 490,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 483,
        "column": 9
      },
      "end": {
        "line": 489,
        "column": 31
      }
    },
    "replacement": "(1, 1)",
    "genre": "FnValue"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/uniswap/poolprice.rs",
    "function": {
      "function_name": "PoolPrice<'a>::price",
      "return_type": "-> &SqrtPriceX96",
      "span": {
        "start": {
          "line": 301,
          "column": 5
        },
        "end": {
          "line": 303,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 302,
        "column": 9
      },
      "end": {
        "line": 302,
        "column": 20
      }
    },
    "replacement": "&Default::default()",
    "genre": "FnValue"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/uniswap/poolpricevec.rs",
    "function": {
      "function_name": "PoolPriceVec<'a>::output",
      "return_type": "-> u128",
      "span": {
        "start": {
          "line": 211,
          "column": 5
        },
        "end": {
          "line": 217,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 212,
        "column": 33
      },
      "end": {
        "line": 212,
        "column": 34
      }
    },
    "replacement": "<",
    "genre": "BinaryOperator"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/sqrtprice.rs",
    "function": {
      "function_name": "<impl From for SqrtPriceX96>::from",
      "return_type": "-> Self",
      "span": {
        "start": {
          "line": 81,
          "column": 5
        },
        "end": {
          "line": 83,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 82,
        "column": 9
      },
      "end": {
        "line": 82,
        "column": 20
      }
    },
    "replacement": "Default::default()",
    "genre": "FnValue"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/uniswap/poolpricevec.rs",
    "function": {
      "function_name": "PoolPriceVec<'a>::is_buy",
      "return_type": "-> bool",
      "span": {
        "start": {
          "line": 492,
          "column": 5
        },
        "end": {
          "line": 494,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 493,
        "column": 9
      },
      "end": {
        "line": 493,
        "column": 54
      }
    },
    "replacement": "false",
    "genre": "FnValue"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/uniswap/poolprice.rs",
    "function": {
      "function_name": "PoolPrice<'a>::intersect_with_debt",
      "return_type": "-> eyre::Result<u128>",
      "span": {
        "start": {
          "line": 191,
          "column": 5
        },
        "end": {
          "line": 226,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 225,
        "column": 17
      },
      "end": {
        "line": 225,
        "column": 18
      }
    },
    "replacement": "*",
    "genre": "BinaryOperator"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/debt.rs",
    "function": {
      "function_name": "Debt::valid_for_price",
      "return_type": "-> bool",
      "span": {
        "start": {
          "line": 205,
          "column": 5
        },
        "end": {
          "line": 216,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 214,
        "column": 60
      },
      "end": {
        "line": 214,
        "column": 61
      }
    },
    "replacement": ">",
    "genre": "BinaryOperator"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/uniswap/poolprice.rs",
    "function": {
      "function_name": "PoolPrice<'a>::checked_new",
      "return_type": "-> Self",
      "span": {
        "start": {
          "line": 63,
          "column": 5
        },
        "end": {
          "line": 71,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 64,
        "column": 48
      },
      "end": {
        "line": 64,
        "column": 49
      }
    },
    "replacement": "==",
    "genre": "BinaryOperator"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/uniswap/poolpricevec.rs",
    "function": {
      "function_name": "PoolPriceVec<'a>::donation",
      "return_type": "-> DonationResult",
      "span": {
        "start": {
          "line": 376,
          "column": 5
        },
        "end": {
          "line": 450,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 407,
        "column": 36
      },
      "end": {
        "line": 407,
        "column": 38
      }
    },
    "replacement": "/=",
    "genre": "BinaryOperator"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/composite.rs",
    "function": {
      "function_name": "CompositeOrder<'a>::calc_quantities",
      "return_type": "-> (u128, u128)",
      "span": {
        "start": {
          "line": 45,
          "column": 5
        },
        "end": {
          "line": 64,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 46,
        "column": 9
      },
      "end": {
        "line": 63,
        "column": 24
      }
    },
    "replacement": "(1, 1)",
    "genre": "FnValue"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/sqrtprice.rs",
    "function": {
      "function_name": "SqrtPriceX96::to_tick",
      "return_type": "-> eyre::Result<i32>",
      "span": {
        "start": {
          "line": 49,
          "column": 5
        },
        "end": {
          "line": 51,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 50,
        "column": 9
      },
      "end": {
        "line": 50,
        "column": 56
      }
    },
    "replacement": "Ok(0)",
    "genre": "FnValue"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/uniswap/poolpricevec.rs",
    "function": {
      "function_name": "SwapStep<'a>::for_range",
      "return_type": "-> eyre::Result<Self>",
      "span": {
        "start": {
          "line": 29,
          "column": 5
        },
        "end": {
          "line": 40,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 39,
        "column": 9
      },
      "end": {
        "line": 39,
        "column": 67
      }
    },
    "replacement": "Ok(Default::default())",
    "genre": "FnValue"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/uniswap/poolpricevec.rs",
    "function": {
      "function_name": "SwapStep<'a>::for_price_range",
      "return_type": "-> eyre::Result<Self>",
      "span": {
        "start": {
          "line": 42,
          "column": 5
        },
        "end": {
          "line": 78,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 61,
        "column": 58
      },
      "end": {
        "line": 61,
        "column": 59
      }
    },
    "replacement": "==",
    "genre": "BinaryOperator"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/uniswap/poolprice.rs",
    "function": {
      "function_name": "PoolPrice<'a>::d_t0",
      "return_type": "-> eyre::Result<Self>",
      "span": {
        "start": {
          "line": 85,
          "column": 5
        },
        "end": {
          "line": 171,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 97,
        "column": 28
      },
      "end": {
        "line": 97,
        "column": 29
      }
    },
    "replacement": "==",
    "genre": "BinaryOperator"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/math/mod.rs",
    "function": {
      "function_name": "price_intersect_solve",
      "return_type": "-> Integer",
      "span": {
        "start": {
          "line": 101,
          "column": 1
        },
        "end": {
          "line": 151,
          "column": 2
        }
      }
    },
    "span": {
      "start": {
        "line": 128,
        "column": 24
      },
      "end": {
        "line": 128,
        "column": 26
      }
    },
    "replacement": ">>",
    "genre": "BinaryOperator"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/mod.rs",
    "function": {
      "function_name": "<impl Add for MatchingPrice>::add",
      "return_type": "-> Self::Output",
      "span": {
        "start": {
          "line": 71,
          "column": 5
        },
        "end": {
          "line": 73,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 72,
        "column": 21
      },
      "end": {
        "line": 72,
        "column": 22
      }
    },
    "replacement": "-",
    "genre": "BinaryOperator"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/uniswap/poolpricevec.rs",
    "function": {
      "function_name": "SwapStep<'a>::output",
      "return_type": "-> u128",
      "span": {
        "start": {
          "line": 165,
          "column": 5
        },
        "end": {
          "line": 171,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 166,
        "column": 9
      },
      "end": {
        "line": 170,
        "column": 10
      }
    },
    "replacement": "0",
    "genre": "FnValue"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/uniswap/liqrange.rs",
    "function": {
      "function_name": "LiqRange::lower_tick",
      "return_type": "-> i32",
      "span": {
        "start": {
          "line": 41,
          "column": 5
        },
        "end": {
          "line": 43,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 42,
        "column": 9
      },
      "end": {
        "line": 42,
        "column": 24
      }
    },
    "replacement": "-1",
    "genre": "FnValue"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/composite.rs",
    "function": {
      "function_name": "CompositeOrder<'a>::quantity",
      "return_type": "-> u128",
      "span": {
        "start": {
          "line": 86,
          "column": 5
        },
        "end": {
          "line": 111,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 94,
        "column": 9
      },
      "end": {
        "line": 110,
        "column": 10
      }
    },
    "replacement": "1",
    "genre": "FnValue"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/uniswap/liqrange.rs",
    "function": {
      "function_name": "LiqRange::upper_tick",
      "return_type": "-> i32",
      "span": {
        "start": {
          "line": 45,
          "column": 5
        },
        "end": {
          "line": 47,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 46,
        "column": 9
      },
      "end": {
        "line": 46,
        "column": 24
      }
    },
    "replacement": "-1",
    "genre": "FnValue"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/math/mod.rs",
    "function": {
      "function_name": "amm_debt_same_move_solve",
      "return_type": "-> u128",
      "span": {
        "start": {
          "line": 24,
          "column": 1
        },
        "end": {
          "line": 99,
          "column": 2
        }
      }
    },
    "span": {
      "start": {
        "line": 51,
        "column": 44
      },
      "end": {
        "line": 51,
        "column": 46
      }
    },
    "replacement": ">>",
    "genre": "BinaryOperator"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/uniswap/liqrange.rs",
    "function": {
      "function_name": "LiqRangeRef<'a>::next",
      "return_type": "-> Option<Self>",
      "span": {
        "start": {
          "line": 127,
          "column": 5
        },
        "end": {
          "line": 132,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 128,
        "column": 9
      },
      "end": {
        "line": 131,
        "column": 10
      }
    },
    "replacement": "Some(Default::default())",
    "genre": "FnValue"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/uniswap/flags.rs",
    "function": {
      "function_name": "<impl BitOr for UniswapFlags>::bitor",
      "return_type": "-> Self::Output",
      "span": {
        "start": {
          "line": 101,
          "column": 5
        },
        "end": {
          "line": 103,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 102,
        "column": 9
      },
      "end": {
        "line": 102,
        "column": 39
      }
    },
    "replacement": "Default::default()",
    "genre": "FnValue"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/math/mod.rs",
    "function": {
      "function_name": "quadratic_solve",
      "return_type": "-> (Option<Integer>, Option<Integer>)",
      "span": {
        "start": {
          "line": 153,
          "column": 1
        },
        "end": {
          "line": 187,
          "column": 2
        }
      }
    },
    "span": {
      "start": {
        "line": 159,
        "column": 5
      },
      "end": {
        "line": 186,
        "column": 6
      }
    },
    "replacement": "(Some(Default::default()), None)",
    "genre": "FnValue"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/debt.rs",
    "function": {
      "function_name": "Debt::calc_proportion",
      "return_type": "-> u128",
      "span": {
        "start": {
          "line": 317,
          "column": 5
        },
        "end": {
          "line": 360,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 336,
        "column": 35
      },
      "end": {
        "line": 336,
        "column": 36
      }
    },
    "replacement": "/",
    "genre": "BinaryOperator"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/uniswap/poolprice.rs",
    "function": {
      "function_name": "PoolPrice<'a>::order_to_target",
      "return_type": "-> Option<PoolPriceVec<'a>>",
      "span": {
        "start": {
          "line": 228,
          "column": 5
        },
        "end": {
          "line": 299,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 270,
        "column": 23
      },
      "end": {
        "line": 270,
        "column": 25
      }
    },
    "replacement": "!=",
    "genre": "BinaryOperator"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/composite.rs",
    "function": {
      "function_name": "CompositeOrder<'a>::quantity",
      "return_type": "-> u128",
      "span": {
        "start": {
          "line": 86,
          "column": 5
        },
        "end": {
          "line": 111,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 94,
        "column": 9
      },
      "end": {
        "line": 110,
        "column": 10
      }
    },
    "replacement": "0",
    "genre": "FnValue"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/debt.rs",
    "function": {
      "function_name": "Debt::freed_t0",
      "return_type": "-> u128",
      "span": {
        "start": {
          "line": 231,
          "column": 5
        },
        "end": {
          "line": 247,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 234,
        "column": 9
      },
      "end": {
        "line": 246,
        "column": 34
      }
    },
    "replacement": "0",
    "genre": "FnValue"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/uniswap/poolprice.rs",
    "function": {
      "function_name": "PoolPrice<'a>::d_t0",
      "return_type": "-> eyre::Result<Self>",
      "span": {
        "start": {
          "line": 85,
          "column": 5
        },
        "end": {
          "line": 171,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 117,
        "column": 75
      },
      "end": {
        "line": 117,
        "column": 76
      }
    },
    "replacement": "/",
    "genre": "BinaryOperator"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/debt.rs",
    "function": {
      "function_name": "Debt::calc_proportion",
      "return_type": "-> u128",
      "span": {
        "start": {
          "line": 317,
          "column": 5
        },
        "end": {
          "line": 360,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 341,
        "column": 29
      },
      "end": {
        "line": 341,
        "column": 30
      }
    },
    "replacement": "/",
    "genre": "BinaryOperator"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/uniswap/poolprice.rs",
    "function": {
      "function_name": "<impl Ord for PoolPrice<'a>>::cmp",
      "return_type": "-> std::cmp::Ordering",
      "span": {
        "start": {
          "line": 57,
          "column": 5
        },
        "end": {
          "line": 59,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 58,
        "column": 9
      },
      "end": {
        "line": 58,
        "column": 37
      }
    },
    "replacement": "Default::default()",
    "genre": "FnValue"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/composite.rs",
    "function": {
      "function_name": "CompositeOrder<'a>::negative_quantity",
      "return_type": "-> u128",
      "span": {
        "start": {
          "line": 113,
          "column": 5
        },
        "end": {
          "line": 126,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 119,
        "column": 9
      },
      "end": {
        "line": 125,
        "column": 10
      }
    },
    "replacement": "0",
    "genre": "FnValue"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/debt.rs",
    "function": {
      "function_name": "DebtType::slack_at_price",
      "return_type": "-> u128",
      "span": {
        "start": {
          "line": 75,
          "column": 5
        },
        "end": {
          "line": 85,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 76,
        "column": 9
      },
      "end": {
        "line": 84,
        "column": 38
      }
    },
    "replacement": "0",
    "genre": "FnValue"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/uniswap/poolpricevec.rs",
    "function": {
      "function_name": "PoolPriceVec<'a>::steps",
      "return_type": "-> Option<&Vec<SwapStep>>",
      "span": {
        "start": {
          "line": 219,
          "column": 5
        },
        "end": {
          "line": 221,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 220,
        "column": 9
      },
      "end": {
        "line": 220,
        "column": 28
      }
    },
    "replacement": "Some(&vec![])",
    "genre": "FnValue"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/composite.rs",
    "function": {
      "function_name": "CompositeOrder<'a>::t0_quantities",
      "return_type": "-> (Option<u128>, Option<u128>)",
      "span": {
        "start": {
          "line": 148,
          "column": 5
        },
        "end": {
          "line": 173,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 156,
        "column": 9
      },
      "end": {
        "line": 172,
        "column": 10
      }
    },
    "replacement": "(None, None)",
    "genre": "FnValue"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/uniswap/poolpricevec.rs",
    "function": {
      "function_name": "PoolPriceVec<'a>::input",
      "return_type": "-> u128",
      "span": {
        "start": {
          "line": 203,
          "column": 5
        },
        "end": {
          "line": 209,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 204,
        "column": 9
      },
      "end": {
        "line": 208,
        "column": 10
      }
    },
    "replacement": "0",
    "genre": "FnValue"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/uniswap/poolpricevec.rs",
    "function": {
      "function_name": "PoolPriceVec<'a>::is_buy",
      "return_type": "-> bool",
      "span": {
        "start": {
          "line": 492,
          "column": 5
        },
        "end": {
          "line": 494,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 493,
        "column": 32
      },
      "end": {
        "line": 493,
        "column": 33
      }
    },
    "replacement": "==",
    "genre": "BinaryOperator"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/uniswap/poolpricevec.rs",
    "function": {
      "function_name": "PoolPriceVec<'a>::quantity",
      "return_type": "-> (u128, u128, OrderPrice)",
      "span": {
        "start": {
          "line": 496,
          "column": 5
        },
        "end": {
          "line": 508,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 498,
        "column": 9
      },
      "end": {
        "line": 507,
        "column": 35
      }
    },
    "replacement": "(1, 0, Default::default())",
    "genre": "FnValue"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/debt.rs",
    "function": {
      "function_name": "DebtType::same_side",
      "return_type": "-> bool",
      "span": {
        "start": {
          "line": 87,
          "column": 5
        },
        "end": {
          "line": 93,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 88,
        "column": 9
      },
      "end": {
        "line": 92,
        "column": 10
      }
    },
    "replacement": "true",
    "genre": "FnValue"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/composite.rs",
    "function": {
      "function_name": "CompositeOrder<'a>::bound",
      "return_type": "-> Option<Ray>",
      "span": {
        "start": {
          "line": 41,
          "column": 5
        },
        "end": {
          "line": 43,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 42,
        "column": 9
      },
      "end": {
        "line": 42,
        "column": 25
      }
    },
    "replacement": "None",
    "genre": "FnValue"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/uniswap/poolsnapshot.rs",
    "function": {
      "function_name": "PoolSnapshot::current_price",
      "return_type": "-> PoolPrice",
      "span": {
        "start": {
          "line": 102,
          "column": 5
        },
        "end": {
          "line": 109,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 103,
        "column": 9
      },
      "end": {
        "line": 108,
        "column": 92
      }
    },
    "replacement": "Default::default()",
    "genre": "FnValue"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/debt.rs",
    "function": {
      "function_name": "<impl Add for DebtType>::add",
      "return_type": "-> Self::Output",
      "span": {
        "start": {
          "line": 99,
          "column": 5
        },
        "end": {
          "line": 110,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 106,
        "column": 76
      },
      "end": {
        "line": 106,
        "column": 77
      }
    },
    "replacement": "/",
    "genre": "BinaryOperator"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/uniswap/poolpricevec.rs",
    "function": {
      "function_name": "PoolPriceVec<'a>::donation",
      "return_type": "-> DonationResult",
      "span": {
        "start": {
          "line": 376,
          "column": 5
        },
        "end": {
          "line": 450,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 396,
        "column": 40
      },
      "end": {
        "line": 396,
        "column": 41
      }
    },
    "replacement": "/",
    "genre": "BinaryOperator"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/uniswap/poolpricevec.rs",
    "function": {
      "function_name": "PoolPriceVec<'a>::from_swap",
      "return_type": "-> eyre::Result<Self>",
      "span": {
        "start": {
          "line": 288,
          "column": 5
        },
        "end": {
          "line": 374,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 309,
        "column": 23
      },
      "end": {
        "line": 309,
        "column": 25
      }
    },
    "replacement": "/=",
    "genre": "BinaryOperator"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/uniswap/poolpricevec.rs",
    "function": {
      "function_name": "PoolPriceVec<'a>::fill",
      "return_type": "-> Self",
      "span": {
        "start": {
          "line": 513,
          "column": 5
        },
        "end": {
          "line": 538,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 514,
        "column": 9
      },
      "end": {
        "line": 537,
        "column": 91
      }
    },
    "replacement": "Default::default()",
    "genre": "FnValue"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/debt.rs",
    "function": {
      "function_name": "<impl Add for DebtType>::add",
      "return_type": "-> Self::Output",
      "span": {
        "start": {
          "line": 99,
          "column": 5
        },
        "end": {
          "line": 110,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 105,
        "column": 90
      },
      "end": {
        "line": 105,
        "column": 91
      }
    },
    "replacement": "+",
    "genre": "BinaryOperator"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/tokens.rs",
    "function": {
      "function_name": "TokenQuantity::quantity",
      "return_type": "-> u128",
      "span": {
        "start": {
          "line": 87,
          "column": 5
        },
        "end": {
          "line": 91,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 88,
        "column": 9
      },
      "end": {
        "line": 90,
        "column": 10
      }
    },
    "replacement": "0",
    "genre": "FnValue"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/uniswap/poolprice.rs",
    "function": {
      "function_name": "PoolPrice<'a>::to_liq_range_upper",
      "return_type": "-> eyre::Result<PoolPriceVec<'a>>",
      "span": {
        "start": {
          "line": 179,
          "column": 5
        },
        "end": {
          "line": 183,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 182,
        "column": 9
      },
      "end": {
        "line": 182,
        "column": 45
      }
    },
    "replacement": "Ok(Default::default())",
    "genre": "FnValue"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/debt.rs",
    "function": {
      "function_name": "Debt::price_range",
      "return_type": "-> (Ray, Ray)",
      "span": {
        "start": {
          "line": 178,
          "column": 5
        },
        "end": {
          "line": 203,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 181,
        "column": 9
      },
      "end": {
        "line": 202,
        "column": 22
      }
    },
    "replacement": "(Default::default(), Default::default())",
    "genre": "FnValue"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/math/mod.rs",
    "function": {
      "function_name": "price_intersect_solve",
      "return_type": "-> Integer",
      "span": {
        "start": {
          "line": 101,
          "column": 1
        },
        "end": {
          "line": 151,
          "column": 2
        }
      }
    },
    "span": {
      "start": {
        "line": 128,
        "column": 31
      },
      "end": {
        "line": 128,
        "column": 32
      }
    },
    "replacement": "-",
    "genre": "BinaryOperator"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/uniswap/poolpricevec.rs",
    "function": {
      "function_name": "SwapStep<'a>::whole_range",
      "return_type": "-> eyre::Result<Self>",
      "span": {
        "start": {
          "line": 87,
          "column": 5
        },
        "end": {
          "line": 93,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 90,
        "column": 9
      },
      "end": {
        "line": 92,
        "column": 38
      }
    },
    "replacement": "Ok(Default::default())",
    "genre": "FnValue"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/uniswap/poolpricevec.rs",
    "function": {
      "function_name": "PoolPriceVec<'a>::input",
      "return_type": "-> u128",
      "span": {
        "start": {
          "line": 203,
          "column": 5
        },
        "end": {
          "line": 209,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 204,
        "column": 9
      },
      "end": {
        "line": 208,
        "column": 10
      }
    },
    "replacement": "1",
    "genre": "FnValue"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/debt.rs",
    "function": {
      "function_name": "Debt::calc_proportion",
      "return_type": "-> u128",
      "span": {
        "start": {
          "line": 317,
          "column": 5
        },
        "end": {
          "line": 360,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 355,
        "column": 13
      },
      "end": {
        "line": 355,
        "column": 14
      }
    },
    "replacement": "/",
    "genre": "BinaryOperator"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/debt.rs",
    "function": {
      "function_name": "DebtType::slack_at_price",
      "return_type": "-> u128",
      "span": {
        "start": {
          "line": 75,
          "column": 5
        },
        "end": {
          "line": 85,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 76,
        "column": 9
      },
      "end": {
        "line": 84,
        "column": 38
      }
    },
    "replacement": "1",
    "genre": "FnValue"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/composite.rs",
    "function": {
      "function_name": "CompositeOrder<'a>::start_price",
      "return_type": "-> Ray",
      "span": {
        "start": {
          "line": 202,
          "column": 5
        },
        "end": {
          "line": 211,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 206,
        "column": 9
      },
      "end": {
        "line": 210,
        "column": 22
      }
    },
    "replacement": "Default::default()",
    "genre": "FnValue"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/debt.rs",
    "function": {
      "function_name": "DebtType::is_empty",
      "return_type": "-> bool",
      "span": {
        "start": {
          "line": 60,
          "column": 5
        },
        "end": {
          "line": 62,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 61,
        "column": 26
      },
      "end": {
        "line": 61,
        "column": 28
      }
    },
    "replacement": "!=",
    "genre": "BinaryOperator"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/debt.rs",
    "function": {
      "function_name": "<impl Add for DebtType>::add",
      "return_type": "-> Self::Output",
      "span": {
        "start": {
          "line": 99,
          "column": 5
        },
        "end": {
          "line": 110,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 107,
        "column": 89
      },
      "end": {
        "line": 107,
        "column": 90
      }
    },
    "replacement": "/",
    "genre": "BinaryOperator"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/debt.rs",
    "function": {
      "function_name": "Debt::price_range",
      "return_type": "-> (Ray, Ray)",
      "span": {
        "start": {
          "line": 178,
          "column": 5
        },
        "end": {
          "line": 203,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 183,
        "column": 52
      },
      "end": {
        "line": 183,
        "column": 53
      }
    },
    "replacement": "*",
    "genre": "BinaryOperator"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/math/mod.rs",
    "function": {
      "function_name": "price_intersect_solve",
      "return_type": "-> Integer",
      "span": {
        "start": {
          "line": 101,
          "column": 1
        },
        "end": {
          "line": 151,
          "column": 2
        }
      }
    },
    "span": {
      "start": {
        "line": 111,
        "column": 5
      },
      "end": {
        "line": 150,
        "column": 39
      }
    },
    "replacement": "Default::default()",
    "genre": "FnValue"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/math/mod.rs",
    "function": {
      "function_name": "price_intersect_solve",
      "return_type": "-> Integer",
      "span": {
        "start": {
          "line": 101,
          "column": 1
        },
        "end": {
          "line": 151,
          "column": 2
        }
      }
    },
    "span": {
      "start": {
        "line": 146,
        "column": 45
      },
      "end": {
        "line": 146,
        "column": 46
      }
    },
    "replacement": "+",
    "genre": "BinaryOperator"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/composite.rs",
    "function": {
      "function_name": "CompositeOrder<'a>::calc_quantities",
      "return_type": "-> (u128, u128)",
      "span": {
        "start": {
          "line": 45,
          "column": 5
        },
        "end": {
          "line": 64,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 46,
        "column": 9
      },
      "end": {
        "line": 63,
        "column": 24
      }
    },
    "replacement": "(0, 0)",
    "genre": "FnValue"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/debt.rs",
    "function": {
      "function_name": "Debt::calc_proportion",
      "return_type": "-> u128",
      "span": {
        "start": {
          "line": 317,
          "column": 5
        },
        "end": {
          "line": 360,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 341,
        "column": 29
      },
      "end": {
        "line": 341,
        "column": 30
      }
    },
    "replacement": "+",
    "genre": "BinaryOperator"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/tokens.rs",
    "function": {
      "function_name": "TokenQuantity::zero",
      "return_type": "-> Self",
      "span": {
        "start": {
          "line": 46,
          "column": 5
        },
        "end": {
          "line": 49,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 48,
        "column": 9
      },
      "end": {
        "line": 48,
        "column": 36
      }
    },
    "replacement": "Default::default()",
    "genre": "FnValue"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/debt.rs",
    "function": {
      "function_name": "DebtType::round_up",
      "return_type": "-> bool",
      "span": {
        "start": {
          "line": 39,
          "column": 5
        },
        "end": {
          "line": 45,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 41,
        "column": 9
      },
      "end": {
        "line": 44,
        "column": 10
      }
    },
    "replacement": "true",
    "genre": "FnValue"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/uniswap/mod.rs",
    "function": {
      "function_name": "Direction::from_prices",
      "return_type": "-> Self",
      "span": {
        "start": {
          "line": 71,
          "column": 5
        },
        "end": {
          "line": 77,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 73,
        "column": 9
      },
      "end": {
        "line": 76,
        "column": 10
      }
    },
    "replacement": "Default::default()",
    "genre": "FnValue"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/debt.rs",
    "function": {
      "function_name": "Debt::calc_proportion",
      "return_type": "-> u128",
      "span": {
        "start": {
          "line": 317,
          "column": 5
        },
        "end": {
          "line": 360,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 339,
        "column": 29
      },
      "end": {
        "line": 339,
        "column": 30
      }
    },
    "replacement": "-",
    "genre": "BinaryOperator"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/uniswap/poolsnapshot.rs",
    "function": {
      "function_name": "PoolSnapshot::ranges",
      "return_type": "-> Iter<LiqRange>",
      "span": {
        "start": {
          "line": 97,
          "column": 5
        },
        "end": {
          "line": 100,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 99,
        "column": 9
      },
      "end": {
        "line": 99,
        "column": 27
      }
    },
    "replacement": "Iter::new(Default::default())",
    "genre": "FnValue"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/uniswap/poolpricevec.rs",
    "function": {
      "function_name": "PoolPriceVec<'a>::donation",
      "return_type": "-> DonationResult",
      "span": {
        "start": {
          "line": 376,
          "column": 5
        },
        "end": {
          "line": 450,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 388,
        "column": 32
      },
      "end": {
        "line": 388,
        "column": 33
      }
    },
    "replacement": "*",
    "genre": "BinaryOperator"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/math/mod.rs",
    "function": {
      "function_name": "price_intersect_solve",
      "return_type": "-> Integer",
      "span": {
        "start": {
          "line": 101,
          "column": 1
        },
        "end": {
          "line": 151,
          "column": 2
        }
      }
    },
    "span": {
      "start": {
        "line": 129,
        "column": 14
      },
      "end": {
        "line": 129,
        "column": 15
      }
    },
    "replacement": "/",
    "genre": "BinaryOperator"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/uniswap/poolpricevec.rs",
    "function": {
      "function_name": "SwapStep<'a>::for_price_range",
      "return_type": "-> eyre::Result<Self>",
      "span": {
        "start": {
          "line": 42,
          "column": 5
        },
        "end": {
          "line": 78,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 61,
        "column": 58
      },
      "end": {
        "line": 61,
        "column": 59
      }
    },
    "replacement": ">",
    "genre": "BinaryOperator"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/uniswap/poolpricevec.rs",
    "function": {
      "function_name": "SwapStep<'a>::input",
      "return_type": "-> u128",
      "span": {
        "start": {
          "line": 157,
          "column": 5
        },
        "end": {
          "line": 163,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 158,
        "column": 27
      },
      "end": {
        "line": 158,
        "column": 28
      }
    },
    "replacement": "==",
    "genre": "BinaryOperator"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/sqrtprice.rs",
    "function": {
      "function_name": "SqrtPriceX96::max_at_tick",
      "return_type": "-> eyre::Result<Self>",
      "span": {
        "start": {
          "line": 43,
          "column": 5
        },
        "end": {
          "line": 47,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 46,
        "column": 9
      },
      "end": {
        "line": 46,
        "column": 88
      }
    },
    "replacement": "Ok(Default::default())",
    "genre": "FnValue"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/uniswap/poolpricevec.rs",
    "function": {
      "function_name": "PoolPriceVec<'a>::quantity",
      "return_type": "-> (u128, u128, OrderPrice)",
      "span": {
        "start": {
          "line": 496,
          "column": 5
        },
        "end": {
          "line": 508,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 501,
        "column": 61
      },
      "end": {
        "line": 501,
        "column": 62
      }
    },
    "replacement": "==",
    "genre": "BinaryOperator"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/debt.rs",
    "function": {
      "function_name": "<impl Add for Debt>::add",
      "return_type": "-> Self::Output",
      "span": {
        "start": {
          "line": 383,
          "column": 5
        },
        "end": {
          "line": 393,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 384,
        "column": 40
      },
      "end": {
        "line": 384,
        "column": 41
      }
    },
    "replacement": "*",
    "genre": "BinaryOperator"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/debt.rs",
    "function": {
      "function_name": "<impl Add for DebtType>::add",
      "return_type": "-> Self::Output",
      "span": {
        "start": {
          "line": 99,
          "column": 5
        },
        "end": {
          "line": 110,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 103,
        "column": 78
      },
      "end": {
        "line": 103,
        "column": 79
      }
    },
    "replacement": "-",
    "genre": "BinaryOperator"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/debt.rs",
    "function": {
      "function_name": "Debt::current_t0",
      "return_type": "-> u128",
      "span": {
        "start": {
          "line": 226,
          "column": 5
        },
        "end": {
          "line": 229,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 228,
        "column": 9
      },
      "end": {
        "line": 228,
        "column": 51
      }
    },
    "replacement": "1",
    "genre": "FnValue"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/uniswap/mod.rs",
    "function": {
      "function_name": "Quantity::magnitude",
      "return_type": "-> u128",
      "span": {
        "start": {
          "line": 21,
          "column": 5
        },
        "end": {
          "line": 26,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 22,
        "column": 9
      },
      "end": {
        "line": 25,
        "column": 10
      }
    },
    "replacement": "0",
    "genre": "FnValue"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/uniswap/poolpricevec.rs",
    "function": {
      "function_name": "SwapStep<'a>::for_price_range",
      "return_type": "-> eyre::Result<Self>",
      "span": {
        "start": {
          "line": 42,
          "column": 5
        },
        "end": {
          "line": 78,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 71,
        "column": 38
      },
      "end": {
        "line": 71,
        "column": 39
      }
    },
    "replacement": "==",
    "genre": "BinaryOperator"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/math/mod.rs",
    "function": {
      "function_name": "price_intersect_solve",
      "return_type": "-> Integer",
      "span": {
        "start": {
          "line": 101,
          "column": 1
        },
        "end": {
          "line": 151,
          "column": 2
        }
      }
    },
    "span": {
      "start": {
        "line": 146,
        "column": 45
      },
      "end": {
        "line": 146,
        "column": 46
      }
    },
    "replacement": "/",
    "genre": "BinaryOperator"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/uniswap/poolpricevec.rs",
    "function": {
      "function_name": "PoolPriceVec<'a>::quantity",
      "return_type": "-> (u128, u128, OrderPrice)",
      "span": {
        "start": {
          "line": 496,
          "column": 5
        },
        "end": {
          "line": 508,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 501,
        "column": 56
      },
      "end": {
        "line": 501,
        "column": 58
      }
    },
    "replacement": "&&",
    "genre": "BinaryOperator"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/math/mod.rs",
    "function": {
      "function_name": "amm_debt_same_move_solve",
      "return_type": "-> u128",
      "span": {
        "start": {
          "line": 24,
          "column": 1
        },
        "end": {
          "line": 99,
          "column": 2
        }
      }
    },
    "span": {
      "start": {
        "line": 87,
        "column": 24
      },
      "end": {
        "line": 87,
        "column": 25
      }
    },
    "replacement": ">",
    "genre": "BinaryOperator"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/uniswap/poolprice.rs",
    "function": {
      "function_name": "<impl PartialOrd for PoolPrice<'a>>::partial_cmp",
      "return_type": "-> Option<std::cmp::Ordering>",
      "span": {
        "start": {
          "line": 51,
          "column": 5
        },
        "end": {
          "line": 53,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 52,
        "column": 9
      },
      "end": {
        "line": 52,
        "column": 30
      }
    },
    "replacement": "None",
    "genre": "FnValue"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/uniswap/poolprice.rs",
    "function": {
      "function_name": "PoolPrice<'a>::d_t0",
      "return_type": "-> eyre::Result<Self>",
      "span": {
        "start": {
          "line": 85,
          "column": 5
        },
        "end": {
          "line": 171,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 139,
        "column": 26
      },
      "end": {
        "line": 139,
        "column": 28
      }
    },
    "replacement": "==",
    "genre": "BinaryOperator"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/tokens.rs",
    "function": {
      "function_name": "<impl Sub for TokenQuantity>::sub",
      "return_type": "-> Self::Output",
      "span": {
        "start": {
          "line": 37,
          "column": 5
        },
        "end": {
          "line": 42,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 38,
        "column": 9
      },
      "end": {
        "line": 41,
        "column": 10
      }
    },
    "replacement": "Default::default()",
    "genre": "FnValue"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/debt.rs",
    "function": {
      "function_name": "Debt::valid_for_price",
      "return_type": "-> bool",
      "span": {
        "start": {
          "line": 205,
          "column": 5
        },
        "end": {
          "line": 216,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 213,
        "column": 49
      },
      "end": {
        "line": 213,
        "column": 51
      }
    },
    "replacement": "||",
    "genre": "BinaryOperator"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/uniswap/poolprice.rs",
    "function": {
      "function_name": "<impl From for U256>::from",
      "return_type": "-> Self",
      "span": {
        "start": {
          "line": 339,
          "column": 5
        },
        "end": {
          "line": 341,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 340,
        "column": 9
      },
      "end": {
        "line": 340,
        "column": 27
      }
    },
    "replacement": "Default::default()",
    "genre": "FnValue"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/debt.rs",
    "function": {
      "function_name": "<impl AddAssign for Option<Debt>>::add_assign",
      "return_type": "",
      "span": {
        "start": {
          "line": 375,
          "column": 5
        },
        "end": {
          "line": 377,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 376,
        "column": 9
      },
      "end": {
        "line": 376,
        "column": 28
      }
    },
    "replacement": "()",
    "genre": "FnValue"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/uniswap/poolpricevec.rs",
    "function": {
      "function_name": "SwapStep<'a>::compute_info",
      "return_type": "-> eyre::Result<Self>",
      "span": {
        "start": {
          "line": 107,
          "column": 5
        },
        "end": {
          "line": 139,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 121,
        "column": 30
      },
      "end": {
        "line": 121,
        "column": 32
      }
    },
    "replacement": "||",
    "genre": "BinaryOperator"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/sqrtprice.rs",
    "function": {
      "function_name": "SqrtPriceX96::max_at_tick",
      "return_type": "-> eyre::Result<Self>",
      "span": {
        "start": {
          "line": 43,
          "column": 5
        },
        "end": {
          "line": 47,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 46,
        "column": 51
      },
      "end": {
        "line": 46,
        "column": 52
      }
    },
    "replacement": "-",
    "genre": "BinaryOperator"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/sqrtprice.rs",
    "function": {
      "function_name": "SqrtPriceX96::as_f64",
      "return_type": "-> f64",
      "span": {
        "start": {
          "line": 20,
          "column": 5
        },
        "end": {
          "line": 31,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 25,
        "column": 9
      },
      "end": {
        "line": 30,
        "column": 12
      }
    },
    "replacement": "1.0",
    "genre": "FnValue"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/debt.rs",
    "function": {
      "function_name": "<impl Add for Option<Debt>>::add",
      "return_type": "-> Self::Output",
      "span": {
        "start": {
          "line": 366,
          "column": 5
        },
        "end": {
          "line": 371,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 369,
        "column": 26
      },
      "end": {
        "line": 369,
        "column": 27
      }
    },
    "replacement": "-",
    "genre": "BinaryOperator"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/uniswap/poolpricevec.rs",
    "function": {
      "function_name": "PoolPriceVec<'a>::from_swap",
      "return_type": "-> eyre::Result<Self>",
      "span": {
        "start": {
          "line": 288,
          "column": 5
        },
        "end": {
          "line": 374,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 351,
        "column": 22
      },
      "end": {
        "line": 351,
        "column": 24
      }
    },
    "replacement": "*=",
    "genre": "BinaryOperator"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/math/mod.rs",
    "function": {
      "function_name": "quadratic_solve",
      "return_type": "-> (Option<Integer>, Option<Integer>)",
      "span": {
        "start": {
          "line": 153,
          "column": 1
        },
        "end": {
          "line": 187,
          "column": 2
        }
      }
    },
    "span": {
      "start": {
        "line": 161,
        "column": 42
      },
      "end": {
        "line": 161,
        "column": 43
      }
    },
    "replacement": "/",
    "genre": "BinaryOperator"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/debt.rs",
    "function": {
      "function_name": "<impl Add for DebtType>::add",
      "return_type": "-> Self::Output",
      "span": {
        "start": {
          "line": 99,
          "column": 5
        },
        "end": {
          "line": 110,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 100,
        "column": 9
      },
      "end": {
        "line": 109,
        "column": 10
      }
    },
    "replacement": "Default::default()",
    "genre": "FnValue"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/debt.rs",
    "function": {
      "function_name": "Debt::bid_side",
      "return_type": "-> bool",
      "span": {
        "start": {
          "line": 164,
          "column": 5
        },
        "end": {
          "line": 169,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 168,
        "column": 9
      },
      "end": {
        "line": 168,
        "column": 55
      }
    },
    "replacement": "false",
    "genre": "FnValue"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/composite.rs",
    "function": {
      "function_name": "CompositeOrder<'a>::t0_quantities",
      "return_type": "-> (Option<u128>, Option<u128>)",
      "span": {
        "start": {
          "line": 148,
          "column": 5
        },
        "end": {
          "line": 173,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 156,
        "column": 9
      },
      "end": {
        "line": 172,
        "column": 10
      }
    },
    "replacement": "(None, Some(1))",
    "genre": "FnValue"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/math/mod.rs",
    "function": {
      "function_name": "price_intersect_solve",
      "return_type": "-> Integer",
      "span": {
        "start": {
          "line": 101,
          "column": 1
        },
        "end": {
          "line": 151,
          "column": 2
        }
      }
    },
    "span": {
      "start": {
        "line": 138,
        "column": 30
      },
      "end": {
        "line": 138,
        "column": 31
      }
    },
    "replacement": "-",
    "genre": "BinaryOperator"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/uniswap/poolpricevec.rs",
    "function": {
      "function_name": "PoolPriceVec<'a>::donation",
      "return_type": "-> DonationResult",
      "span": {
        "start": {
          "line": 376,
          "column": 5
        },
        "end": {
          "line": 450,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 402,
        "column": 35
      },
      "end": {
        "line": 402,
        "column": 37
      }
    },
    "replacement": "<",
    "genre": "BinaryOperator"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/uniswap/poolprice.rs",
    "function": {
      "function_name": "PoolPrice<'a>::intersect_with_debt",
      "return_type": "-> eyre::Result<u128>",
      "span": {
        "start": {
          "line": 191,
          "column": 5
        },
        "end": {
          "line": 226,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 225,
        "column": 17
      },
      "end": {
        "line": 225,
        "column": 18
      }
    },
    "replacement": "-",
    "genre": "BinaryOperator"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/debt.rs",
    "function": {
      "function_name": "Debt::additional_t0_needed",
      "return_type": "-> u128",
      "span": {
        "start": {
          "line": 156,
          "column": 5
        },
        "end": {
          "line": 162,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 161,
        "column": 31
      },
      "end": {
        "line": 161,
        "column": 32
      }
    },
    "replacement": "/",
    "genre": "BinaryOperator"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/composite.rs",
    "function": {
      "function_name": "CompositeOrder<'a>::quantity",
      "return_type": "-> u128",
      "span": {
        "start": {
          "line": 86,
          "column": 5
        },
        "end": {
          "line": 111,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 109,
        "column": 19
      },
      "end": {
        "line": 109,
        "column": 20
      }
    },
    "replacement": "*",
    "genre": "BinaryOperator"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/uniswap/poolprice.rs",
    "function": {
      "function_name": "PoolPrice<'a>::order_to_target",
      "return_type": "-> Option<PoolPriceVec<'a>>",
      "span": {
        "start": {
          "line": 228,
          "column": 5
        },
        "end": {
          "line": 299,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 240,
        "column": 9
      },
      "end": {
        "line": 298,
        "column": 57
      }
    },
    "replacement": "Some(Default::default())",
    "genre": "FnValue"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/debt.rs",
    "function": {
      "function_name": "DebtType::t0_at_price",
      "return_type": "-> u128",
      "span": {
        "start": {
          "line": 64,
          "column": 5
        },
        "end": {
          "line": 73,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 67,
        "column": 9
      },
      "end": {
        "line": 72,
        "column": 63
      }
    },
    "replacement": "0",
    "genre": "FnValue"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/uniswap/liqrange.rs",
    "function": {
      "function_name": "LiqRangeRef<'a>::next",
      "return_type": "-> Option<Self>",
      "span": {
        "start": {
          "line": 127,
          "column": 5
        },
        "end": {
          "line": 132,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 128,
        "column": 9
      },
      "end": {
        "line": 131,
        "column": 10
      }
    },
    "replacement": "None",
    "genre": "FnValue"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/math/mod.rs",
    "function": {
      "function_name": "amm_debt_same_move_solve",
      "return_type": "-> u128",
      "span": {
        "start": {
          "line": 24,
          "column": 1
        },
        "end": {
          "line": 99,
          "column": 2
        }
      }
    },
    "span": {
      "start": {
        "line": 50,
        "column": 46
      },
      "end": {
        "line": 50,
        "column": 48
      }
    },
    "replacement": ">>",
    "genre": "BinaryOperator"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/debt.rs",
    "function": {
      "function_name": "Debt::dq_to_price",
      "return_type": "-> u128",
      "span": {
        "start": {
          "line": 305,
          "column": 5
        },
        "end": {
          "line": 315,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 313,
        "column": 24
      },
      "end": {
        "line": 313,
        "column": 25
      }
    },
    "replacement": "/",
    "genre": "BinaryOperator"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/uniswap/poolsnapshot.rs",
    "function": {
      "function_name": "PoolSnapshot::get_range_for_tick",
      "return_type": "-> Option<LiqRangeRef>",
      "span": {
        "start": {
          "line": 64,
          "column": 5
        },
        "end": {
          "line": 72,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 70,
        "column": 41
      },
      "end": {
        "line": 70,
        "column": 43
      }
    },
    "replacement": ">",
    "genre": "BinaryOperator"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/debt.rs",
    "function": {
      "function_name": "Debt::freed_t1",
      "return_type": "-> u128",
      "span": {
        "start": {
          "line": 249,
          "column": 5
        },
        "end": {
          "line": 267,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 254,
        "column": 9
      },
      "end": {
        "line": 266,
        "column": 10
      }
    },
    "replacement": "0",
    "genre": "FnValue"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/uniswap/poolpricevec.rs",
    "function": {
      "function_name": "PoolPriceVec<'a>::from_swap",
      "return_type": "-> eyre::Result<Self>",
      "span": {
        "start": {
          "line": 288,
          "column": 5
        },
        "end": {
          "line": 374,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 308,
        "column": 12
      },
      "end": {
        "line": 308,
        "column": 13
      }
    },
    "replacement": "",
    "genre": "UnaryOperator"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/sqrtprice.rs",
    "function": {
      "function_name": "SqrtPriceX96::as_f64",
      "return_type": "-> f64",
      "span": {
        "start": {
          "line": 20,
          "column": 5
        },
        "end": {
          "line": 31,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 25,
        "column": 9
      },
      "end": {
        "line": 30,
        "column": 12
      }
    },
    "replacement": "0.0",
    "genre": "FnValue"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/uniswap/poolprice.rs",
    "function": {
      "function_name": "PoolPrice<'a>::checked_new",
      "return_type": "-> Self",
      "span": {
        "start": {
          "line": 63,
          "column": 5
        },
        "end": {
          "line": 71,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 64,
        "column": 9
      },
      "end": {
        "line": 70,
        "column": 40
      }
    },
    "replacement": "Default::default()",
    "genre": "FnValue"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/uniswap/poolpricevec.rs",
    "function": {
      "function_name": "PoolPriceVec<'a>::steps",
      "return_type": "-> Option<&Vec<SwapStep>>",
      "span": {
        "start": {
          "line": 219,
          "column": 5
        },
        "end": {
          "line": 221,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 220,
        "column": 9
      },
      "end": {
        "line": 220,
        "column": 28
      }
    },
    "replacement": "Some(&vec![Default::default()])",
    "genre": "FnValue"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/debt.rs",
    "function": {
      "function_name": "Debt::dq_to_price",
      "return_type": "-> u128",
      "span": {
        "start": {
          "line": 305,
          "column": 5
        },
        "end": {
          "line": 315,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 308,
        "column": 9
      },
      "end": {
        "line": 314,
        "column": 10
      }
    },
    "replacement": "1",
    "genre": "FnValue"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/uniswap/poolsnapshot.rs",
    "function": {
      "function_name": "PoolSnapshot::ranges",
      "return_type": "-> Iter<LiqRange>",
      "span": {
        "start": {
          "line": 97,
          "column": 5
        },
        "end": {
          "line": 100,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 99,
        "column": 9
      },
      "end": {
        "line": 99,
        "column": 27
      }
    },
    "replacement": "Iter::new()",
    "genre": "FnValue"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/uniswap/mod.rs",
    "function": {
      "function_name": "Direction::sort_amounts",
      "return_type": "-> (T, T)",
      "span": {
        "start": {
          "line": 97,
          "column": 5
        },
        "end": {
          "line": 104,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 100,
        "column": 9
      },
      "end": {
        "line": 103,
        "column": 10
      }
    },
    "replacement": "(Default::default(), Default::default())",
    "genre": "FnValue"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/sqrtprice.rs",
    "function": {
      "function_name": "<impl From for U256>::from",
      "return_type": "-> Self",
      "span": {
        "start": {
          "line": 69,
          "column": 5
        },
        "end": {
          "line": 71,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 70,
        "column": 9
      },
      "end": {
        "line": 70,
        "column": 28
      }
    },
    "replacement": "Default::default()",
    "genre": "FnValue"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/debt.rs",
    "function": {
      "function_name": "<impl Add for DebtType>::add",
      "return_type": "-> Self::Output",
      "span": {
        "start": {
          "line": 99,
          "column": 5
        },
        "end": {
          "line": 110,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 102,
        "column": 75
      },
      "end": {
        "line": 102,
        "column": 76
      }
    },
    "replacement": "-",
    "genre": "BinaryOperator"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/math/mod.rs",
    "function": {
      "function_name": "quadratic_solve",
      "return_type": "-> (Option<Integer>, Option<Integer>)",
      "span": {
        "start": {
          "line": 153,
          "column": 1
        },
        "end": {
          "line": 187,
          "column": 2
        }
      }
    },
    "span": {
      "start": {
        "line": 161,
        "column": 46
      },
      "end": {
        "line": 161,
        "column": 47
      }
    },
    "replacement": "/",
    "genre": "BinaryOperator"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/uniswap/flags.rs",
    "function": {
      "function_name": "<impl BitOr for U160>::bitor",
      "return_type": "-> Self::Output",
      "span": {
        "start": {
          "line": 93,
          "column": 5
        },
        "end": {
          "line": 95,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 94,
        "column": 9
      },
      "end": {
        "line": 94,
        "column": 39
      }
    },
    "replacement": "Default::default()",
    "genre": "FnValue"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/mod.rs",
    "function": {
      "function_name": "<impl From for MatchingPrice>::from",
      "return_type": "-> Self",
      "span": {
        "start": {
          "line": 89,
          "column": 5
        },
        "end": {
          "line": 91,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 90,
        "column": 9
      },
      "end": {
        "line": 90,
        "column": 20
      }
    },
    "replacement": "Default::default()",
    "genre": "FnValue"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/math/mod.rs",
    "function": {
      "function_name": "amm_debt_same_move_solve",
      "return_type": "-> u128",
      "span": {
        "start": {
          "line": 24,
          "column": 1
        },
        "end": {
          "line": 99,
          "column": 2
        }
      }
    },
    "span": {
      "start": {
        "line": 84,
        "column": 40
      },
      "end": {
        "line": 84,
        "column": 42
      }
    },
    "replacement": "<",
    "genre": "BinaryOperator"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/uniswap/poolpricevec.rs",
    "function": {
      "function_name": "PoolPriceVec<'a>::from_swap",
      "return_type": "-> eyre::Result<Self>",
      "span": {
        "start": {
          "line": 288,
          "column": 5
        },
        "end": {
          "line": 374,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 312,
        "column": 25
      },
      "end": {
        "line": 312,
        "column": 26
      }
    },
    "replacement": "==",
    "genre": "BinaryOperator"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/math/mod.rs",
    "function": {
      "function_name": "resolve_precision",
      "return_type": "-> u128",
      "span": {
        "start": {
          "line": 189,
          "column": 1
        },
        "end": {
          "line": 195,
          "column": 2
        }
      }
    },
    "span": {
      "start": {
        "line": 190,
        "column": 5
      },
      "end": {
        "line": 194,
        "column": 27
      }
    },
    "replacement": "1",
    "genre": "FnValue"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/uniswap/flags.rs",
    "function": {
      "function_name": "<impl BitOr for U160>::bitor",
      "return_type": "-> Self::Output",
      "span": {
        "start": {
          "line": 93,
          "column": 5
        },
        "end": {
          "line": 95,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 94,
        "column": 14
      },
      "end": {
        "line": 94,
        "column": 15
      }
    },
    "replacement": "&",
    "genre": "BinaryOperator"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/sqrtprice.rs",
    "function": {
      "function_name": "SqrtPriceX96::from_float_price",
      "return_type": "-> Self",
      "span": {
        "start": {
          "line": 33,
          "column": 5
        },
        "end": {
          "line": 36,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 35,
        "column": 46
      },
      "end": {
        "line": 35,
        "column": 47
      }
    },
    "replacement": "+",
    "genre": "BinaryOperator"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/math/mod.rs",
    "function": {
      "function_name": "amm_debt_same_move_solve",
      "return_type": "-> u128",
      "span": {
        "start": {
          "line": 24,
          "column": 1
        },
        "end": {
          "line": 99,
          "column": 2
        }
      }
    },
    "span": {
      "start": {
        "line": 54,
        "column": 66
      },
      "end": {
        "line": 54,
        "column": 68
      }
    },
    "replacement": ">>",
    "genre": "BinaryOperator"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/uniswap/poolprice.rs",
    "function": {
      "function_name": "<impl Sub for PoolPrice<'a>>::sub",
      "return_type": "-> Self::Output",
      "span": {
        "start": {
          "line": 333,
          "column": 5
        },
        "end": {
          "line": 335,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 334,
        "column": 9
      },
      "end": {
        "line": 334,
        "column": 60
      }
    },
    "replacement": "Default::default()",
    "genre": "FnValue"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/debt.rs",
    "function": {
      "function_name": "DebtType::exact_in",
      "return_type": "-> Self",
      "span": {
        "start": {
          "line": 31,
          "column": 5
        },
        "end": {
          "line": 33,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 32,
        "column": 9
      },
      "end": {
        "line": 32,
        "column": 25
      }
    },
    "replacement": "Default::default()",
    "genre": "FnValue"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/composite.rs",
    "function": {
      "function_name": "CompositeOrder<'a>::has_amm",
      "return_type": "-> bool",
      "span": {
        "start": {
          "line": 29,
          "column": 5
        },
        "end": {
          "line": 31,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 30,
        "column": 9
      },
      "end": {
        "line": 30,
        "column": 27
      }
    },
    "replacement": "false",
    "genre": "FnValue"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/math/mod.rs",
    "function": {
      "function_name": "price_intersect_solve",
      "return_type": "-> Integer",
      "span": {
        "start": {
          "line": 101,
          "column": 1
        },
        "end": {
          "line": 151,
          "column": 2
        }
      }
    },
    "span": {
      "start": {
        "line": 122,
        "column": 61
      },
      "end": {
        "line": 122,
        "column": 63
      }
    },
    "replacement": ">>",
    "genre": "BinaryOperator"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/uniswap/poolsnapshot.rs",
    "function": {
      "function_name": "PoolSnapshot::ranges",
      "return_type": "-> Iter<LiqRange>",
      "span": {
        "start": {
          "line": 97,
          "column": 5
        },
        "end": {
          "line": 100,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 99,
        "column": 9
      },
      "end": {
        "line": 99,
        "column": 27
      }
    },
    "replacement": "Iter::from(Default::default())",
    "genre": "FnValue"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/composite.rs",
    "function": {
      "function_name": "CompositeOrder<'a>::find_closest_bound",
      "return_type": "-> Ray",
      "span": {
        "start": {
          "line": 66,
          "column": 5
        },
        "end": {
          "line": 79,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 67,
        "column": 9
      },
      "end": {
        "line": 78,
        "column": 10
      }
    },
    "replacement": "Default::default()",
    "genre": "FnValue"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/debt.rs",
    "function": {
      "function_name": "DebtType::magnitude",
      "return_type": "-> u128",
      "span": {
        "start": {
          "line": 54,
          "column": 5
        },
        "end": {
          "line": 58,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 55,
        "column": 9
      },
      "end": {
        "line": 57,
        "column": 10
      }
    },
    "replacement": "1",
    "genre": "FnValue"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/uniswap/poolpricevec.rs",
    "function": {
      "function_name": "PoolPriceVec<'a>::from_swap",
      "return_type": "-> eyre::Result<Self>",
      "span": {
        "start": {
          "line": 288,
          "column": 5
        },
        "end": {
          "line": 374,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 351,
        "column": 22
      },
      "end": {
        "line": 351,
        "column": 24
      }
    },
    "replacement": "-=",
    "genre": "BinaryOperator"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/composite.rs",
    "function": {
      "function_name": "CompositeOrder<'a>::t0_quantities",
      "return_type": "-> (Option<u128>, Option<u128>)",
      "span": {
        "start": {
          "line": 148,
          "column": 5
        },
        "end": {
          "line": 173,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 156,
        "column": 9
      },
      "end": {
        "line": 172,
        "column": 10
      }
    },
    "replacement": "(Some(1), Some(0))",
    "genre": "FnValue"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/uniswap/poolprice.rs",
    "function": {
      "function_name": "PoolPrice<'a>::d_t0",
      "return_type": "-> eyre::Result<Self>",
      "span": {
        "start": {
          "line": 85,
          "column": 5
        },
        "end": {
          "line": 171,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 89,
        "column": 21
      },
      "end": {
        "line": 89,
        "column": 23
      }
    },
    "replacement": "!=",
    "genre": "BinaryOperator"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/debt.rs",
    "function": {
      "function_name": "<impl Add for DebtType>::add",
      "return_type": "-> Self::Output",
      "span": {
        "start": {
          "line": 99,
          "column": 5
        },
        "end": {
          "line": 110,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 108,
        "column": 77
      },
      "end": {
        "line": 108,
        "column": 78
      }
    },
    "replacement": "/",
    "genre": "BinaryOperator"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/debt.rs",
    "function": {
      "function_name": "Debt::additional_t0_needed",
      "return_type": "-> u128",
      "span": {
        "start": {
          "line": 156,
          "column": 5
        },
        "end": {
          "line": 162,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 159,
        "column": 44
      },
      "end": {
        "line": 159,
        "column": 45
      }
    },
    "replacement": "-",
    "genre": "BinaryOperator"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/uniswap/poolprice.rs",
    "function": {
      "function_name": "PoolPrice<'a>::checked_new",
      "return_type": "-> Self",
      "span": {
        "start": {
          "line": 63,
          "column": 5
        },
        "end": {
          "line": 71,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 64,
        "column": 48
      },
      "end": {
        "line": 64,
        "column": 49
      }
    },
    "replacement": "<",
    "genre": "BinaryOperator"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/uniswap/liqrange.rs",
    "function": {
      "function_name": "LiqRange::lower_tick",
      "return_type": "-> i32",
      "span": {
        "start": {
          "line": 41,
          "column": 5
        },
        "end": {
          "line": 43,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 42,
        "column": 9
      },
      "end": {
        "line": 42,
        "column": 24
      }
    },
    "replacement": "0",
    "genre": "FnValue"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/uniswap/poolpricevec.rs",
    "function": {
      "function_name": "PoolPriceVec<'a>::quantity",
      "return_type": "-> (u128, u128, OrderPrice)",
      "span": {
        "start": {
          "line": 496,
          "column": 5
        },
        "end": {
          "line": 508,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 501,
        "column": 61
      },
      "end": {
        "line": 501,
        "column": 62
      }
    },
    "replacement": ">",
    "genre": "BinaryOperator"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/uniswap/poolprice.rs",
    "function": {
      "function_name": "PoolPrice<'a>::as_float",
      "return_type": "-> f64",
      "span": {
        "start": {
          "line": 315,
          "column": 5
        },
        "end": {
          "line": 319,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 318,
        "column": 9
      },
      "end": {
        "line": 318,
        "column": 28
      }
    },
    "replacement": "1.0",
    "genre": "FnValue"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/uniswap/liqrange.rs",
    "function": {
      "function_name": "LiqRangeRef<'a>::price_in_range",
      "return_type": "-> bool",
      "span": {
        "start": {
          "line": 84,
          "column": 5
        },
        "end": {
          "line": 91,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 87,
        "column": 57
      },
      "end": {
        "line": 87,
        "column": 58
      }
    },
    "replacement": "==",
    "genre": "BinaryOperator"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/math/mod.rs",
    "function": {
      "function_name": "amm_debt_same_move_solve",
      "return_type": "-> u128",
      "span": {
        "start": {
          "line": 24,
          "column": 1
        },
        "end": {
          "line": 99,
          "column": 2
        }
      }
    },
    "span": {
      "start": {
        "line": 54,
        "column": 53
      },
      "end": {
        "line": 54,
        "column": 54
      }
    },
    "replacement": "*",
    "genre": "BinaryOperator"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/uniswap/liqrange.rs",
    "function": {
      "function_name": "LiqRangeRef<'a>::end_price",
      "return_type": "-> PoolPrice<'a>",
      "span": {
        "start": {
          "line": 115,
          "column": 5
        },
        "end": {
          "line": 119,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 117,
        "column": 9
      },
      "end": {
        "line": 118,
        "column": 90
      }
    },
    "replacement": "Default::default()",
    "genre": "FnValue"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/sqrtprice.rs",
    "function": {
      "function_name": "SqrtPriceX96::at_tick",
      "return_type": "-> eyre::Result<Self>",
      "span": {
        "start": {
          "line": 38,
          "column": 5
        },
        "end": {
          "line": 41,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 40,
        "column": 9
      },
      "end": {
        "line": 40,
        "column": 54
      }
    },
    "replacement": "Ok(Default::default())",
    "genre": "FnValue"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/uniswap/poolpricevec.rs",
    "function": {
      "function_name": "PoolPriceVec<'a>::to_price",
      "return_type": "-> Option<Self>",
      "span": {
        "start": {
          "line": 453,
          "column": 5
        },
        "end": {
          "line": 474,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 460,
        "column": 50
      },
      "end": {
        "line": 460,
        "column": 52
      }
    },
    "replacement": "!=",
    "genre": "BinaryOperator"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/debt.rs",
    "function": {
      "function_name": "Debt::slack",
      "return_type": "-> u128",
      "span": {
        "start": {
          "line": 171,
          "column": 5
        },
        "end": {
          "line": 176,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 175,
        "column": 9
      },
      "end": {
        "line": 175,
        "column": 54
      }
    },
    "replacement": "1",
    "genre": "FnValue"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/tokens.rs",
    "function": {
      "function_name": "TokenQuantity::as_u256",
      "return_type": "-> U256",
      "span": {
        "start": {
          "line": 93,
          "column": 5
        },
        "end": {
          "line": 97,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 94,
        "column": 9
      },
      "end": {
        "line": 96,
        "column": 10
      }
    },
    "replacement": "Default::default()",
    "genre": "FnValue"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/uniswap/liqrange.rs",
    "function": {
      "function_name": "LiqRange::liquidity",
      "return_type": "-> u128",
      "span": {
        "start": {
          "line": 49,
          "column": 5
        },
        "end": {
          "line": 51,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 50,
        "column": 9
      },
      "end": {
        "line": 50,
        "column": 23
      }
    },
    "replacement": "1",
    "genre": "FnValue"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/uniswap/poolprice.rs",
    "function": {
      "function_name": "<impl PartialEq for PoolPrice<'a>>::eq",
      "return_type": "-> bool",
      "span": {
        "start": {
          "line": 45,
          "column": 5
        },
        "end": {
          "line": 47,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 46,
        "column": 9
      },
      "end": {
        "line": 46,
        "column": 73
      }
    },
    "replacement": "false",
    "genre": "FnValue"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/uniswap/poolsnapshot.rs",
    "function": {
      "function_name": "PoolSnapshot::liquidity_at_tick",
      "return_type": "-> Option<u128>",
      "span": {
        "start": {
          "line": 127,
          "column": 5
        },
        "end": {
          "line": 129,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 128,
        "column": 9
      },
      "end": {
        "line": 128,
        "column": 69
      }
    },
    "replacement": "None",
    "genre": "FnValue"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/debt.rs",
    "function": {
      "function_name": "<impl Add for DebtType>::add",
      "return_type": "-> Self::Output",
      "span": {
        "start": {
          "line": 99,
          "column": 5
        },
        "end": {
          "line": 110,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 103,
        "column": 78
      },
      "end": {
        "line": 103,
        "column": 79
      }
    },
    "replacement": "*",
    "genre": "BinaryOperator"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/uniswap/mod.rs",
    "function": {
      "function_name": "Direction::is_bid",
      "return_type": "-> bool",
      "span": {
        "start": {
          "line": 67,
          "column": 5
        },
        "end": {
          "line": 69,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 68,
        "column": 9
      },
      "end": {
        "line": 68,
        "column": 39
      }
    },
    "replacement": "false",
    "genre": "FnValue"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/debt.rs",
    "function": {
      "function_name": "Debt::additional_t0_needed",
      "return_type": "-> u128",
      "span": {
        "start": {
          "line": 156,
          "column": 5
        },
        "end": {
          "line": 162,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 159,
        "column": 9
      },
      "end": {
        "line": 161,
        "column": 50
      }
    },
    "replacement": "0",
    "genre": "FnValue"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/debt.rs",
    "function": {
      "function_name": "<impl PartialOrd for Debt>::partial_cmp",
      "return_type": "-> Option<std::cmp::Ordering>",
      "span": {
        "start": {
          "line": 427,
          "column": 5
        },
        "end": {
          "line": 433,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 428,
        "column": 9
      },
      "end": {
        "line": 432,
        "column": 10
      }
    },
    "replacement": "None",
    "genre": "FnValue"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/uniswap/liqrange.rs",
    "function": {
      "function_name": "LiqRangeRef<'a>::price_in_range",
      "return_type": "-> bool",
      "span": {
        "start": {
          "line": 84,
          "column": 5
        },
        "end": {
          "line": 91,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 86,
        "column": 9
      },
      "end": {
        "line": 90,
        "column": 10
      }
    },
    "replacement": "true",
    "genre": "FnValue"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/uniswap/poolpricevec.rs",
    "function": {
      "function_name": "PoolPriceVec<'a>::from_steps",
      "return_type": "-> eyre::Result<Self>",
      "span": {
        "start": {
          "line": 277,
          "column": 5
        },
        "end": {
          "line": 286,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 282,
        "column": 9
      },
      "end": {
        "line": 285,
        "column": 88
      }
    },
    "replacement": "Ok(Default::default())",
    "genre": "FnValue"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/math/mod.rs",
    "function": {
      "function_name": "amm_debt_same_move_solve",
      "return_type": "-> u128",
      "span": {
        "start": {
          "line": 24,
          "column": 1
        },
        "end": {
          "line": 99,
          "column": 2
        }
      }
    },
    "span": {
      "start": {
        "line": 74,
        "column": 7
      },
      "end": {
        "line": 74,
        "column": 9
      }
    },
    "replacement": ">>",
    "genre": "BinaryOperator"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/debt.rs",
    "function": {
      "function_name": "Debt::calc_proportion",
      "return_type": "-> u128",
      "span": {
        "start": {
          "line": 317,
          "column": 5
        },
        "end": {
          "line": 360,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 337,
        "column": 34
      },
      "end": {
        "line": 337,
        "column": 35
      }
    },
    "replacement": "+",
    "genre": "BinaryOperator"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/uniswap/poolpricevec.rs",
    "function": {
      "function_name": "PoolPriceVec<'a>::output",
      "return_type": "-> u128",
      "span": {
        "start": {
          "line": 211,
          "column": 5
        },
        "end": {
          "line": 217,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 212,
        "column": 9
      },
      "end": {
        "line": 216,
        "column": 10
      }
    },
    "replacement": "0",
    "genre": "FnValue"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/uniswap/poolprice.rs",
    "function": {
      "function_name": "PoolPrice<'a>::order_to_target",
      "return_type": "-> Option<PoolPriceVec<'a>>",
      "span": {
        "start": {
          "line": 228,
          "column": 5
        },
        "end": {
          "line": 299,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 249,
        "column": 22
      },
      "end": {
        "line": 249,
        "column": 24
      }
    },
    "replacement": "<",
    "genre": "BinaryOperator"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/uniswap/poolpricevec.rs",
    "function": {
      "function_name": "SwapStep<'a>::input",
      "return_type": "-> u128",
      "span": {
        "start": {
          "line": 157,
          "column": 5
        },
        "end": {
          "line": 163,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 158,
        "column": 9
      },
      "end": {
        "line": 162,
        "column": 10
      }
    },
    "replacement": "0",
    "genre": "FnValue"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/debt.rs",
    "function": {
      "function_name": "Debt::freed_t0",
      "return_type": "-> u128",
      "span": {
        "start": {
          "line": 231,
          "column": 5
        },
        "end": {
          "line": 247,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 234,
        "column": 9
      },
      "end": {
        "line": 246,
        "column": 34
      }
    },
    "replacement": "1",
    "genre": "FnValue"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/math/mod.rs",
    "function": {
      "function_name": "price_intersect_solve",
      "return_type": "-> Integer",
      "span": {
        "start": {
          "line": 101,
          "column": 1
        },
        "end": {
          "line": 151,
          "column": 2
        }
      }
    },
    "span": {
      "start": {
        "line": 138,
        "column": 22
      },
      "end": {
        "line": 138,
        "column": 24
      }
    },
    "replacement": ">>",
    "genre": "BinaryOperator"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/math/mod.rs",
    "function": {
      "function_name": "quadratic_solve",
      "return_type": "-> (Option<Integer>, Option<Integer>)",
      "span": {
        "start": {
          "line": 153,
          "column": 1
        },
        "end": {
          "line": 187,
          "column": 2
        }
      }
    },
    "span": {
      "start": {
        "line": 171,
        "column": 53
      },
      "end": {
        "line": 171,
        "column": 55
      }
    },
    "replacement": "!=",
    "genre": "BinaryOperator"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/composite.rs",
    "function": {
      "function_name": "CompositeOrder<'a>::t0_quantities",
      "return_type": "-> (Option<u128>, Option<u128>)",
      "span": {
        "start": {
          "line": 148,
          "column": 5
        },
        "end": {
          "line": 173,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 156,
        "column": 9
      },
      "end": {
        "line": 172,
        "column": 10
      }
    },
    "replacement": "(Some(1), None)",
    "genre": "FnValue"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/debt.rs",
    "function": {
      "function_name": "DebtType::magnitude",
      "return_type": "-> u128",
      "span": {
        "start": {
          "line": 54,
          "column": 5
        },
        "end": {
          "line": 58,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 55,
        "column": 9
      },
      "end": {
        "line": 57,
        "column": 10
      }
    },
    "replacement": "0",
    "genre": "FnValue"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/math/mod.rs",
    "function": {
      "function_name": "amm_debt_same_move_solve",
      "return_type": "-> u128",
      "span": {
        "start": {
          "line": 24,
          "column": 1
        },
        "end": {
          "line": 99,
          "column": 2
        }
      }
    },
    "span": {
      "start": {
        "line": 52,
        "column": 24
      },
      "end": {
        "line": 52,
        "column": 25
      }
    },
    "replacement": "+",
    "genre": "BinaryOperator"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/composite.rs",
    "function": {
      "function_name": "CompositeOrder<'a>::negative_quantity_t1",
      "return_type": "-> u128",
      "span": {
        "start": {
          "line": 128,
          "column": 5
        },
        "end": {
          "line": 140,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 130,
        "column": 9
      },
      "end": {
        "line": 139,
        "column": 10
      }
    },
    "replacement": "1",
    "genre": "FnValue"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/sqrtprice.rs",
    "function": {
      "function_name": "<impl From for SqrtPriceX96>::from",
      "return_type": "-> Self",
      "span": {
        "start": {
          "line": 87,
          "column": 5
        },
        "end": {
          "line": 95,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 88,
        "column": 9
      },
      "end": {
        "line": 94,
        "column": 21
      }
    },
    "replacement": "Default::default()",
    "genre": "FnValue"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/composite.rs",
    "function": {
      "function_name": "CompositeOrder<'a>::amm",
      "return_type": "-> Option<&PoolPrice<'a>>",
      "span": {
        "start": {
          "line": 37,
          "column": 5
        },
        "end": {
          "line": 39,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 38,
        "column": 9
      },
      "end": {
        "line": 38,
        "column": 26
      }
    },
    "replacement": "Some(&Default::default())",
    "genre": "FnValue"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/uniswap/poolsnapshot.rs",
    "function": {
      "function_name": "PoolSnapshot::at_price",
      "return_type": "-> eyre::Result<PoolPrice>",
      "span": {
        "start": {
          "line": 111,
          "column": 5
        },
        "end": {
          "line": 117,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 112,
        "column": 9
      },
      "end": {
        "line": 116,
        "column": 56
      }
    },
    "replacement": "Ok(Default::default())",
    "genre": "FnValue"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/composite.rs",
    "function": {
      "function_name": "CompositeOrder<'a>::debt_direction",
      "return_type": "-> Option<Direction>",
      "span": {
        "start": {
          "line": 81,
          "column": 5
        },
        "end": {
          "line": 84,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 82,
        "column": 9
      },
      "end": {
        "line": 83,
        "column": 70
      }
    },
    "replacement": "Some(Default::default())",
    "genre": "FnValue"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/debt.rs",
    "function": {
      "function_name": "Debt::valid_for_price",
      "return_type": "-> bool",
      "span": {
        "start": {
          "line": 205,
          "column": 5
        },
        "end": {
          "line": 216,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 213,
        "column": 58
      },
      "end": {
        "line": 213,
        "column": 60
      }
    },
    "replacement": ">",
    "genre": "BinaryOperator"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/uniswap/poolprice.rs",
    "function": {
      "function_name": "PoolPrice<'a>::checked_new",
      "return_type": "-> Self",
      "span": {
        "start": {
          "line": 63,
          "column": 5
        },
        "end": {
          "line": 71,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 64,
        "column": 17
      },
      "end": {
        "line": 64,
        "column": 18
      }
    },
    "replacement": ">",
    "genre": "BinaryOperator"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/uniswap/mod.rs",
    "function": {
      "function_name": "Direction::is_bid",
      "return_type": "-> bool",
      "span": {
        "start": {
          "line": 67,
          "column": 5
        },
        "end": {
          "line": 69,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 68,
        "column": 9
      },
      "end": {
        "line": 68,
        "column": 39
      }
    },
    "replacement": "true",
    "genre": "FnValue"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/uniswap/poolprice.rs",
    "function": {
      "function_name": "PoolPrice<'a>::order_to_target",
      "return_type": "-> Option<PoolPriceVec<'a>>",
      "span": {
        "start": {
          "line": 228,
          "column": 5
        },
        "end": {
          "line": 299,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 240,
        "column": 9
      },
      "end": {
        "line": 298,
        "column": 57
      }
    },
    "replacement": "None",
    "genre": "FnValue"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/uniswap/poolpricevec.rs",
    "function": {
      "function_name": "SwapStep<'a>::for_price_range",
      "return_type": "-> eyre::Result<Self>",
      "span": {
        "start": {
          "line": 42,
          "column": 5
        },
        "end": {
          "line": 78,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 71,
        "column": 38
      },
      "end": {
        "line": 71,
        "column": 39
      }
    },
    "replacement": ">",
    "genre": "BinaryOperator"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/uniswap/poolprice.rs",
    "function": {
      "function_name": "PoolPrice<'a>::as_ray",
      "return_type": "-> Ray",
      "span": {
        "start": {
          "line": 305,
          "column": 5
        },
        "end": {
          "line": 308,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 307,
        "column": 9
      },
      "end": {
        "line": 307,
        "column": 30
      }
    },
    "replacement": "Default::default()",
    "genre": "FnValue"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/debt.rs",
    "function": {
      "function_name": "Debt::magnitude",
      "return_type": "-> u128",
      "span": {
        "start": {
          "line": 148,
          "column": 5
        },
        "end": {
          "line": 150,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 149,
        "column": 9
      },
      "end": {
        "line": 149,
        "column": 35
      }
    },
    "replacement": "0",
    "genre": "FnValue"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/debt.rs",
    "function": {
      "function_name": "Debt::partial_fill_t1",
      "return_type": "-> Self",
      "span": {
        "start": {
          "line": 287,
          "column": 5
        },
        "end": {
          "line": 295,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 290,
        "column": 9
      },
      "end": {
        "line": 294,
        "column": 57
      }
    },
    "replacement": "Default::default()",
    "genre": "FnValue"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/uniswap/poolprice.rs",
    "function": {
      "function_name": "PoolPrice<'a>::d_t0",
      "return_type": "-> eyre::Result<Self>",
      "span": {
        "start": {
          "line": 85,
          "column": 5
        },
        "end": {
          "line": 171,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 142,
        "column": 39
      },
      "end": {
        "line": 142,
        "column": 40
      }
    },
    "replacement": ">",
    "genre": "BinaryOperator"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/uniswap/flags.rs",
    "function": {
      "function_name": "<impl BitOr for UniswapFlags>::bitor",
      "return_type": "-> Self::Output",
      "span": {
        "start": {
          "line": 85,
          "column": 5
        },
        "end": {
          "line": 87,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 86,
        "column": 9
      },
      "end": {
        "line": 86,
        "column": 59
      }
    },
    "replacement": "Default::default()",
    "genre": "FnValue"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/debt.rs",
    "function": {
      "function_name": "<impl Add for DebtType>::add",
      "return_type": "-> Self::Output",
      "span": {
        "start": {
          "line": 99,
          "column": 5
        },
        "end": {
          "line": 110,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 105,
        "column": 62
      },
      "end": {
        "line": 105,
        "column": 63
      }
    },
    "replacement": "==",
    "genre": "BinaryOperator"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/composite.rs",
    "function": {
      "function_name": "CompositeOrder<'a>::partial_fill",
      "return_type": "-> Self",
      "span": {
        "start": {
          "line": 175,
          "column": 5
        },
        "end": {
          "line": 200,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 182,
        "column": 9
      },
      "end": {
        "line": 199,
        "column": 77
      }
    },
    "replacement": "Default::default()",
    "genre": "FnValue"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/math/mod.rs",
    "function": {
      "function_name": "max_t1_for_t0",
      "return_type": "-> u128",
      "span": {
        "start": {
          "line": 206,
          "column": 1
        },
        "end": {
          "line": 214,
          "column": 2
        }
      }
    },
    "span": {
      "start": {
        "line": 209,
        "column": 50
      },
      "end": {
        "line": 209,
        "column": 51
      }
    },
    "replacement": "*",
    "genre": "BinaryOperator"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/debt.rs",
    "function": {
      "function_name": "Debt::slack",
      "return_type": "-> u128",
      "span": {
        "start": {
          "line": 171,
          "column": 5
        },
        "end": {
          "line": 176,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 175,
        "column": 9
      },
      "end": {
        "line": 175,
        "column": 54
      }
    },
    "replacement": "0",
    "genre": "FnValue"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/uniswap/poolprice.rs",
    "function": {
      "function_name": "PoolPrice<'a>::d_t0",
      "return_type": "-> eyre::Result<Self>",
      "span": {
        "start": {
          "line": 85,
          "column": 5
        },
        "end": {
          "line": 171,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 142,
        "column": 39
      },
      "end": {
        "line": 142,
        "column": 40
      }
    },
    "replacement": "==",
    "genre": "BinaryOperator"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/uniswap/liqrange.rs",
    "function": {
      "function_name": "<impl PartialEq for LiqRangeRef<'a>>::eq",
      "return_type": "-> bool",
      "span": {
        "start": {
          "line": 70,
          "column": 5
        },
        "end": {
          "line": 74,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 73,
        "column": 13
      },
      "end": {
        "line": 73,
        "column": 15
      }
    },
    "replacement": "||",
    "genre": "BinaryOperator"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/math/mod.rs",
    "function": {
      "function_name": "amm_debt_same_move_solve",
      "return_type": "-> u128",
      "span": {
        "start": {
          "line": 24,
          "column": 1
        },
        "end": {
          "line": 99,
          "column": 2
        }
      }
    },
    "span": {
      "start": {
        "line": 83,
        "column": 39
      },
      "end": {
        "line": 83,
        "column": 41
      }
    },
    "replacement": ">",
    "genre": "BinaryOperator"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/uniswap/liqrange.rs",
    "function": {
      "function_name": "<impl PartialEq for LiqRangeRef<'a>>::eq",
      "return_type": "-> bool",
      "span": {
        "start": {
          "line": 70,
          "column": 5
        },
        "end": {
          "line": 74,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 71,
        "column": 9
      },
      "end": {
        "line": 73,
        "column": 49
      }
    },
    "replacement": "false",
    "genre": "FnValue"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/uniswap/poolsnapshot.rs",
    "function": {
      "function_name": "PoolSnapshot::ranges",
      "return_type": "-> Iter<LiqRange>",
      "span": {
        "start": {
          "line": 97,
          "column": 5
        },
        "end": {
          "line": 100,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 99,
        "column": 9
      },
      "end": {
        "line": 99,
        "column": 27
      }
    },
    "replacement": "Iter::from_iter([Default::default()])",
    "genre": "FnValue"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/math/mod.rs",
    "function": {
      "function_name": "amm_debt_same_move_solve",
      "return_type": "-> u128",
      "span": {
        "start": {
          "line": 24,
          "column": 1
        },
        "end": {
          "line": 99,
          "column": 2
        }
      }
    },
    "span": {
      "start": {
        "line": 54,
        "column": 40
      },
      "end": {
        "line": 54,
        "column": 41
      }
    },
    "replacement": "+",
    "genre": "BinaryOperator"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/sqrtprice.rs",
    "function": {
      "function_name": "SqrtPriceX96::max_at_tick",
      "return_type": "-> eyre::Result<Self>",
      "span": {
        "start": {
          "line": 43,
          "column": 5
        },
        "end": {
          "line": 47,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 46,
        "column": 51
      },
      "end": {
        "line": 46,
        "column": 52
      }
    },
    "replacement": "*",
    "genre": "BinaryOperator"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/composite.rs",
    "function": {
      "function_name": "CompositeOrder<'a>::has_amm",
      "return_type": "-> bool",
      "span": {
        "start": {
          "line": 29,
          "column": 5
        },
        "end": {
          "line": 31,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 30,
        "column": 9
      },
      "end": {
        "line": 30,
        "column": 27
      }
    },
    "replacement": "true",
    "genre": "FnValue"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/uniswap/poolprice.rs",
    "function": {
      "function_name": "PoolPrice<'a>::d_t0",
      "return_type": "-> eyre::Result<Self>",
      "span": {
        "start": {
          "line": 85,
          "column": 5
        },
        "end": {
          "line": 171,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 89,
        "column": 9
      },
      "end": {
        "line": 170,
        "column": 22
      }
    },
    "replacement": "Ok(Default::default())",
    "genre": "FnValue"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/debt.rs",
    "function": {
      "function_name": "Debt::calc_proportion",
      "return_type": "-> u128",
      "span": {
        "start": {
          "line": 317,
          "column": 5
        },
        "end": {
          "line": 360,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 333,
        "column": 33
      },
      "end": {
        "line": 333,
        "column": 35
      }
    },
    "replacement": ">>",
    "genre": "BinaryOperator"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/uniswap/poolpricevec.rs",
    "function": {
      "function_name": "PoolPriceVec<'a>::donation",
      "return_type": "-> DonationResult",
      "span": {
        "start": {
          "line": 376,
          "column": 5
        },
        "end": {
          "line": 450,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 432,
        "column": 36
      },
      "end": {
        "line": 432,
        "column": 37
      }
    },
    "replacement": "==",
    "genre": "BinaryOperator"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/mod.rs",
    "function": {
      "function_name": "const_2_192",
      "return_type": "-> &'static Natural",
      "span": {
        "start": {
          "line": 37,
          "column": 1
        },
        "end": {
          "line": 40,
          "column": 2
        }
      }
    },
    "span": {
      "start": {
        "line": 38,
        "column": 5
      },
      "end": {
        "line": 39,
        "column": 56
      }
    },
    "replacement": "&Default::default()",
    "genre": "FnValue"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/uniswap/poolpricevec.rs",
    "function": {
      "function_name": "SwapStep<'a>::avg_price",
      "return_type": "-> Ray",
      "span": {
        "start": {
          "line": 149,
          "column": 5
        },
        "end": {
          "line": 151,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 150,
        "column": 9
      },
      "end": {
        "line": 150,
        "column": 70
      }
    },
    "replacement": "Default::default()",
    "genre": "FnValue"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/uniswap/poolpricevec.rs",
    "function": {
      "function_name": "PoolPriceVec<'a>::donation",
      "return_type": "-> DonationResult",
      "span": {
        "start": {
          "line": 376,
          "column": 5
        },
        "end": {
          "line": 450,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 396,
        "column": 40
      },
      "end": {
        "line": 396,
        "column": 41
      }
    },
    "replacement": "+",
    "genre": "BinaryOperator"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/uniswap/liqrange.rs",
    "function": {
      "function_name": "<impl Deref for LiqRangeRef<'a>>::deref",
      "return_type": "-> &Self::Target",
      "span": {
        "start": {
          "line": 64,
          "column": 5
        },
        "end": {
          "line": 66,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 65,
        "column": 9
      },
      "end": {
        "line": 65,
        "column": 19
      }
    },
    "replacement": "&Default::default()",
    "genre": "FnValue"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/sqrtprice.rs",
    "function": {
      "function_name": "SqrtPriceX96::as_price_x192",
      "return_type": "-> U320",
      "span": {
        "start": {
          "line": 53,
          "column": 5
        },
        "end": {
          "line": 57,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 56,
        "column": 9
      },
      "end": {
        "line": 56,
        "column": 36
      }
    },
    "replacement": "Default::default()",
    "genre": "FnValue"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/uniswap/poolpricevec.rs",
    "function": {
      "function_name": "SwapStep<'a>::from_prices",
      "return_type": "-> eyre::Result<Self>",
      "span": {
        "start": {
          "line": 95,
          "column": 5
        },
        "end": {
          "line": 105,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 98,
        "column": 9
      },
      "end": {
        "line": 104,
        "column": 68
      }
    },
    "replacement": "Ok(Default::default())",
    "genre": "FnValue"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/uniswap/poolpricevec.rs",
    "function": {
      "function_name": "SwapStep<'a>::output",
      "return_type": "-> u128",
      "span": {
        "start": {
          "line": 165,
          "column": 5
        },
        "end": {
          "line": 171,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 166,
        "column": 9
      },
      "end": {
        "line": 170,
        "column": 10
      }
    },
    "replacement": "1",
    "genre": "FnValue"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/composite.rs",
    "function": {
      "function_name": "CompositeOrder<'a>::bound",
      "return_type": "-> Option<Ray>",
      "span": {
        "start": {
          "line": 41,
          "column": 5
        },
        "end": {
          "line": 43,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 42,
        "column": 9
      },
      "end": {
        "line": 42,
        "column": 25
      }
    },
    "replacement": "Some(Default::default())",
    "genre": "FnValue"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/uniswap/poolprice.rs",
    "function": {
      "function_name": "PoolPrice<'a>::intersect_with_debt",
      "return_type": "-> eyre::Result<u128>",
      "span": {
        "start": {
          "line": 191,
          "column": 5
        },
        "end": {
          "line": 226,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 196,
        "column": 9
      },
      "end": {
        "line": 225,
        "column": 27
      }
    },
    "replacement": "Ok(0)",
    "genre": "FnValue"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/debt.rs",
    "function": {
      "function_name": "<impl Add for DebtType>::add",
      "return_type": "-> Self::Output",
      "span": {
        "start": {
          "line": 99,
          "column": 5
        },
        "end": {
          "line": 110,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 107,
        "column": 62
      },
      "end": {
        "line": 107,
        "column": 63
      }
    },
    "replacement": "==",
    "genre": "BinaryOperator"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/uniswap/poolprice.rs",
    "function": {
      "function_name": "PoolPrice<'a>::d_t0",
      "return_type": "-> eyre::Result<Self>",
      "span": {
        "start": {
          "line": 85,
          "column": 5
        },
        "end": {
          "line": 171,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 147,
        "column": 38
      },
      "end": {
        "line": 147,
        "column": 39
      }
    },
    "replacement": ">",
    "genre": "BinaryOperator"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/uniswap/poolprice.rs",
    "function": {
      "function_name": "PoolPrice<'a>::checked_new",
      "return_type": "-> Self",
      "span": {
        "start": {
          "line": 63,
          "column": 5
        },
        "end": {
          "line": 71,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 64,
        "column": 17
      },
      "end": {
        "line": 64,
        "column": 18
      }
    },
    "replacement": "==",
    "genre": "BinaryOperator"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/debt.rs",
    "function": {
      "function_name": "Debt::valid_for_price",
      "return_type": "-> bool",
      "span": {
        "start": {
          "line": 205,
          "column": 5
        },
        "end": {
          "line": 216,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 213,
        "column": 43
      },
      "end": {
        "line": 213,
        "column": 44
      }
    },
    "replacement": "==",
    "genre": "BinaryOperator"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/mod.rs",
    "function": {
      "function_name": "<impl From for MatchingPrice>::from",
      "return_type": "-> Self",
      "span": {
        "start": {
          "line": 83,
          "column": 5
        },
        "end": {
          "line": 85,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 84,
        "column": 9
      },
      "end": {
        "line": 84,
        "column": 21
      }
    },
    "replacement": "Default::default()",
    "genre": "FnValue"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/composite.rs",
    "function": {
      "function_name": "CompositeOrder<'a>::find_closest_bound",
      "return_type": "-> Ray",
      "span": {
        "start": {
          "line": 66,
          "column": 5
        },
        "end": {
          "line": 79,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 71,
        "column": 28
      },
      "end": {
        "line": 71,
        "column": 29
      }
    },
    "replacement": "==",
    "genre": "BinaryOperator"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/uniswap/flags.rs",
    "function": {
      "function_name": "UniswapFlags::mask",
      "return_type": "-> U160",
      "span": {
        "start": {
          "line": 55,
          "column": 5
        },
        "end": {
          "line": 57,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 56,
        "column": 34
      },
      "end": {
        "line": 56,
        "column": 35
      }
    },
    "replacement": "/",
    "genre": "BinaryOperator"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/uniswap/poolpricevec.rs",
    "function": {
      "function_name": "PoolPriceVec<'a>::donation",
      "return_type": "-> DonationResult",
      "span": {
        "start": {
          "line": 376,
          "column": 5
        },
        "end": {
          "line": 450,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 429,
        "column": 33
      },
      "end": {
        "line": 429,
        "column": 34
      }
    },
    "replacement": "==",
    "genre": "BinaryOperator"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/uniswap/poolprice.rs",
    "function": {
      "function_name": "PoolPrice<'a>::d_t0",
      "return_type": "-> eyre::Result<Self>",
      "span": {
        "start": {
          "line": 85,
          "column": 5
        },
        "end": {
          "line": 171,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 157,
        "column": 54
      },
      "end": {
        "line": 157,
        "column": 56
      }
    },
    "replacement": "/=",
    "genre": "BinaryOperator"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/uniswap/flags.rs",
    "function": {
      "function_name": "<impl BitOr for U160>::bitor",
      "return_type": "-> Self::Output",
      "span": {
        "start": {
          "line": 93,
          "column": 5
        },
        "end": {
          "line": 95,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 94,
        "column": 14
      },
      "end": {
        "line": 94,
        "column": 15
      }
    },
    "replacement": "^",
    "genre": "BinaryOperator"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/math/mod.rs",
    "function": {
      "function_name": "amm_debt_same_move_solve",
      "return_type": "-> u128",
      "span": {
        "start": {
          "line": 24,
          "column": 1
        },
        "end": {
          "line": 99,
          "column": 2
        }
      }
    },
    "span": {
      "start": {
        "line": 54,
        "column": 40
      },
      "end": {
        "line": 54,
        "column": 41
      }
    },
    "replacement": "/",
    "genre": "BinaryOperator"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/tokens.rs",
    "function": {
      "function_name": "<impl Deref for TokenQuantity>::deref",
      "return_type": "-> &Self::Target",
      "span": {
        "start": {
          "line": 16,
          "column": 5
        },
        "end": {
          "line": 20,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 17,
        "column": 9
      },
      "end": {
        "line": 19,
        "column": 10
      }
    },
    "replacement": "&Default::default()",
    "genre": "FnValue"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/uniswap/liqrange.rs",
    "function": {
      "function_name": "LiqRangeRef<'a>::end_tick",
      "return_type": "-> Tick",
      "span": {
        "start": {
          "line": 100,
          "column": 5
        },
        "end": {
          "line": 107,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 103,
        "column": 9
      },
      "end": {
        "line": 106,
        "column": 10
      }
    },
    "replacement": "Default::default()",
    "genre": "FnValue"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/uniswap/poolpricevec.rs",
    "function": {
      "function_name": "SwapStep<'a>::liquidity",
      "return_type": "-> u128",
      "span": {
        "start": {
          "line": 153,
          "column": 5
        },
        "end": {
          "line": 155,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 154,
        "column": 9
      },
      "end": {
        "line": 154,
        "column": 33
      }
    },
    "replacement": "1",
    "genre": "FnValue"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/debt.rs",
    "function": {
      "function_name": "DebtType::exact_out",
      "return_type": "-> Self",
      "span": {
        "start": {
          "line": 35,
          "column": 5
        },
        "end": {
          "line": 37,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 36,
        "column": 9
      },
      "end": {
        "line": 36,
        "column": 26
      }
    },
    "replacement": "Default::default()",
    "genre": "FnValue"
  },
  {
    "package": "angstrom-types",
    "file": "crates/types/src/matching/math/mod.rs",
    "function": {
      "function_name": "quadratic_solve",
      "return_type": "-> (Option<Integer>, Option<Integer>)",
      "span": {
        "start": {
          "line": 153,
          "column": 1
        },
        "end": {
          "line": 187,
          "column": 2
        }
      }
    },
    "span": {
      "start": {
        "line": 161,
        "column": 42
      },
      "end": {
        "line": 161,
        "column": 43
      }
    },
    "replacement": "+",
    "genre": "BinaryOperator"
  }
]